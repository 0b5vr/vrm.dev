<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>VRM – ドキュメント</title><link>https://vrm.dev/docs/</link><description>Recent content in ドキュメント on VRM</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 18 Sep 2019 14:21:47 +0900</lastBuildDate><atom:link href="https://vrm.dev/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: install unitypackage</title><link>https://vrm.dev/docs/univrm/install/univrm_install/</link><pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate><guid>https://vrm.dev/docs/univrm/install/univrm_install/</guid><description>
&lt;h2 id="unity-version">Unity Version&lt;/h2>
&lt;p>&lt;code>UniVRM-0.56&lt;/code> から
Unity2018.4LTS以降 + &lt;code>.Net4&lt;/code> 設定をサポートしています。&lt;/p>
&lt;p>UPMでUniVRMをインストールする場合は、&lt;a href="https://vrm.dev/docs/univrm/install/univrm_upm/">UPMでUniVRMをインストールする&lt;/a>ページをご覧ください。&lt;/p>
&lt;h2 id="unitypackage-の入手">unitypackage の入手&lt;/h2>
&lt;p>&lt;a href="https://github.com/vrm-c/UniVRM/releases">https://github.com/vrm-c/UniVRM/releases&lt;/a>&lt;/p>
&lt;p>&lt;code>UniVRM-0.XX.X_XXXX.unitypackage&lt;/code>&lt;/p>
&lt;p>です。&lt;/p>
&lt;h2 id="インストール前の準備">インストール前の準備&lt;/h2>
&lt;ul>
&lt;li>Unity2018.4LTS以降で新規のプロジェクトを作成します&lt;/li>
&lt;li>Console を表示させます。左上の clear ボタンを推して、UniVRMを導入する前にエラー(赤いメッセージ)が無いことを確認してください&lt;/li>
&lt;/ul>
&lt;img src="https://vrm.dev/images/vrm/show_console.jpg" alt="show console" width="500" />
&lt;img src="https://vrm.dev/images/vrm/clear_console.jpg" alt="clear console" width="500" />
&lt;hr>
&lt;ul>
&lt;li>&lt;code>ProjectSettings&lt;/code> - &lt;code>Player&lt;/code> - &lt;code>Other Settings&lt;/code> - &lt;code>Rendering&lt;/code> - &lt;code>ColorSpace&lt;/code> を &lt;code>Linear&lt;/code> に設定します(推奨)&lt;/li>
&lt;/ul>
&lt;img src="https://vrm.dev/images/vrm/linear_setting.jpg" alt="linear setting" width="600" />
&lt;h3 id="既存のプロジェクトで作業する場合">既存のプロジェクトで作業する場合&lt;/h3>
&lt;ul>
&lt;li>&lt;code>ProjectSettings&lt;/code> - &lt;code>Player&lt;/code> - &lt;code>Other Settings&lt;/code> - &lt;code>Scripting Runtime Version&lt;/code> を &lt;code>.Net4.X equivalent&lt;/code> にしてください&lt;/li>
&lt;li>旧バージョンのVRMがインストールされている場合、&lt;code>Assets/VRM&lt;/code> を削除してください&lt;/li>
&lt;/ul>
&lt;h2 id="unitypackage-の-import">unitypackage の import&lt;/h2>
&lt;p>&lt;code>unitypackage&lt;/code> を Import します。&lt;/p>
&lt;p>&lt;code>Assets&lt;/code> - &lt;code>Import Package&lt;/code> - &lt;code>Custom Package...&lt;/code> で &lt;code>UniVRM-0.XX.X_XXXX.unitypackage&lt;/code> を選択します。&lt;/p>
&lt;p>&lt;code>Assets/VRM&lt;/code> と &lt;code>Assets/VRMShaders&lt;/code> の２つのフォルダに import されます。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/package_import.png" alt="package_import" width="350" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>UnityPackageをインポート&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="import-が成功したか確認する方法">import が成功したか確認する方法&lt;/h2>
&lt;p>VRM menu が表示されていれば動作しています。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/vrm_menu.jpg" alt="vrm menu" />
&lt;hr>
&lt;p>menu が出てこない場合は、&lt;/p>
&lt;ul>
&lt;li>&lt;code>ProjectSettings&lt;/code> - &lt;code>Player&lt;/code> - &lt;code>Other Settings&lt;/code> - &lt;code>Scripting Runtime Version&lt;/code> を &lt;code>.Net4.X equivalent&lt;/code> になっていることを確認してください&lt;/li>
&lt;li>Console を表示させます。左上の clear ボタンを推して、UniVRMを導入する前にエラー(赤いメッセージ)が無いことを確認してください&lt;/li>
&lt;/ul></description></item><item><title>Docs: 構成</title><link>https://vrm.dev/dev/univrm-1.xx/structure/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/dev/univrm-1.xx/structure/</guid><description>
&lt;h2 id="assetsvrmlib">Assets/vrmlib&lt;/h2>
&lt;p>GLTFからバイト列を切り出して、index 参照を実体化して作業しやすくした中間の入れ物 &lt;code>VrmLib.Model&lt;/code>。&lt;/p>
&lt;h2 id="assetsprotobufserializer">Assets/ProtobufSerializer&lt;/h2>
&lt;p>VRM-1.0 の読み書き。
ProtocolBufferで定義して、Jsonのシリアライザを生成したもの。&lt;/p>
&lt;p>VRM-1.0 から中間形式の &lt;code>VrmLib.Model&lt;/code> に移し替える。&lt;/p>
&lt;ul>
&lt;li>&lt;code>VRM-1.0 &amp;lt;=&amp;gt; VrmLib.Model&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="assetsvrm">Assets/VRM&lt;/h2>
&lt;p>UniVRM-0.55 に &lt;code>package.json&lt;/code> を追加したもの。&lt;/p>
&lt;ul>
&lt;li>MToon shader&lt;/li>
&lt;li>UniUnlit shader&lt;/li>
&lt;li>VRM-0.X のシリアライザ&lt;/li>
&lt;/ul>
&lt;h2 id="assetsunivrm0xreader">Assets/UniVRM0XReader&lt;/h2>
&lt;p>VRM-0.X から中間形式の &lt;code>VrmLib.Model&lt;/code> に移し替える。&lt;/p>
&lt;ul>
&lt;li>&lt;code>VRM-0.x =&amp;gt; VrmLib.Model&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="assetsunivrm-10">Assets/UniVRM-1.0&lt;/h2>
&lt;ul>
&lt;li>&lt;code>VrmLib.Model &amp;lt;=&amp;gt; Unity&lt;/code>&lt;/li>
&lt;li>右手系・左手系の変換&lt;/li>
&lt;li>スクリプトスレッドで実行する必要あり&lt;/li>
&lt;li>GLTF部分(Mesh, Texture, Material, GameObject, SkinnedMeshRendererなど)&lt;/li>
&lt;li>VRM部分(HumanoidAvatar, BlendShapeProxy, LookAt, FirstPersonなど)&lt;/li>
&lt;/ul></description></item><item><title>Docs: APIの変更履歴</title><link>https://vrm.dev/dev/univrm-0.xx/programming/univrm_api_history/</link><pubDate>Mon, 21 May 2018 10:00:00 +0900</pubDate><guid>https://vrm.dev/dev/univrm-0.xx/programming/univrm_api_history/</guid><description>
&lt;p>プログラムに影響のある変更についてです。&lt;/p>
&lt;p>最新バージョンは&lt;a href="https://github.com/vrm-c/UniVRM/wiki">UniVRM/Wiki&lt;/a>をご覧ください。&lt;/p>
&lt;h1 id="v036">v0.36&lt;/h1>
&lt;h2 id="テクスチャ名の格納位置の修正">テクスチャ名の格納位置の修正&lt;/h2>
&lt;p>GLTFの仕様に準拠しました。&lt;/p>
&lt;ul>
&lt;li>extraはextrasの間違い&lt;/li>
&lt;li>imageはnameを持っていた&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#a40000">json.images&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#a40000">i&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#a40000">.extra.name&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>変更後&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#a40000">json.images&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#a40000">i&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#a40000">.name&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ブレンドシェイプ名の格納位置の修正">ブレンドシェイプ名の格納位置の修正&lt;/h2>
&lt;p>GLTFの仕様に準拠しました。&lt;/p>
&lt;ul>
&lt;li>extraはextrasの間違い&lt;/li>
&lt;li>targetにextrasは不許可&lt;/li>
&lt;li>&lt;a href="https://github.com/KhronosGroup/glTF/issues/1036#issuecomment-314078356">https://github.com/KhronosGroup/glTF/issues/1036#issuecomment-314078356&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#a40000">json.meshes&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#a40000">i&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#a40000">.primitives&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#a40000">j&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#a40000">.targets&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#a40000">k&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#a40000">.extra.name&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>変更後&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#a40000">json.meshes&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#a40000">i&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#a40000">.primitives&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#a40000">j&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#a40000">.extras.targetNames&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#a40000">k&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: ブレンドシェイプの設定</title><link>https://vrm.dev/docs/univrm/blendshape/univrm_blendshape/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/docs/univrm/blendshape/univrm_blendshape/</guid><description>
&lt;p>UniVRM v0.45で導入された新機能は&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://vrm.dev/docs/univrm/blendshape/blendshape_setup/">設定画面&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://vrm.dev/docs/univrm/blendshape/univrm_bake_blendshape/">BlendShapeの状態をベイクする&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>をご覧ください。&lt;/p>
&lt;h2 id="vrmblendshapeproxy">VRMBlendShapeProxy&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/VRMBlendShapeProxy.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>実行時のVRMBlendShapeProxyのインスペクタ。Editorをプレイ状態にすると表示されます&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>使い方は、&lt;/p>
&lt;ul>
&lt;li>BlendShapeAvatarのインスペクタで設定する(Editor)&lt;/li>
&lt;li>BlendShapeClipの値を０~１に変更する(実行時)&lt;/li>
&lt;/ul>
&lt;p>となっています。&lt;/p>
&lt;h2 id="blendshapeavatar">BlendShapeAvatar&lt;/h2>
&lt;p>このアセットのインスペクタで表情設定を作成します。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/VRMBlendShapeProxyEditor.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>これをダブルクリックする&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>か&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/BlendShapeAvatarAsset.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>これを選択状態にする&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/BlendShapeAvatarEditor.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>BlendShapeEditorのインスペクタ&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>作りたい表情の名前を選択して表示を切り替えます。
以下、Funを選択した例です。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/BlendShapeClip.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>mouth_smileとeye_smileとeyeblow_smileを100にする&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>画像のように眉毛と目と口のBlendShapeがわかれているBlendShapeをグループ化して名前とプリセットを指定することができます。&lt;/p>
&lt;p>Sliderを変更してBlendShapeを作った後はApplyを押して値を記録してください。&lt;/p>
&lt;h2 id="blendshapeのプリセット">BlendShapeのプリセット&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/BlendShape_Preset.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Presetを選択する&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>BlendShapeClipに対して事前定義された名前です。
以下のものがあります。&lt;/p>
&lt;h3 id="neutral">NEUTRAL&lt;/h3>
&lt;p>標準の表情を指定します。
待機状態で使うことを想定しています。&lt;/p>
&lt;h3 id="a-i-u-e-o">A, I, U, E, O&lt;/h3>
&lt;p>リップシンクの&lt;code>あ・い・う・え・お&lt;/code>の音声に対応します。&lt;/p>
&lt;h3 id="blink">Blink&lt;/h3>
&lt;p>まばたきです。&lt;/p>
&lt;h3 id="blink_l-blink_r">Blink_L, Blink_R&lt;/h3>
&lt;p>片目だけつぶる動作です。&lt;/p>
&lt;h3 id="joy-angry-sorrow-fun">Joy, Angry, Sorrow, Fun&lt;/h3>
&lt;p>喜怒哀楽です。&lt;/p>
&lt;h3 id="lookup-lookdown-lookleft-lookright">LookUp, LookDown, LookLeft, LookRight&lt;/h3>
&lt;p>目線がモーフで制御されているタイプのモデルで使います。&lt;/p>
&lt;h3 id="unknown">Unknown&lt;/h3>
&lt;p>事前定義に無い表情などを作るときに指定します。&lt;/p>
&lt;h2 id="blendshapeproxyの値を変更する実行時">BlendShapeProxyの値を変更する(実行時)&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/VRMBlendShapeProxyRuntime.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Presetを使う&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>インスペクタから操作できます。&lt;/p>
&lt;h2 id="オプション表情を追加する">[オプション]表情を追加する&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/VRMBlendShapeProxyRuntime.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ボタンを押します&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>保存ファイルを決めます。
一番後ろのボタンを選択して名前を入力して設定を作成してください。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/BlendShapeClipOption.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ボタンを押します&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>コードからは以下のように呼び出せます。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#8f5902;font-style:italic">// unknownなのでstringで呼び出し
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ImmediatelySetValue&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;びっくり&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1.0f&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// 0から1で指定
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="オプションマテリアルの色をモーフする">[オプション]マテリアルの色をモーフする&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/BlendShapeClipMaterial.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Materialモーフの設定&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: GLTFについて</title><link>https://vrm.dev/docs/univrm/gltf/gltf_about/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/docs/univrm/gltf/gltf_about/</guid><description>
&lt;p>glTFはOpenGLの仕様策定をしているKHRONOSによる3Dフォーマットです。2017年にVersion2が策定されました。
VRMはglTF2.0をベースとしたフォーマットとなっています。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/KhronosGroup/glTF">https://github.com/KhronosGroup/glTF&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="gltfはどんな情報を記録できるのか">glTFはどんな情報を記録できるのか&lt;/h1>
&lt;ul>
&lt;li>メッシュ(頂点配列、インデックス配列)
&lt;ul>
&lt;li>モーフターゲット&lt;/li>
&lt;li>スキニング(4weight)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>テクスチャ&lt;/li>
&lt;li>マテリアル(PBR)&lt;/li>
&lt;li>シーン&lt;/li>
&lt;li>アニメーション&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/li>
&lt;li>カメラ&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/li>
&lt;li>光源&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/li>
&lt;/ul>
&lt;p>3Dのシーン全体を記録できます。&lt;/p>
&lt;ul>
&lt;li>OpenGLの右手系Y-UP座標&lt;/li>
&lt;li>メートル単位&lt;/li>
&lt;li>リトルエンディアン&lt;/li>
&lt;/ul>
&lt;h1 id="gltfフォーマット概説">glTFフォーマット概説&lt;/h1>
&lt;p>JSON記述部と、画像や頂点配列を記録するバイナリ部の２つの部分からなります。&lt;/p>
&lt;p>gltf形式では、URLやパスで参照する方法で外部のバイナリデータにアクセスします。
glb形式ではJSON部とバイナリ部をひとつのファイルにまとめていて、バイト列のオフセットでバイナリデータにアクセスします。
プログラムから扱うには外部ファイルへのアクセスが無いglb形式の方が簡単&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>です。&lt;/p>
&lt;h1 id="glb形式">glb形式&lt;/h1>
&lt;p>&lt;code>ヘッダ部 + チャンク部繰り返し&lt;/code>という構造になっています。
実質的には、
&lt;code>ヘッダ部 + JSON CHUNk + BINARY CHUNK&lt;/code>となります。&lt;/p>
&lt;p>ヘッダ部&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">長さ&lt;/th>
&lt;th align="left">内容&lt;/th>
&lt;th align="left">型&lt;/th>
&lt;th align="left">値&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">4&lt;/td>
&lt;td align="left">&lt;/td>
&lt;td align="left">ascii&lt;/td>
&lt;td align="left">&amp;ldquo;glTF&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">4&lt;/td>
&lt;td align="left">gltfバージョン&lt;/td>
&lt;td align="left">int32&lt;/td>
&lt;td align="left">2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">4&lt;/td>
&lt;td align="left">file size&lt;/td>
&lt;td align="left">int32&lt;/td>
&lt;td align="left">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>チャンク部&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">長さ&lt;/th>
&lt;th align="left">内容&lt;/th>
&lt;th align="left">型&lt;/th>
&lt;th align="left">値&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">4&lt;/td>
&lt;td align="left">chunk size&lt;/td>
&lt;td align="left">int32&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">4&lt;/td>
&lt;td align="left">chunk type&lt;/td>
&lt;td align="left">ascii&lt;/td>
&lt;td align="left">&amp;ldquo;JSON&amp;rdquo; or &amp;ldquo;BIN\x00&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">chunk size&lt;/td>
&lt;td align="left">chunk body&lt;/td>
&lt;td align="left">バイト列&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="python3によるパース例">python3によるパース例&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">struct&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">json&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">Reader&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">__init__&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&amp;gt;&lt;/span>&lt;span style="color:#3465a4">None&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">data&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">data&lt;/span>
&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">pos&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">read_str&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">size&lt;/span>&lt;span style="color:#000;font-weight:bold">):&lt;/span>
&lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">pos&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">pos&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">size&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">pos&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+=&lt;/span> &lt;span style="color:#000">size&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">strip&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">read&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">size&lt;/span>&lt;span style="color:#000;font-weight:bold">):&lt;/span>
&lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">pos&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">pos&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">size&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">pos&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+=&lt;/span> &lt;span style="color:#000">size&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">result&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">read_uint&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#000;font-weight:bold">):&lt;/span>
&lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">struct&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">unpack&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;I&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">pos&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">pos&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">])[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">pos&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">result&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">parse_glb&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">):&lt;/span>
&lt;span style="color:#000">reader&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">Reader&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">magic&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">read_str&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">magic&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#4e9a06">b&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;glTF&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">raise&lt;/span> &lt;span style="color:#c00;font-weight:bold">Exception&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">f&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;magic not found: #{magic}&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">version&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">read_uint&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">version&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">raise&lt;/span> &lt;span style="color:#c00;font-weight:bold">Exception&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">f&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;version:#{version} is not 2&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">size&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">read_uint&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000">size&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">12&lt;/span>
&lt;span style="color:#000">json_str&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#3465a4">None&lt;/span>
&lt;span style="color:#000">body&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#3465a4">None&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#000">size&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#print(size)&lt;/span>
&lt;span style="color:#000">chunk_size&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">read_uint&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000">size&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>
&lt;span style="color:#000">chunk_type&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">read_str&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">size&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>
&lt;span style="color:#000">chunk_data&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">reader&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">read&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">chunk_size&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">size&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-=&lt;/span> &lt;span style="color:#000">chunk_size&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">chunk_type&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#4e9a06">b&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;BIN&lt;/span>&lt;span style="color:#4e9a06">\x00&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">body&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">chunk_data&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">elif&lt;/span> &lt;span style="color:#000">chunk_type&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#4e9a06">b&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;JSON&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">json_str&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">chunk_data&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">raise&lt;/span> &lt;span style="color:#c00;font-weight:bold">Exception&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">f&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;unknown chunk_type: {chunk_type}&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">json&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">loads&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">json_str&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#000">body&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">with&lt;/span> &lt;span style="color:#204a87">open&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;AliciaSolid.vrm&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;rb&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">f&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">parsed&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">body&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">parse_glb&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">f&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">read&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h1 id="vrmによる拡張情報">VRMによる拡張情報&lt;/h1>
&lt;p>JSONの&lt;code>json['extensions']['VRM']&lt;/code>以下に格納されています。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/vrm-c/vrm-specification/blob/master/specification/0.0/README.ja.md">VRM仕様&lt;/a>&lt;/li>
&lt;/ul>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>VRMではサポートしていません &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>VRMではglbを採用しています。 &lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Docs: LookAt</title><link>https://vrm.dev/docs/univrm/lookat/univrm_lookat/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/docs/univrm/lookat/univrm_lookat/</guid><description>
&lt;p>VRMでは頭から目標(注視点)への相対的な回転(Yaw, Pitch)を得て、
目に適用できます。&lt;/p>
&lt;ul>
&lt;li>VRMLookAtHead + VRMLookAtBoneApplyer または VRMLookAtBlendShapeApplyer の２つのコンポーネントで設定します。&lt;/li>
&lt;/ul>
&lt;h2 id="lookatの種類">LookAtの種類&lt;/h2>
&lt;p>注視点への Yaw, Pitch 角を適用する方法が以下の３種類あります。
モデルに応じて選択してください。&lt;/p>
&lt;h3 id="bone">Bone&lt;/h3>
&lt;p>&lt;a href="https://vrm.dev/docs/univrm/lookat/lookat_bone/">eye ボーンが回転するタイプ&lt;/a>&lt;/p>
&lt;h3 id="blendshape">BlendShape&lt;/h3>
&lt;p>&lt;a href="https://vrm.dev/docs/univrm/lookat/lookat_blendshape/">BlendShapeの頂点移動で制御するタイプ&lt;/a>&lt;/p>
&lt;h3 id="textureuv">TextureUV&lt;/h3>
&lt;p>&lt;a href="https://vrm.dev/docs/univrm/lookat/lookat_uv/">目のテクスチャの &lt;code>UV Offset&lt;/code> で制御するタイプ&lt;/a>&lt;/p>
&lt;h2 id="vrmlookathead">VRMLookAtHead&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/VRMLookAtHead.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>VRMLookAtHead&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>このコンポーネントは頭から見たTargetの方向を計算します。&lt;/p>
&lt;h3 id="target">Target&lt;/h3>
&lt;blockquote>
&lt;p>Application設定 です。モデルのセットアップには使いません&lt;/p>
&lt;/blockquote>
&lt;p>注視する対象物です。目を向けたい場所にあるオブジェクトをセットしてください。
カメラをセットすればカメラ目線になります。&lt;/p>
&lt;h2 id="視線計算の基準位置">視線計算の基準位置&lt;/h2>
&lt;p>VRMFirstPerson の FirstPersonOffset で Head ボーンからの相対的な基準位置を設定できます。&lt;/p>
&lt;blockquote>
&lt;p>eye bone を使う場合は目の間が推定できるのですがblendShape を使う場合には位置がわからないので、明示的に設定するようになっています。&lt;/p>
&lt;/blockquote></description></item><item><title>Docs: MToon</title><link>https://vrm.dev/docs/univrm/shaders/mtoon/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/docs/univrm/shaders/mtoon/</guid><description>
&lt;p>&lt;a href="https://www.slideshare.net/VirtualCast/vrm-mtoon">MToonの使い方&lt;/a>&lt;/p>
&lt;h1 id="mtoon-について">MToon について&lt;/h1>
&lt;p>MToon は日本のアニメ的表現をすることを目標としています。
主色 (Lit Color) と陰色 (Shade Color) の 2 色を、Lighting パラメータや光源環境に応じて混合することでそれを実現します。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/mtoon_about.png" alt="alicia MToon" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>MToon を適用したニコニ立体ちゃん&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="手早く設定したい人向け">手早く設定したい人向け&lt;/h1>
&lt;h2 id="共通項目">共通項目&lt;/h2>
&lt;ul>
&lt;li>目的のマテリアルを選択し、シェーダを &lt;code>VRM/MToon&lt;/code> に変更&lt;/li>
&lt;li>&lt;code>Color-&amp;gt;Lit Color, Alpha&lt;/code> と &lt;code>Color-&amp;gt;Shade Color&lt;/code> に同じテクスチャを設定&lt;/li>
&lt;li>&lt;code>Color-&amp;gt;Lit Color, Alpha&lt;/code> は白色 &lt;code>Color-&amp;gt;Shade Color&lt;/code> は好きな陰色を設定&lt;/li>
&lt;li>&lt;code>Shading-&amp;gt;Toony&lt;/code> は好きな値。主色と影色をパキッとさせたいときは &lt;code>1&lt;/code>&lt;/li>
&lt;li>&lt;code>Rim-&amp;gt;Additive&lt;/code> は &lt;code>Spheremap&lt;/code> や &lt;code>MatCap&lt;/code> と同等のテクスチャを設定&lt;/li>
&lt;li>&lt;code>Outline-&amp;gt;Width-&amp;gt;Mode&lt;/code> は輪郭線を必要とするなら &lt;code>WorldCoordinates&lt;/code> で、しないなら &lt;code>None&lt;/code>&lt;/li>
&lt;li>&lt;code>Outline-&amp;gt;Width-&amp;gt;Width&lt;/code> は 見た目上好きな値&lt;/li>
&lt;/ul>
&lt;h2 id="普通のマテリアル">普通のマテリアル&lt;/h2>
&lt;ul>
&lt;li>&lt;code>Shading Shift&lt;/code> は &lt;code>0&lt;/code>&lt;/li>
&lt;li>&lt;code>Shading Toony-&amp;gt;Shadow Receive Multiplier&lt;/code> は &lt;code>1&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="キャラクタの顔など影があまりついてほしくないマテリアル">キャラクタの顔など、影があまりついてほしくないマテリアル&lt;/h2>
&lt;ul>
&lt;li>&lt;code>Shading Shift&lt;/code> はマイナスの値&lt;/li>
&lt;li>&lt;code>Shading Toony-&amp;gt;Shadow Receive Multiplier&lt;/code> は &lt;code>0&lt;/code>&lt;/li>
&lt;/ul>
&lt;h1 id="設定項目">設定項目&lt;/h1>
&lt;h2 id="準備">準備&lt;/h2>
&lt;p>目的のマテリアルを選択し、シェーダを &lt;code>VRM/MToon&lt;/code> に変更します。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/set_mtoon.png" alt="select MToon" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Material の Shader を VRM/MToon に変更.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="rendering">Rendering&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/mtoon_inspector_rendering.png" alt="MToon Rendering" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Rendering Inspector に含まれる項目.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Rendering 項目では主色と影色、および描画方法を設定します。&lt;/p>
&lt;h3 id="rendering-type">Rendering Type&lt;/h3>
&lt;p>マテリアルが不透明か半透明かどうかを設定します。&lt;/p>
&lt;ul>
&lt;li>Opaque
&lt;ul>
&lt;li>不透明です。基本的には Opaque を設定することを推奨します。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Cutout
&lt;ul>
&lt;li>不透明ですが &lt;code>Color-&amp;gt;Lit Color, Alpha&lt;/code> のアルファ値情報を参照して &lt;code>Color-&amp;gt;Alpha-&amp;gt;Cutoff&lt;/code> の値より小さな箇所の描画をスキップします。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Transparent
&lt;ul>
&lt;li>半透明です。&lt;code>Color-&amp;gt;Lit Color, Alpha&lt;/code> のアルファ値どおりの不透明度になります。&lt;/li>
&lt;li>デメリットとして輪郭線描画は正しく行われません。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="cull-mode">Cull Mode&lt;/h3>
&lt;p>ポリゴンのどちら側の面を描画するかを設定します。&lt;/p>
&lt;ul>
&lt;li>Back
&lt;ul>
&lt;li>表側を描画します。基本的にはこの Back を選択します。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Front
&lt;ul>
&lt;li>裏側を描画します。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>None
&lt;ul>
&lt;li>両面を描画します。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="alpha">Alpha&lt;/h3>
&lt;p>&lt;code>Rendering Type&lt;/code> が &lt;code>Cutout&lt;/code> であるときだけ設定する必要があります。&lt;/p>
&lt;ul>
&lt;li>Cutoff (&lt;code>Color-&amp;gt;Alpha&lt;/code>)
&lt;ul>
&lt;li>描画するしないのしきい値を設定します。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="color">Color&lt;/h2>
&lt;p>描画色を設定します。
テクスチャと色は乗算されます。
光が当たる主色は &lt;code>Lit Color, Alpha&lt;/code> に、光が当たらない陰色は &lt;code>Shade Color&lt;/code> に設定します。
また &lt;code>Lit Color, Alpha&lt;/code> のアルファ値には不透明度情報を設定します。&lt;/p>
&lt;h2 id="lighting">Lighting&lt;/h2>
&lt;h3 id="shading-shift">Shading Shift&lt;/h3>
&lt;p>光の当たり方に対して、主色と陰色のしきい値を調整します。
&lt;code>0&lt;/code> のとき普通のライティングになります。
マイナス値にするとアニメ的な、主色の範囲が広いライティングになります。
マイナス値のときはセルフシャドウを無効化する必要があるため、表示された警告に従い &lt;code>Shadow Receive Multiplier&lt;/code> を &lt;code>0&lt;/code> に設定する必要があります。&lt;/p>
&lt;h3 id="shading-toony">Shading Toony&lt;/h3>
&lt;p>&lt;code>Shading Shift&lt;/code> の項目における主色と陰色のしきい値付近を滑らかに変化させるか否かを設定します。
&lt;code>0&lt;/code> のときは通常の Lambert モデルのような写実寄りの滑らかさになります。
&lt;code>1&lt;/code> のときはしきい値ではっきり主色と陰色が変化するアニメ調のライティングになります。&lt;/p>
&lt;h3 id="shadow-receive-multiplier">Shadow Receive Multiplier&lt;/h3>
&lt;p>セルフシャドウや落影の影響度を設定します。
&lt;code>0&lt;/code> のときは影響を受けません。
&lt;code>1&lt;/code> のときは影響を受けます。&lt;/p>
&lt;h3 id="lightcolor-attenuation">LightColor Attenuation&lt;/h3>
&lt;p>光源の色の影響度を設定します。
&lt;code>0&lt;/code> のときは光源の色の影響を受けます。
&lt;code>1&lt;/code> のときは光源の色の影響を無効化し、光源の色の輝度だけを反映します。&lt;/p>
&lt;h3 id="rim-additive">Rim Additive&lt;/h3>
&lt;p>カメラと法線の関係による追加光源を表現します。
一般にはスフィアマップや MatCap と呼ばれます。&lt;/p>
&lt;h3 id="emission">Emission&lt;/h3>
&lt;p>光源環境によらず一定な色を設定します。&lt;/p>
&lt;h3 id="normal-map">Normal Map&lt;/h3>
&lt;p>法線マップを設定します。
右側の値は法線マップの強さを設定します。&lt;/p>
&lt;h2 id="outline">Outline&lt;/h2>
&lt;p>輪郭線を設定します。&lt;/p>
&lt;h3 id="width-mode">Width Mode&lt;/h3>
&lt;ul>
&lt;li>None
&lt;ul>
&lt;li>輪郭線を描画しません&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>WorldCoordinates
&lt;ul>
&lt;li>世界に対して一定の幅の輪郭線を描画します&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ScreenCoordinates
&lt;ul>
&lt;li>スクリーンに対して一定の幅の輪郭線を描画します&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="width">Width&lt;/h3>
&lt;p>輪郭線の幅を設定します。
&lt;code>Width Mode&lt;/code> が &lt;code>WorldCoordinates&lt;/code> のとき単位はメートルです。&lt;/p>
&lt;h3 id="color-mode">Color Mode&lt;/h3>
&lt;ul>
&lt;li>FixedColor
&lt;ul>
&lt;li>固定色で描画します&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>MixedLighting
&lt;ul>
&lt;li>ライティングの影響を乗算します&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="color-1">Color&lt;/h3>
&lt;p>輪郭線の色を設定します。&lt;/p>
&lt;h3 id="color-lighting-mix">Color Lighting Mix&lt;/h3>
&lt;p>&lt;code>Color Mode&lt;/code> が &lt;code>MixedLighting&lt;/code> のとき、その乗算係数を設定します。&lt;/p></description></item><item><title>Docs: 「VRM」って何？どんなことができる？</title><link>https://vrm.dev/vrm_about/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/vrm_about/</guid><description>
&lt;h2 id="vrmとは">「VRM」とは&lt;/h2>
&lt;p>VR(Virtual Reality)やVTuberなどにおいて**「キャラクターや人型のアバター（の3Dモデル）」**を取り扱おうとした場合、従来はアプリケーションごと・3Dモデルデータごとに独自のシステムを開発したり細かく調整したりする必要がありました。&lt;/p>
&lt;p>というのも…&lt;/p>
&lt;ul>
&lt;li>3Dモデルを作成したクリエイターや使用したモデリングツールによって「作法」が違いデータの状況がひとつひとつ異なっている
&lt;ul>
&lt;li>座標系が異なっていたり、スケールが異なっていたり、初期姿勢が異なっていたり、表情の表現方法が異なっていたり…&lt;/li>
&lt;li>もちろん、骨（ボーン）の入れ方も状況によって異なっていたり&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>3Dモデルデータを取り扱うフォーマットは、各社各様で仕様が必要以上に複雑であったり、必要な情報が足りなかったりしている
&lt;ul>
&lt;li>対応ソフトが多い「FBXファイル」はアプリケーションごとに読めたり読めなかったり。どのアプリケーションのどのバージョンで出力したFBXなのか…というのを気にしたかたも多いと思います&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>3Dモデルデータを「アバターとして使用する」という観点で見ると、必要な情報が整備されていない
&lt;ul>
&lt;li>たとえば一人称視点を実現するための視点の位置はどこか、一人称視点から表示するためには頭部の表示を消さなければならないが、具体的にはどこを消すのか、など&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>VRでのアバター表現が急速に盛り上がるなか、こういった状況が続くとアプリケーション開発者にとっても、3Dモデルクリエイターにとっても二度手間三度手間になってしまいます。
この状況を改善するために&lt;/p>
&lt;ul>
&lt;li>「人型のキャラクターやアバター」において&lt;/li>
&lt;li>細かいモデルデータの差違を吸収・統一し&lt;/li>
&lt;li>アプリケーション側の取り扱いを簡単にする&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>「VRM」は、このような特徴のある「プラットフォーム非依存の3Dアバターファイルフォーマット」を提案する&lt;/strong>ものです。&lt;/p>
&lt;hr>
&lt;h2 id="vrmで何ができるの">VRMで何ができるの？&lt;/h2>
&lt;img src="https://vrm.dev/images/vrm/VRM_WorldConnect_jp.png" alt="VRM applications" />
&lt;p>&lt;strong>VRM対応アプリケーションで同じアバター（3Dモデル）データを使うことができます。&lt;/strong>
対応アプリケーションが揃うと、こんな未来になるはず…&lt;/p>
&lt;ul>
&lt;li>VRM対応のキャラクタ製作ツールで自分のアバターをつくる&lt;/li>
&lt;li>自分のアバターで生放送をしていたら、友達も生放送をはじめたので友達の放送に凸しに行った&lt;/li>
&lt;li>放送後そのままVRゲームを起動、自分のアバターでVR世界を探索&lt;/li>
&lt;li>ゲームに飽きたのでVR世界のチャットへ移動。同じアバターで友達と遊ぶ&lt;/li>
&lt;li>翌日はVR勉強会にVR参加。もちろんアバターはいつもの姿で&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>「自分の」アバター（3Dモデルデータ）を「VRM」で取り扱うことで、いろいろなVRM対応アプリケーションやゲームで相互に行き来できるようになります。&lt;/strong>&lt;/p>
&lt;p>生放送、動画作成、ゲーム、チャット…。いまは複数のVR世界が分断されています。この分断されたVR世界をつなぐための第一歩、それがVRMなのです。&lt;/p>
&lt;hr>
&lt;h2 id="vrmの特徴">VRMの特徴&lt;/h2>
&lt;p>VRMでは「人型」の「キャラクター・アバター」を取り扱うことができます。&lt;strong>UnityでVRMファイルを読み書きする標準実装が提供されます&lt;/strong>が、&lt;strong>フォーマット自体はプラットフォーム非依存&lt;/strong>であり他エンジンや環境でも取り扱うことが可能です。&lt;/p>
&lt;ul>
&lt;li>プラットフォーム非依存で人型のキャラクター3Dモデルデータを取り扱うことが可能&lt;/li>
&lt;li>3D標準フォーマット glTF2.0をベースとして、人型モデルを取り扱うための制約と拡張を加えたフォーマット。標準フォーマットをベースとしているため実装も容易&lt;/li>
&lt;li>テクスチャやマテリアルなどすべてのデータを含めて１ファイルにまとまる。ファイル一つで取り扱い可能&lt;/li>
&lt;li>スケール（1.00 = 1m）・座標系と向き（Y-up, -Z方向向き）・骨の構造（Unity Humanoid準拠構成, Tスタンス, 各骨にローカルの回転などを入れない）などについて標準の構成が決められておりモデリングツールによる差違の影響を受けない&lt;/li>
&lt;li>Blend Shapeやマテリアルの透明度など「キャラクターの表情」を取り扱うためにはさまざまな技法が使われるが、その技法の差違をVRM側で吸収し統一したAPIで操作できる&lt;/li>
&lt;li>VRでのアバター利用のための、**「一人称視点再現のための情報」**に対応。&lt;/li>
&lt;li>キャラクターの髪の毛などについて、物理エンジンに依存しない「揺れ物」標準実装を用意、設定可能に&lt;/li>
&lt;li>標準実装としてのマテリアル（シェーダ）を用意。標準的なPBRだけでなくトゥーンシェーディングやUnlitレンダリングを設定可能&lt;/li>
&lt;li>タイトル・作者名などのメタ情報だけでなく、サムネイルや&lt;strong>VR時代に即した、アバターに特化したライセンス情報&lt;/strong>も内包可能&lt;/li>
&lt;/ul>
&lt;p>VRMは複数アプリケーション間で相互利用されることが想定される、VR時代の3Dアバターフォーマットです。たとえば「ネットワークに相互接続されたアバターによるVRコミュニケーション」を考えた場合、&lt;strong>自分のアバターデータを「他の人から自分の姿が見えるように」他のユーザへ送信する&lt;/strong>、ということも行われることになります。
この場合、従来の考え方に基づく「再配布」規定だけでは対応できない場面が考えられます。そのため、VRMでは&lt;/p>
&lt;ul>
&lt;li>モデルデータ自体に対しての改変・再配布規定（Creative Commonsなどから設定可能）&lt;/li>
&lt;/ul>
&lt;p>のほかに&lt;/p>
&lt;ul>
&lt;li>モデルデータを使用して「人格を演じる」ことについての許諾規定&lt;/li>
&lt;/ul>
&lt;p>を&lt;strong>ファイルに設定できる&lt;/strong>など、VR時代を想定したフォーマットとなっています。&lt;/p>
&lt;hr>
&lt;h2 id="vrmファイルに設定できるライセンスデータ">VRMファイルに設定できるライセンスデータ&lt;/h2>
&lt;h3 id="アバターの人格に関する許諾範囲personation--characterization-permission">アバターの人格に関する許諾範囲(Personation / Characterization Permission)&lt;/h3>
&lt;h4 id="アバターに人格を与えることの許諾範囲a-person-who-can-perform-with-this-avatar">アバターに人格を与えることの許諾範囲(A person who can perform with this avatar)&lt;/h4>
&lt;ul>
&lt;li>アバターを操作することはアバター作者にのみ許される(Only Author)&lt;/li>
&lt;li>明確に許可された人限定(Explicitly Licensed Person)&lt;/li>
&lt;li>全員に許可(Everyone)&lt;/li>
&lt;/ul>
&lt;h4 id="このアバターを用いて暴力表現を演じることの許可violent-acts-using-this-avatar">このアバターを用いて暴力表現を演じることの許可(Violent acts using this avatar)&lt;/h4>
&lt;ul>
&lt;li>不許可(Disallow)&lt;/li>
&lt;li>許可(Allow)&lt;/li>
&lt;/ul>
&lt;h4 id="このアバターを用いて性的表現を演じることの許可sexuality-acts-using-this-avatar">このアバターを用いて性的表現を演じることの許可(Sexuality acts using this avatar)&lt;/h4>
&lt;ul>
&lt;li>不許可(Disallow)&lt;/li>
&lt;li>許可(Allow)&lt;/li>
&lt;/ul>
&lt;h4 id="商用利用の許可for-commercial-use">商用利用の許可(For commercial use)&lt;/h4>
&lt;ul>
&lt;li>不許可(Disallow)&lt;/li>
&lt;li>許可(Allow)&lt;/li>
&lt;/ul>
&lt;h4 id="その他のライセンス条件other-license-url">その他のライセンス条件(Other License Url)&lt;/h4>
&lt;p>上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/p>
&lt;h3 id="再配布改変に関する許諾範囲redistribution--modifications-license">再配布・改変に関する許諾範囲(Redistribution / Modifications License)&lt;/h3>
&lt;h4 id="ライセンスタイプlicense-type">ライセンスタイプ(License Type)&lt;/h4>
&lt;ul>
&lt;li>再配布禁止(Redistribution Prohibited)&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/publicdomain/zero/1.0/deed.ja">著作権放棄(CC0)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by/4.0/deed.ja">Creative Commons CC BYライセンス(CC_BY)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/deed.ja">Creative Commons CC BY NCライセンス(CC_BY_NC)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-sa/4.0/deed.ja">Creative Commons CC BY SAライセンス(CC_BY_SA)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ja">Creative Commons CC BY NC SAライセンス(CC_BY_NC_SA)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-nd/4.0/deed.ja">Creative Commons CC BY NDライセンス(CC_BY_ND)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.ja">Creative Commons CC BY NC NDライセンス(CC_BY_NC_ND)&lt;/a>&lt;/li>
&lt;li>その他(Other)&lt;/li>
&lt;/ul>
&lt;h4 id="その他ライセンス条件other-license-url">その他ライセンス条件(Other License Url)&lt;/h4>
&lt;p>上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/p></description></item><item><title>Docs: モデル情報</title><link>https://vrm.dev/docs/univrm/meta/univrm_meta/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/docs/univrm/meta/univrm_meta/</guid><description>
&lt;h2 id="vrmmeta">VRMMeta&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/meta.png" alt="meta" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>VRMMetaコンポーネント&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="情報information">情報(Information)&lt;/h3>
&lt;h4 id="タイトルtitle">タイトル(Title)&lt;/h4>
&lt;p>アバターモデルの名前を設定します&lt;/p>
&lt;h4 id="作者author">作者(Author)&lt;/h4>
&lt;p>モデルの作者の名前を記述します&lt;/p>
&lt;h4 id="連絡先contact-information">連絡先(Contact Information)&lt;/h4>
&lt;p>モデルの作者への連絡先を記述します&lt;/p>
&lt;h4 id="参照reference">参照(Reference)&lt;/h4>
&lt;p>何か「親作品」に相当するものがある場合は参照URLなどを記述します&lt;/p>
&lt;h4 id="サムネイルthumbnail">サムネイル(Thumbnail)&lt;/h4>
&lt;p>アバターモデルのサムネイルを登録します。2048x2048程度の解像度を推奨します。&lt;/p>
&lt;h4 id="バージョン">バージョン&lt;/h4>
&lt;p>モデルのバージョンを文字列で指定します。
自由に記述できます。&lt;/p>
&lt;h3 id="使用許諾ライセンス情報license">使用許諾・ライセンス情報(License)&lt;/h3>
&lt;h4 id="アバターの人格に関する許諾範囲personation--charaterization-permission">アバターの人格に関する許諾範囲(Personation / Charaterization Permission)&lt;/h4>
&lt;h5 id="アバターに人格を与えることの許諾範囲a-person-who-can-perform-with-this-avatar">アバターに人格を与えることの許諾範囲(A person who can perform with this avatar)&lt;/h5>
&lt;ul>
&lt;li>アバターを操作することはアバター作者にのみ許される(Only Author)&lt;/li>
&lt;li>明確に許可された人限定(Explictly Licensed Person)&lt;/li>
&lt;li>全員に許可(Everyone)&lt;/li>
&lt;/ul>
&lt;h5 id="このアバターを用いて暴力表現を演じることの許可violent-acts-using-this-avatar">このアバターを用いて暴力表現を演じることの許可(Violent acts using this avatar)&lt;/h5>
&lt;ul>
&lt;li>不許可(Disallow)&lt;/li>
&lt;li>許可(Allow)&lt;/li>
&lt;/ul>
&lt;h5 id="このアバターを用いて性的表現を演じることの許可sexuality-acts-using-this-avatar">このアバターを用いて性的表現を演じることの許可(Sexuality acts using this avatar)&lt;/h5>
&lt;ul>
&lt;li>不許可(Disallow)&lt;/li>
&lt;li>許可(Allow)&lt;/li>
&lt;/ul>
&lt;h5 id="商用利用の許可for-commercial-use">商用利用の許可(For commercial use)&lt;/h5>
&lt;ul>
&lt;li>不許可(Disallow)&lt;/li>
&lt;li>許可(Allow)&lt;/li>
&lt;/ul>
&lt;h5 id="その他のライセンス条件other-license-url">その他のライセンス条件(Other License Url)&lt;/h5>
&lt;p>上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/p>
&lt;h4 id="再配布改変に関する許諾範囲redistribution--modifications-license">再配布・改変に関する許諾範囲(Redistribution / Modifications License)&lt;/h4>
&lt;h5 id="ライセンスタイプlicense-type">ライセンスタイプ(License Type)&lt;/h5>
&lt;ul>
&lt;li>再配布禁止(Redistribution Prohibited)&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/publicdomain/zero/1.0/deed.ja">著作権放棄(CC0)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by/4.0/deed.ja">Creative Commons CC BYライセンス(CC_BY)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/deed.ja">Creative Commons CC BY NCライセンス(CC_BY_NC)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-sa/4.0/deed.ja">Creative Commons CC BY SAライセンス(CC_BY_SA)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ja">Creative Commons CC BY NC SAライセンス(CC_BY_NC_SA)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-nd/4.0/deed.ja">Creative Commons CC BY NDライセンス(CC_BY_ND)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.ja">Creative Commons CC BY NC NDライセンス(CC_BY_NC_ND)&lt;/a>&lt;/li>
&lt;li>その他(Other)&lt;/li>
&lt;/ul>
&lt;h5 id="その他ライセンス条件other-license-url">その他ライセンス条件(Other License Url)&lt;/h5>
&lt;p>上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/p></description></item><item><title>Docs: ワークフロー</title><link>https://vrm.dev/docs/univrm/univrm_workflow/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/docs/univrm/univrm_workflow/</guid><description>
&lt;h2 id="ワークフロー">ワークフロー&lt;/h2>
&lt;img src="https://vrm.dev/images/vrm/VRM_changeVRM_jp.png" alt="vrm workflow" />
&lt;h2 id="humanoid-avatarがセット済みの人間型モデルを用意します">humanoid avatarがセット済みの人間型モデルを用意します&lt;/h2>
&lt;p>Fbx等のUnityのHumanoidモデルを用意してください。ボーンの設定もされている必要があります。&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/vrm/DragImportedModel.png" alt="DragImported3DModel" width="300" />
&lt;br>
&lt;br>
&lt;img src="https://vrm.dev/images/vrm/ModelConversionMenu.png" alt="ModelConversionMenu" width="900" />
&lt;/p>
&lt;p>インポート後、Humanoidモデルをプロジェクトウィンドウからヒエラルキーウィンドウにドラッグし、ヒエラルキーウィンドウでモデルをクリックすると、上の図に示すようなメニューが表示されます。メニューに&lt;code>Select&lt;/code>をクリックして、&lt;code>Rig&lt;/code>をクリックして&lt;code>Animation Type&lt;/code>を&lt;code>Humanoid&lt;/code>に設定し、&lt;code>Configure&lt;/code>ボタンをクリックします。現在のシーンを保存するかどうかのメッセージボックスが表示されます。&lt;code>Save&lt;/code>をクリックして保存します。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/SetModelAsHumanoid.png" alt="SetModelAsHumanoid" width="900" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>Humanoid&lt;/code>に設定して、&lt;code>Configure&lt;/code>をクリックします&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>これで、このモデルのボーンマッピングの詳細が表示されます。 Unityは最初に各ボーンの自動認識を実行します。モデルの体、頭などを確認できます。割り当てられたコンポーネントが適合する場合、左端のアイコンが緑色で表示されます。適合しない場合は赤色で表示されます。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/BoneMapping.png" alt="BoneMapping" width="600" />
&lt;h3 id="rigのconfigureでボーンの割り当てを修正">rigのconfigureでボーンの割り当てを修正&lt;/h3>
&lt;p>ボーンマッピングエラーを修正するには、ボーンマッピングに失敗したボーンの右端のアイコンをクリックし、このボーンに適合するコンポーネントを選択します。ボーンを自動的に再割り当てるには、インターフェースの左下にある&lt;code>Mapping&lt;/code>をクリックし、&lt;code>clear&lt;/code>をクリックして&lt;code>Automap&lt;/code>をクリックします。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/BoneAssignment.png" alt="BoneAssignment" width="900" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>適切なボーンコンポーネントを選択してください&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>ただし、場合によってはFBXインポート時の自動認識が食い違うことがありますので(緑色で表示されます)、ボーンの設定が間違っていたら修正します。&lt;/p>
&lt;p>例&lt;/p>
&lt;ul>
&lt;li>前髪に顎ボーンが割り当てられる&lt;/li>
&lt;li>目のハイライトに目ボーンが割り当てられる&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/fix_eye.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>立体ちゃんでは目のボーンの自動認識がうまくいっていなかったので手動で修正します。たとえば、eye_light_Lはeye_Lに置き換えられます&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="メニューからエクスポート">メニューからエクスポート&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/UniVRMExportHumanoid.png" alt="UniVRMExportHumanoid" width="400" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ヒエラルキーでhumanoid avatarをセットしたanimatorを選択すると有効になります。ファイルはデフォルトで&lt;code>Assets&lt;/code>フォルダに保存されます&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/export_dialog_56.jpg" alt="vrm export" width="600" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>Author&lt;/code>欄に名前を入力して&lt;code>Export&lt;/code>を押してください&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="force-t-pose">Force T Pose&lt;/h3>
&lt;p>回転・スケールの除去前にモデルを強制的&lt;a href="https://vrm.dev/docs/univrm/humanoid/vrm_tpose/">T-Pose&lt;/a> にします。&lt;/p>
&lt;h4 id="手動でt-poseにすることができます">手動でT Poseにすることができます&lt;/h4>
&lt;p>自動で&lt;code>T Pose&lt;/code>にすると姿勢が変わってしまう場合などに、手動で&lt;code>T Pose&lt;/code>化することができます。
あらかじめモデルを手動&lt;a href="https://vrm.dev/docs/univrm/humanoid/vrm_tpose/">T-Pose&lt;/a> にしてからエクスポートメニューを実行し、
上記の&lt;code>Force T Pose&lt;/code>チェックボックスをオフにしてください。&lt;/p>
&lt;h3 id="pose-freeze">Pose Freeze&lt;/h3>
&lt;p>回転・スケールの除去処理を実行するか否か。
VRMの規約に合致するようにモデルを正規化する処理です。
初回のみ必要です。
事前にこの処理を通過させることにより各種コンポーネントが正しく動作するようになります。&lt;/p>
&lt;h4 id="ヒエラルキーの正規化">ヒエラルキーの正規化&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/rot.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ボーンの向きに意味を持たせてあるタイプのモデル&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/rot_scale.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Z-UPかつ非メートル単位のモデル(Blenderのデフォルト)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>回転とスケールを除去します。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/without_rot_scale.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>正規化済み&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="メッシュの正規化">メッシュの正規化&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/zup_mesh.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>非T-PoseかつZ-UPで格納されているメッシュ&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>SkinnedMeshRenderer.BakeMeshを使ってT-Pose状態のメッシュを作り、座標操作でY-UP化します。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/yup_mesh.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>T-PoseかつY-UPで格納されているメッシュ&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="import">Import&lt;/h2>
&lt;p>vrmファイルをAssetsフォルダにインポートしてください。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/alicia_imported.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>立体ちゃんのVRMをインポート&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Texture, Material, PrefabがVRMから自動生成されます。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/vrm_prefab.png" />
&lt;ul>
&lt;li>対象のProjectビューにvrmが表示されない場合、右クリックから&lt;code>refresh&lt;/code>してみてください&lt;/li>
&lt;li>Prefabが生成されない場合、vrmファイルを右クリックして&lt;code>reimport&lt;/code>してみてください&lt;/li>
&lt;/ul></description></item><item><title>Docs: BlendShapeのセットアップ(v0.45)</title><link>https://vrm.dev/docs/univrm/blendshape/blendshape_setup/</link><pubDate>Wed, 05 Aug 2020 20:01:17 +0900</pubDate><guid>https://vrm.dev/docs/univrm/blendshape/blendshape_setup/</guid><description>
&lt;h2 id="blendshape関連のアセット">BlendShape関連のアセット&lt;/h2>
&lt;p>VRMをImportすると、&lt;code>モデル名から拡張子を除いた名前 + BlendShapes&lt;/code> フォルダにPresetを表すBlendShapeClipが作成されます。&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/blendshapeclip_assets.png" alt="image">&lt;/p>
&lt;p>BlendShapeAvatarアセット。&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/blendshapeavatar.png" alt="image">&lt;/p>
&lt;h2 id="設定画面">設定画面&lt;/h2>
&lt;p>アセットには以下の設定画面があります。&lt;/p>
&lt;h3 id="blendshapeavatarアセットのインスペクタ">BlendShapeAvatarアセットのインスペクタ&lt;/h3>
&lt;h4 id="editorタブ">Editorタブ&lt;/h4>
&lt;p>BlendShapeClip選択・設定作成&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/select_blendshapeavatar.png" alt="image">&lt;/p>
&lt;h4 id="listタブv045から">Listタブ(v0.45から)&lt;/h4>
&lt;p>BlendShapeClipのリスト&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/list.png" alt="image">&lt;/p>
&lt;h3 id="blendshapeclipアセットのインスペクタ">BlendShapeClipアセットのインスペクタ。&lt;/h3>
&lt;h4 id="blendshapeタブ">BlendShapeタブ&lt;/h4>
&lt;p>設定作成します。&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/alicia_binary.png" alt="image">&lt;/p>
&lt;h4 id="blendshape-listタブ">BlendShape Listタブ&lt;/h4>
&lt;p>BlendShapeタブで作成した値を見ることが出来ます。
あまり使わない。&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/blendshape_angry.png" alt="image">&lt;/p>
&lt;h4 id="material-listタブ">Material Listタブ&lt;/h4>
&lt;p>&lt;code>BlendShapeによる&lt;/code>&lt;a href="https://vrm.dev/docs/univrm/lookat/lookat_blendshape/">LookAt&lt;/a>(後述)や、BlendShapeで色を変える設定を作成することができます。&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/material_color.png" alt="image">&lt;/p>
&lt;h2 id="各blendshapeclipの設定">各BlendShapeClipの設定&lt;/h2>
&lt;p>各BlendShapeClipに対して顔を作ります(顔以外も可)。&lt;/p>
&lt;h3 id="1-対象のblendshapeclipを選ぶ">1. 対象のBlendShapeClipを選ぶ&lt;/h3>
&lt;p>BlendShapeAvatarのインスペクタから選択する&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/select_blendshapeavatar.png" alt="image">&lt;/p>
&lt;p>アセットのBlendShapeClipを直接選択する&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/select_blendshapeclip.png" alt="image">&lt;/p>
&lt;h3 id="2-スライダを操作して顔を作る">2. スライダを操作して顔を作る&lt;/h3>
&lt;p>モデルに存在するSKinnedMeshRendererの名前から、
目的のBlendShapeのスライダーを探して値を設定します。
変更値は即座に反映されます。
&lt;code>Apply&lt;/code>ボタン不要になりました(v0.45)。&lt;/p>
&lt;h3 id="3-previewの操作">3. Previewの操作&lt;/h3>
&lt;p>&lt;code>Preview Weight Slider&lt;/code> で0~1の効き具合をテストできます。&lt;/p>
&lt;p>&lt;code>左ドラッグ・右ドラッグ&lt;/code>向きを変えられます。&lt;/p>
&lt;p>&lt;code>中ドラッグ&lt;/code>移動できます。&lt;/p>
&lt;h3 id="中間値を許可しない設定v045">中間値を許可しない設定(v0.45)&lt;/h3>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/alicia_binary.png" alt="image">&lt;/p>
&lt;p>スクリーンショットのような記号的表現でBlendShapeの中間値を表示したくない場合を想定して、二値化フラグを追加しました。四捨五入(round)で実装しています。&lt;/p>
&lt;p>ロードするアプリケーションがv0.45以降になっていると有効になります。&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/binary.png" alt="image">&lt;/p></description></item><item><title>Docs: LookAt(Bone)</title><link>https://vrm.dev/docs/univrm/lookat/lookat_bone/</link><pubDate>Wed, 05 Aug 2020 20:01:17 +0900</pubDate><guid>https://vrm.dev/docs/univrm/lookat/lookat_bone/</guid><description>
&lt;p>VRMLookAtHead + VRMLookAtBoneApplyer の２つのコンポーネントを組み合わせます。&lt;/p>
&lt;h2 id="ボーン制御の視線-vrmlookatboneapplyer">ボーン制御の視線: VRMLookAtBoneApplyer&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/VRMLookAtBoneApplyer.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>VRMLookAtBoneApplyer&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>VRMLookAtHeadの計算した視線方向のパラメーターをEyeBoneに適用します。&lt;/p>
&lt;h3 id="degreemapping">DegreeMapping&lt;/h3>
&lt;p>目標物への相対角度 yaw, pitch を、eye bone のローテンションにそのまま代入すると目が動きすぎてしまいます。&lt;/p>
&lt;ul>
&lt;li>yaw, pitch 角の上限値 =&amp;gt; Curve X Range Degree&lt;/li>
&lt;li>yaw, pitch が上限の時の eye bone の回転角度 =&amp;gt; Curve Y Range Degree&lt;/li>
&lt;/ul>
&lt;p>で設定できます。
次の４方向を設定してください。&lt;/p>
&lt;ul>
&lt;li>VerticalDown&lt;/li>
&lt;li>VerticalUp&lt;/li>
&lt;li>HorizontalOuter&lt;/li>
&lt;li>HorizontalInner&lt;/li>
&lt;/ul>
&lt;p>横方向は左右ではなく、内外になります。&lt;/p></description></item><item><title>Docs: Glbエクスポート</title><link>https://vrm.dev/docs/univrm/gltf/how_to_create_glb/</link><pubDate>Tue, 04 Aug 2020 14:54:52 +0900</pubDate><guid>https://vrm.dev/docs/univrm/gltf/how_to_create_glb/</guid><description>
&lt;h2 id="手順">手順&lt;/h2>
&lt;p>UniVRMに含まれるUniGLTFでglbファイルを作成することが出来ます。
以下、手順を説明します。&lt;/p>
&lt;h3 id="1-空のシーンを用意します">1. 空のシーンを用意します。&lt;/h3>
&lt;h3 id="2-一番親になるemptyを作成します移動回転拡縮は無し">2. 一番親になるemptyを作成します。移動・回転・拡縮は無し。&lt;/h3>
&lt;p>一番親は、GLTFのノードではなくシーンとして記録しています。シーンには、移動・回転・拡縮 がありません。&lt;/p>
&lt;h3 id="3-エクスポートしたいオブジェクトをemptyの子にします">3. エクスポートしたいオブジェクトをemptyの子にします。&lt;/h3>
&lt;p>(この例ではCubeを作成しました。Prefab等任意のオブジェクトを追加できます)&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/root_cube.png" alt="image">&lt;/p>
&lt;h3 id="4-一番親のオブジェクトを選択してエクスポートメニューを起動します">4. 一番親のオブジェクトを選択して、エクスポートメニューを起動します。&lt;/h3>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/menu_unigltf_export.png" alt="image">&lt;/p>
&lt;h3 id="5-ファイル名を選択して-glb-ファイルを書き出せば完了です">5. ファイル名を選択して &lt;code>glb&lt;/code> ファイルを書き出せば完了です。&lt;/h3>
&lt;h2 id="glbのエクスポート対象になるコンポーネント">Glbのエクスポート対象になるコンポーネント&lt;/h2>
&lt;ul>
&lt;li>&lt;code>MeshRenderer + MeshFilter&lt;/code> (一番親以外の子供につけてください)&lt;/li>
&lt;li>&lt;code>SkinnedMeshRenderer&lt;/code> (一番親以外の子供につけてください)&lt;/li>
&lt;li>&lt;code>Animation&lt;/code> (一番親のオブジェクトに付けてください。回転はQuaternionのキーフレームを打ってください。移動・回転・拡縮に対応しています。BlendShapeは未対応)&lt;/li>
&lt;/ul>
&lt;h2 id="対応しているshader">対応しているShader&lt;/h2>
&lt;ul>
&lt;li>&lt;code>Standard&lt;/code> もしくは &lt;code>Unlit/Color&lt;/code>, &lt;code>Unlit/Texture&lt;/code>, &lt;code>Unlit/Transparent&lt;/code>, &lt;code>Unlit/Transparent Cutout&lt;/code>, &lt;code>UniGLTF/UniUnlit&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Docs: UniUnlit</title><link>https://vrm.dev/docs/univrm/shaders/univrm_unlit/</link><pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate><guid>https://vrm.dev/docs/univrm/shaders/univrm_unlit/</guid><description>
&lt;h2 id="unigltfuniunlit-シェーダー">&lt;code>UniGLTF/UniUnlit&lt;/code> シェーダー&lt;/h2>
&lt;p>Unity の &lt;code>Unlit&lt;/code> 系シェーダーは、機能ごとに&lt;/p>
&lt;ul>
&lt;li>Unlit/Color&lt;/li>
&lt;li>Unlit/Texture&lt;/li>
&lt;li>Unlit/Transparent&lt;/li>
&lt;li>Unlit/Transparent Cutout&lt;/li>
&lt;/ul>
&lt;p>のように分かれています。&lt;/p>
&lt;p>また、&lt;code>GLTF&lt;/code> では設定可能なのだけど、標準の &lt;code>Unlit&lt;/code> 系シェーダーでは再現できない組み合わせがあります。&lt;/p>
&lt;ul>
&lt;li>&lt;code>Texture&lt;/code> かつ &lt;code>Color&lt;/code> の乗算&lt;/li>
&lt;li>頂点カラー&lt;/li>
&lt;/ul>
&lt;p>これらを解決する、統一 &lt;code>unlit&lt;/code> シェーダーとして &lt;code>UniGLTF/UniUnlit&lt;/code> があります。&lt;/p>
&lt;p>&lt;code>UniVRM&lt;/code> で、&lt;code>GLTF&lt;/code> で &lt;code>Unlit&lt;/code> 設定のマテリアルをインポートすると、
すべて &lt;code>UniGLTF/UniUnlit&lt;/code> 使うようになります。&lt;/p>
&lt;p>エクスポートしてからインポートする場合の対応表。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>export&lt;/th>
&lt;th>gltf&lt;/th>
&lt;th>import&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Unlit/Color&lt;/td>
&lt;td>KHR_materials_unlit&lt;/td>
&lt;td>UniGLTF/UniUnlit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Unlit/Texture&lt;/td>
&lt;td>KHR_materials_unlit&lt;/td>
&lt;td>UniGLTF/UniUnlit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Unlit/Transparent&lt;/td>
&lt;td>KHR_materials_unlit&lt;/td>
&lt;td>UniGLTF/UniUnlit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Unlit/Transparent Cutout&lt;/td>
&lt;td>KHR_materials_unlit&lt;/td>
&lt;td>UniGLTF/UniUnlit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VRM/UnlitTexture&lt;/td>
&lt;td>KHR_materials_unlit&lt;/td>
&lt;td>UniGLTF/UniUnlit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VRM/UnlitTransparent&lt;/td>
&lt;td>KHR_materials_unlit&lt;/td>
&lt;td>UniGLTF/UniUnlit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VRM/UnlitCutout&lt;/td>
&lt;td>KHR_materials_unlit&lt;/td>
&lt;td>UniGLTF/UniUnlit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>UniGLTF/UniUnlit&lt;/td>
&lt;td>KHR_materials_unlit&lt;/td>
&lt;td>UniGLTF/UniUnlit&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>なお、UniVRM がサポートするシェーダーの中で、&lt;code>UniGLTF/UniUnlit&lt;/code> だけが頂点カラーをサポートしています。&lt;/p>
&lt;ul>
&lt;li>Meshに頂点カラーが含まれている&lt;/li>
&lt;li>Materialが &lt;code>Unlit&lt;/code> 判定である&lt;/li>
&lt;/ul>
&lt;p>場合に、import すると頂点カラーが適用されます。
頂点カラーが不要であるモデルに、Unity の &lt;code>unlit&lt;/code> 系マテリアルを適用してエクスポートすると、
次にインポートするときに意図せずに色が変わる場合があります。
この場合、エクスポート時に &lt;code>RemoveVertexColor&lt;/code> を有効にすることで、頂点カラーを含まない &lt;code>Mesh&lt;/code> をエクスポートすることができます。&lt;/p>
&lt;h2 id="gltf">GLTF&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">UniUnlit&lt;/th>
&lt;th align="left">GLTF Unlit&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">カラーファクター&lt;/td>
&lt;td align="left">/materials/pbrMetallicRoughness/baseColorFactor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">カラーテクスチャ&lt;/td>
&lt;td align="left">/materials/pbrMetallicRoughness/baseColorTexture&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">レンダリングモード&lt;/td>
&lt;td align="left">/materials/alphaMode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">カリングモード&lt;/td>
&lt;td align="left">/materials/doubleSided&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: install UPM</title><link>https://vrm.dev/docs/univrm/install/univrm_upm/</link><pubDate>Wed, 08 Jul 2020 11:42:13 +0900</pubDate><guid>https://vrm.dev/docs/univrm/install/univrm_upm/</guid><description>
&lt;h2 id="univrm-0xx-の-unitypackage">UniVRM-0.XX の UnityPackage&lt;/h2>
&lt;p>UniVRM-0.56から、 UniVRMはUnityPackageManagerでインポートできるようになった。&lt;/p>
&lt;p>github リポジトリのルート以外に &lt;code>package.json&lt;/code> を配置する機能を使っているので、
&lt;code>Unity 2019.3.4f1以降&lt;/code> が必要です。&lt;/p>
&lt;h3 id="導入方法">導入方法&lt;/h3>
&lt;p>UnityPackageManagerのWindow&lt;/p>
&lt;img src="https://vrm.dev/images/vrm10/menu_packagemanager.jpg" />
&lt;hr>
&lt;p>&lt;code>add package from git URL&lt;/code>&lt;/p>
&lt;img src="https://vrm.dev/images/vrm10/from_git.jpg" />
&lt;hr>
&lt;p>新しいUniVRMバージョンがリリースされる時に、このバージョンに関連するgit urlsを公開します。&lt;/p>
&lt;p>たとえば、&lt;a href="https://github.com/vrm-c/UniVRM/releases/tag/v0.56.3">v0.56.3&lt;/a> のgit urlは次のとおりです：&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders#v0.56.3&lt;/code>&lt;/li>
&lt;li>&lt;code>https://github.com/vrm-c/UniVRM.git?path=/Assets/VRM#v0.56.3&lt;/code> =&amp;gt; VRMShaders に依存&lt;/li>
&lt;/ul>
&lt;p>パッケージ同士の依存関係を自動でダウンロードしてくれる機能は無いので、以上の git url を順に追加してください。&lt;/p>
&lt;p>バージョン番号を変更することで、お好きなバージョンに切り替えることができます。&lt;/p>
&lt;h4 id="もしくは-packagesmanifestjson-に直接コピーペーストする">もしくは、 Packages/manifest.json に直接コピーペーストする。&lt;/h4>
&lt;p>以下の内容を追記してください（&lt;a href="https://github.com/vrm-c/UniVRM/releases/tag/v0.56.3">v0.56.3&lt;/a>の例)。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;dependencies&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#a40000">//&lt;/span> &lt;span style="color:#a40000">...&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders#v0.56.3&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;com.vrmc.univrm&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRM#v0.56.3&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#a40000">//&lt;/span> &lt;span style="color:#a40000">...&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>以下の &amp;ldquo;lock&amp;rdquo; はUnityが自動で更新するので、編集する必要はありません。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json"> &lt;span style="color:#4e9a06">&amp;#34;lock&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;revision&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;v0.56.3&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;hash&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;3b68eb7f99bfe78ea9c83ea75511282ef1782f1a&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;com.vrmc.univrm&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;revision&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;v0.56.3&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;hash&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;3b68eb7f99bfe78ea9c83ea75511282ef1782f1a&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ただし、特定のコミットに切り替える場合は、ハッシュ値を手動で変更できます。&lt;/p>
&lt;p>もしくは&lt;code>dependencies&lt;/code>に特定のコミットに付きます。&lt;/p>
&lt;p>例：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;dependencies&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#a40000">//&lt;/span> &lt;span style="color:#a40000">...&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders#155acf354735288db0335878179f483901541851&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;com.vrmc.univrm&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRM#155acf354735288db0335878179f483901541851&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#a40000">//&lt;/span> &lt;span style="color:#a40000">...&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: エクスポートダイアログ</title><link>https://vrm.dev/docs/univrm/export/univrm_export/</link><pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate><guid>https://vrm.dev/docs/univrm/export/univrm_export/</guid><description>
&lt;h2 id="エクスポートダイアログ">エクスポートダイアログ&lt;/h2>
&lt;p>v0.57&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/export_dialog_56.jpg" alt="vrm export" width="600" />
&lt;p>Unityの簡易ダイアログ機能で画面を作成しています。
v0.58 以降でダイアログを改善予定です。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>用語&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Root&lt;/td>
&lt;td>一番親のオブジェクト(ひとつだけ)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ヒエラルキー&lt;/td>
&lt;td>Rootの子孫全部&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="警告メッセージオレンジの囲み">警告メッセージ(オレンジの囲み)&lt;/h3>
&lt;p>エクスポート可能だけど、問題があるかもしれない。&lt;/p>
&lt;h4 id="the-root-translation-rotation-and-scale-will-be-dropped">The Root translation, rotation and scale will be dropped&lt;/h4>
&lt;p>Rootに移動・回転・スケール値が設定されている。
そのままエクスポートした場合、ルートの TRS は無くなります。
移動に関しては問題がない場合が多いと思われますが、回転・スケールに関しては意図したとおりにならないこともありそうなのでご注意ください。&lt;/p>
&lt;h4 id="jaw-bone-is-included-it-may-not-be-what-you-intended-please-check-the-humanoid-avatar-setting-screen">Jaw bone is included. It may not be what you intended. Please check the humanoid avatar setting screen&lt;/h4>
&lt;p>humanoid設定に顎が含まれている。
FBXインポート時に意図せずに自動で割り当てられる場合があります。
間違えて、前髪等が顎になっていて顎にポーズが入力した場合に微妙に動く場合があります。
FBX importer の rig 設定に戻って設定を解除することをおすすめします。&lt;/p>
&lt;h4 id="there-is-a-bone-with-the-same-name-in-the-hierarchy-if-exported-these-bones-will-be-automatically-renamed">There is a bone with the same name in the hierarchy. If exported, these bones will be automatically renamed&lt;/h4>
&lt;p>ヒエラルキーの中に同じ名前のGameObjectが含まれている。
エクスポートした場合に自動でリネームする。&lt;/p>
&lt;h4 id="this-model-contains-vertex-color">This model contains vertex color&lt;/h4>
&lt;p>ヒエラルキーに含まれる mesh に頂点カラーが含まれている。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>頂点カラー&lt;/th>
&lt;th>含まれている挙動&lt;/th>
&lt;th>挙動&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>UniVRM-0.53以前&lt;/td>
&lt;td>未対応&lt;/td>
&lt;td>含まれているけど無視する挙動&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>UniVRM-0.54～&lt;/td>
&lt;td>使う&lt;/td>
&lt;td>含まれているものは使う挙動&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Unlitで頂点カラーが含まれているが使わないという設定がありせん。
必要ない場合は、&lt;code>Remove Vertex Color&lt;/code> オプションで削除できます。&lt;/p>
&lt;h4 id="unknown-material-0-is-used-this-will-export-as-standard-fallback">unknown material &amp;lsquo;{0}&amp;rsquo; is used. this will export as &lt;code>Standard&lt;/code> fallback&lt;/h4>
&lt;p>standard, unlit, mtoon 以外のマテリアルは、standard になります。&lt;/p>
&lt;h3 id="エラーメッセージ赤い囲み">エラーメッセージ(赤い囲み)&lt;/h3>
&lt;p>エクスポート不可能。問題を解決する必要があります。
このメッセージが表示されているときは、&lt;code>export&lt;/code> ボタンが無効になります。&lt;/p>
&lt;h4 id="require-source">Require source&lt;/h4>
&lt;p>エクスポート可能なオブジェクトをシーンで選択してださい&lt;/p>
&lt;h4 id="require-animator">Require animator.&lt;/h4>
&lt;p>RootにAnimatorコンポーネントがついていません(ヒューマノイドでない)&lt;/p>
&lt;h4 id="require-animatoravatar">Require animator.avatar&lt;/h4>
&lt;p>RootのAnimatorにavatarがありません(ヒューマノイドでない)&lt;/p>
&lt;h4 id="animatoravatar-is-not-valid">Animator.avatar is not valid.&lt;/h4>
&lt;p>RootのAnimatorのavatarが正常でない(ヒューマノイドでない)&lt;/p>
&lt;h4 id="animatoravatar-is-not-humanoid-please-change-models-animationtype-to-humanoid">Animator.avatar is not humanoid. Please change model&amp;rsquo;s AnimationType to humanoid.&lt;/h4>
&lt;p>RootのAnimatorのavatarがhumanoidでない。FBXのimport設定の rig で humanoidに変更してください&lt;/p>
&lt;h4 id="require-title">Require Title.&lt;/h4>
&lt;p>ダイアログのタイトルを入力してください(必須項目)&lt;/p>
&lt;h4 id="require-version">Require Version.&lt;/h4>
&lt;p>ダイアログのバージョンを入力してください(必須項目)&lt;/p>
&lt;h4 id="require-author">Require Author.&lt;/h4>
&lt;p>ダイアログのAuthorを入力してください(必須項目)&lt;/p>
&lt;h4 id="no-active-mesh">No active mesh&lt;/h4>
&lt;p>ヒエラルキーに active なメッシュが含まれていない&lt;/p>
&lt;h4 id="filename-0-is-too-long">FileName &amp;lsquo;{0}&amp;rsquo; is too long.&lt;/h4>
&lt;p>material, texture, mesh の名前が長すぎる。
リネームしてください&lt;/p>
&lt;h3 id="オプション青い囲み">オプション(青い囲み)&lt;/h3>
&lt;p>エクスポートのオプションです。
チェックするとエクスポート前に追加の処理を実行します。&lt;/p>
&lt;h4 id="force-t-pose">Force T Pose&lt;/h4>
&lt;p>エクスポート前に強制的にT-Poseにします。
手動でだいたいT-Poseに出来た場合は、チェックしなくても問題ありません。&lt;/p>
&lt;h4 id="pose-freeze">Pose Freeze&lt;/h4>
&lt;p>モデルを正規化します。
正規化済みのモデルを再正規化する必用はありませんが、正規化されていない部品を追加した場合は必要です。
正規化されているか否かは、ヒエラルキーのすべてのGameObjectの回転が0 スケールが1 であるか否かです。&lt;/p>
&lt;h4 id="useexperimentalexporter">UseExperimentalExporter&lt;/h4>
&lt;p>シリアライザーのバージョン。
どちらでも動作します。&lt;/p>
&lt;h4 id="usesparseaccessor">UseSparseAccessor&lt;/h4>
&lt;p>BlendShapeが多数ある場合にファイルサイズを削減できます。&lt;/p>
&lt;h4 id="onlyblendshapeposition">OnlyBlendshapePosition&lt;/h4>
&lt;p>BlendShapeのNormal, Tangent をエクスポートしない。
ファイルサイズを削減できます。
UniVRM-0.53 より前のバージョンはインポート時にエラーになるのに注意してください。&lt;/p>
&lt;h4 id="reduceblendshape">ReduceBlendshape&lt;/h4>
&lt;p>BlendShapeClip設定から参照されないBlendShapeをエクスポートしない。
ファイルサイズを削減できます。&lt;/p>
&lt;h4 id="reduceblendshapeclip">ReduceBlendshapeClip&lt;/h4>
&lt;p>Presetが Unknown であるBlendShapeClipをエクスポートしない。
ReduceBlendshapeと組み合わせて使います。&lt;/p>
&lt;h4 id="removevertexcolor">RemoveVertexColor&lt;/h4>
&lt;p>頂点カラーをエクスポートしない。
GLTFには、頂点カラーを含むが使わないという設定がありません。
UniVRMでは、 &lt;code>unlit&lt;/code> のみ頂点カラー対応です。&lt;/p></description></item><item><title>Docs: UniVRMでよくある質問</title><link>https://vrm.dev/docs/univrm/univrm_faq/</link><pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate><guid>https://vrm.dev/docs/univrm/univrm_faq/</guid><description>
&lt;h1 id="エラーの報告">エラーの報告&lt;/h1>
&lt;p>コンソール画面の内容をご確認ください。
コンソール画面はメニューから表示できます。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/window_console.png" alt="コンソール画面を表示するメニュー" />
&lt;p>表示されたコンソール画面にエラーメッセージ(赤い)が表示されている場合、なんらかの不具合がある可能性があります。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/error.png" alt="エラーの例" />
&lt;p>エラー報告は、起こった現象に&lt;/p>
&lt;ul>
&lt;li>OS(Windows10 64bitなど)&lt;/li>
&lt;li>Unityのバージョン(Unity-5.6.3p1など)&lt;/li>
&lt;li>UniVRMのバージョン(0.40など)&lt;/li>
&lt;/ul>
&lt;p>を添えて&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/vrm-c/UniVRM/issues">https://github.com/vrm-c/UniVRM/issues&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>等にお知らせください。&lt;/p>
&lt;h1 id="設定したvrmspringboneが居なくなった">設定したVRMSpringBoneが居なくなった&lt;/h1>
&lt;p>VRMSpringBoneはインポート時に&lt;code>secondary&lt;/code>ノードにアタッチされます。&lt;/p>
&lt;p>&lt;a href="https://vrm.dev/docs/univrm/springbone/univrm_secondary/#コンポーネントのアタッチされるノード">VRMSpringBone&lt;/a>&lt;/p>
&lt;h1 id="プロジェクトをビルドするとローダーが動かなくなる">プロジェクトをビルドするとローダーが動かなくなる&lt;/h1>
&lt;p>UniVRMで使うシェーダーがビルド対象に含まれていない可能性があります。&lt;/p>
&lt;p>&lt;code>Edit - ProjectSettings - GraphicsSettings - ShaderPreloading&lt;/code>&lt;/p>
&lt;p>をご確認ください。&lt;/p></description></item><item><title>Docs: VRMファイルを作ってみたい</title><link>https://vrm.dev/how_to_make_vrm/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/how_to_make_vrm/</guid><description>
&lt;h2 id="vrmファイルのつくりかた既存3dモデルからのコンバート">VRMファイルのつくりかた（既存3Dモデルからのコンバート）&lt;/h2>
&lt;img src="https://vrm.dev/images/vrm/VRM_changeVRM_jp.png" alt="vrm workflow" />
&lt;p>VRMファイルをつくるためには、&lt;a href="https://unity3d.com/jp">Unity&lt;/a>と&lt;a href="https://github.com/vrm-c/UniVRM">UniVRM&lt;/a>を使用します。
おおまかな作業のながれは以下のようになります&lt;/p>
&lt;ol>
&lt;li>Unityで3Dモデルデータと&lt;a href="https://github.com/vrm-c/UniVRM">UniVRM&lt;/a>を読み込む。Unity上で大きさやマテリアルなどを調整・設定する&lt;/li>
&lt;li>一度UnityからVRMファイルを出力する（※正規化と呼びます）&lt;/li>
&lt;li>上記出力した VRMファイルをUnityで読み込み、Unity上でVRM独自の設定（ライセンス・揺れ物・表情・目線など）を行う
&lt;ul>
&lt;li>場合によってはここでUnity上でモデルを実際に動かして（再生して）挙動を確認する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>設定が終わったら再度VRMファイルを出力する。すべての設定が埋め込まれたVRMファイルが出力されます。&lt;/li>
&lt;/ol>
&lt;p>ポイントは、 &lt;strong>すでに作られた3DモデルをUnity上で調整し、Unityから出力する&lt;/strong>ということと、&lt;strong>一度VRMファイルを作り、それを再度読み込んでから細かい調整・設定を行う&lt;/strong>ところとなります。&lt;/p>
&lt;hr>
&lt;h3 id="1unityで空のプロジェクトを作る">1.Unityで空のプロジェクトを作る&lt;/h3>
&lt;img src="https://vrm.dev/images/vrm/unity_new_project.png" />
&lt;p>Unityを起動し、プロジェクトを新規作成します。New→Create projectをクリック。&lt;/p>
&lt;h3 id="2unityにunivrmをインストール">2.UnityにUniVRMをインストール&lt;/h3>
&lt;img src="https://vrm.dev/images/vrm/package_import.png" alt="package_import" />
&lt;p>&lt;a href="https://github.com/vrm-c/UniVRM/releases">UniVRM/releases&lt;/a>から最新のunitypackageをダウンロードし、&lt;code>Assets/VRM&lt;/code>にインストールします。
&lt;strong>既存のVRMが存在している場合、あらかじめVRMフォルダを削除することを推奨&lt;/strong>しています。
UniVRM-XXX.unitypackageファイルをUnityにインポートしてください。&lt;/p>
&lt;h3 id="3unityでhumanoidとして扱えるモデルデータを用意します">3.UnityでHumanoidとして扱えるモデルデータを用意します&lt;/h3>
&lt;p>FBX等のUnityで読み込めるHumanoidモデルを用意しUnityにインポートします。ボーンの設定もされている必要があります。また、&lt;strong>必ずご自分で作られたモデル、ないし、加工しVRアバターとして使うことが許諾されているモデルデータをご用意ください&lt;/strong>。後述しますが、&lt;strong>VRMファイル自体にライセンス情報を記述する項目がありますので、特にその項目については権利者自身が設定するようにしてください&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/vrm/DragImportedModel.png" alt="DragImported3DModel" width="300" />
&lt;br>
&lt;br>
&lt;img src="https://vrm.dev/images/vrm/ModelConversionMenu.png" alt="ModelConversionMenu" width="900" />
&lt;/p>
&lt;p>インポート後、Humanoidモデルをプロジェクトウィンドウからヒエラルキーウィンドウにドラッグし、ヒエラルキーウィンドウでモデルをクリックすると、上の図に示すようなメニューが表示されます。メニューに&lt;code>Select&lt;/code>をクリックして、&lt;code>Materials&lt;/code>をクリックします。&lt;code>Location&lt;/code>を&lt;code>Use External Materials（Legacy)&lt;/code>に設定します。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/SetAsExternalMaterialsLegacy.png" alt="SetAsExternalMaterialsLegacy" width="900" />
&lt;p>次に、&lt;code>Rig&lt;/code>をクリックして&lt;code>Animation Type&lt;/code>を&lt;code>Humanoid&lt;/code>に設定し、&lt;code>Configure&lt;/code>ボタンをクリックします。現在のシーンを保存するかどうかのメッセージボックスが表示されます。&lt;code>Save&lt;/code>をクリックして保存します。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/SetModelAsHumanoid.png" alt="SetModelAsHumanoid" width="900" />
&lt;p>これで、このモデルのボーンマッピングの詳細が表示されます。 Unityは最初に各ボーンの自動認識を実行します。モデルの体、頭などを確認できます。割り当てられたコンポーネントが適合する場合、左端のアイコンが緑色で表示されます。適合しない場合は赤色で表示されます。この状況では、ボーンマッピング失敗したボーンの右端のアイコンをクリックし、このボーンに適合するコンポーネントを選択します。ボーンを自動的に再割り当てるには、インターフェースの左下にある&lt;code>Mapping&lt;/code>をクリックし、&lt;code>clear&lt;/code>をクリックして&lt;code>Automap&lt;/code>をクリックします。&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/vrm/BoneMapping.png" alt="BoneMapping" width="600" />
&lt;br>
&lt;br>
&lt;img src="https://vrm.dev/images/vrm/BoneAssignment.png" alt="BoneAssignment" width="900" />
&lt;/p>
&lt;p>ただし、場合によってはFBXインポート時の自動認識が食い違うことがありますので(緑色で表示されます)、ボーンの設定が間違っていたら修正します&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/fix_eye.png" />
&lt;p>例&lt;/p>
&lt;ul>
&lt;li>前髪に顎ボーンが割り当てられる&lt;/li>
&lt;li>目のハイライトに目ボーンが割り当てられる&lt;/li>
&lt;/ul>
&lt;p>上記のように、適切な対応するコンポーネントを手動で割り当てることで修正できます（たとえば、eye_light_Lはeye_Lに置き換えられます）。ボーンマッピングに問題がない場合は、&lt;code>Done&lt;/code>ボタンをクリックして次の手順に進みます。&lt;/p>
&lt;h3 id="4モデルデータを調整しメニューから一度vrmをエクスポートする正規化">4.モデルデータを調整し、メニューから一度VRMをエクスポートする（※正規化）&lt;/h3>
&lt;img src="https://vrm.dev/images/vrm/alicia_scene.png" />
&lt;p>ヒエラルキーウィンドウでモデルをクリックすると、このモデルにアタッチされたサブコンポーネントが表示されます。それらサブコンポーネントのいずれかをクリックしてください。以下の項目を確認して調整します：&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/initial_position_rotation.jpg" alt="initial_position_rotation" width="800" />
&lt;ul>
&lt;li>モデルの位置
&lt;ul>
&lt;li>モデルは原点に位置する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>モデルのスケール
&lt;ul>
&lt;li>1.0 = 1m&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>モデルの向き
&lt;ul>
&lt;li>モデルは+Zの方向に向いている&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>質感（マテリアル/シェーダ）
&lt;ul>
&lt;li>以下のシェーダの中から使用することを&lt;strong>強く推奨&lt;/strong>します。
&lt;ul>
&lt;li>PBR
&lt;ul>
&lt;li>Standardシェーダー(Unity標準)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Unlit系シェーダー
&lt;ul>
&lt;li>VRM/UnlitTexture (UnityのUnit/Textureと同じ)&lt;/li>
&lt;li>VRM/UnlitCutout (UnityのUnit/Cutoutと同じ)&lt;/li>
&lt;li>VRM/UnlitTransparent (UnityのUnit/Transparentと同じ)&lt;/li>
&lt;li>VRM/UnlitTransparentZWrite (アルファブレンディングかつZWriteありです。実体のある半透明物への適用を想定しています)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Toonシェーダー
&lt;ul>
&lt;li>VRM/MToon (照明対応トゥーンシェーダ）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;img src="https://vrm.dev/images/vrm/shader_option.jpg" alt="shader_option" width="800" />
&lt;p>マテリアルが割り当てられていない場合、または変更する場合は、&lt;code>Element X&lt;/code>の右端のアイコンをクリックして、パソコンで使用可能なマテリアルを選択してください。選択したシェーダーに基づいてレンダリング効果を調整できるパラメーターがいくつかあります。ここでは、次の図に示すように例として&lt;code>VRM/MToon&lt;/code>を選択します。詳細については、&lt;a href="https://vrm.dev/docs/univrm/shaders/mtoon/">MToon&lt;/a>を参照してください。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/MToonMaterialSetting.png" alt="MToonMaterialSetting" width="700" />
&lt;p>調整が完了したら、ヒエラルキーウィンドウでモデルを選択し、&lt;code>VRM -&amp;gt; UniVRM-0.XX -&amp;gt; Export humanoid&lt;/code>からエクスポートします。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/UniVRMExportHumanoid.png" alt="UniVRMExportHumanoid" width="400" />
&lt;p>&lt;code>Author&lt;/code>欄に名前を入力し、&lt;code>Export&lt;/code>を押すと、VRMファイルが出力されます。ファイル名はわかりやすいように「(元のモデル名)_Normalized.vrm」などとしておくとよいでしょう。ファイルはデフォルトで&lt;code>Assets&lt;/code>フォルダに保存されます。
詳しくは&lt;a href="https://vrm.dev/docs/univrm/export/univrm_export/">UniVRMのエクスポート&lt;/a>をご覧ください。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/export_dialog_56.jpg" alt="vrm export" width="600" />
&lt;ul>
&lt;li>Force T Pose
&lt;ul>
&lt;li>回転・スケールの除去前にモデルを強制的に&lt;a href="https://vrm.dev/docs/univrm/humanoid/vrm_tpose/">T-Pose&lt;/a>にします。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Pose Freeze
&lt;ul>
&lt;li>回転・スケールの除去処理を実行するか否か。VRMの規約に合致するように&lt;strong>モデルを正規化する処理&lt;/strong>です。&lt;strong>初回は必ずチェックを入れてください&lt;/strong>。事前にこの処理を通過させることにより各種コンポーネントが正しく動作するようになります。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>T-Poseとモデルの正規化の詳細は&lt;a href="https://vrm.dev/docs/univrm/humanoid/t_pose/">こちら&lt;/a>。&lt;/p>
&lt;h3 id="5先ほどエクスポートしたvrmを再度unity上に読み込む">5.先ほどエクスポートしたVRMを再度Unity上に読み込む&lt;/h3>
&lt;img src="https://vrm.dev/images/vrm/vrm_prefab.png" />
&lt;p>&lt;strong>4.で出力したVRMファイルを、UnityのAssetsにドラッグ＆ドロップする&lt;/strong>だけで、VRMファイルがインポートされ&lt;strong>モデルデータのPrefabが生成されます&lt;/strong>。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/alicia_scene2.png" />
&lt;p>さきほど4.で配置したモデルデータをいったん消し、&lt;strong>VRMから生成されたPrefabをあらためてシーンに配置します&lt;/strong>。
すると、メッシュなどが正規化されたモデルデータが表示されます。&lt;/p>
&lt;h3 id="6vrm独自の設定を行う">6.VRM独自の設定を行う&lt;/h3>
&lt;img src="https://vrm.dev/images/vrm/vrm_settings.png" />
&lt;p>5.で読み込まれたモデルデータをHierarchyで選択すると、&lt;strong>インスペクタにさまざまな設定項目&lt;/strong>があらわれます。また、&lt;strong>secondaryには揺れ物の設定&lt;/strong>が入っています。これらを設定していきます。
&lt;strong>少なくとも、タイトル・作者・ライセンス情報&lt;/strong>は埋めるようにしてください。&lt;strong>特にライセンス情報は重要です！&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Information（一般情報）&lt;/p>
&lt;ul>
&lt;li>Title
&lt;ul>
&lt;li>アバターモデル名称。自由入力&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Version
&lt;ul>
&lt;li>アバターモデルのバージョン。自由入力&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Author
&lt;ul>
&lt;li>作者名&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Contact Information
&lt;ul>
&lt;li>作者への連絡先&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Reference
&lt;ul>
&lt;li>アバターの「親作品」となるようなものがあれば、その情報&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>License（使用許諾・ライセンス情報）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>アバターの人格に関する許諾範囲 (Personation / Characterization Permission)&lt;/p>
&lt;ul>
&lt;li>アバターに人格を与えることの許諾範囲 (A person who can perform with this avatar)
&lt;ul>
&lt;li>アバターを操作することはアバター作者にのみ許される(Only Author)&lt;/li>
&lt;li>明確に許可された人限定(Explicitly Licensed Person)&lt;/li>
&lt;li>全員に許可(Everyone)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>このアバターを用いて暴力表現を演じることの許可(Violent acts using this avatar)
&lt;ul>
&lt;li>不許可(Disallow)&lt;/li>
&lt;li>許可(Allow)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>このアバターを用いて性的表現を演じることの許可(Sexuality acts using this avatar)
&lt;ul>
&lt;li>不許可(Disallow)&lt;/li>
&lt;li>許可(Allow)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>商用利用の許可(For commercial use)
&lt;ul>
&lt;li>不許可(Disallow)&lt;/li>
&lt;li>許可(Allow)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>その他のライセンス条件(Other License Url)
&lt;ul>
&lt;li>上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>再配布・改変に関する許諾範囲(Redistribution / Modifications License)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ライセンスタイプ(License Type)&lt;/p>
&lt;ul>
&lt;li>再配布禁止(Redistribution Prohibited)&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/publicdomain/zero/1.0/deed.ja">著作権放棄(CC0)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by/4.0/deed.ja">Creative Commons CC BYライセンス(CC_BY)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/deed.ja">Creative Commons CC BY NCライセンス(CC_BY_NC)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-sa/4.0/deed.ja">Creative Commons CC BY SAライセンス(CC_BY_SA)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ja">Creative Commons CC BY NC SAライセンス(CC_BY_NC_SA)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-nd/4.0/deed.ja">Creative Commons CC BY NDライセンス(CC_BY_ND)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.ja">Creative Commons CC BY NC NDライセンス(CC_BY_NC_ND)&lt;/a>&lt;/li>
&lt;li>その他(Other)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>その他ライセンス条件(Other License Url)&lt;/p>
&lt;ul>
&lt;li>上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Unityバージョン2018.3から、インポートセッティングのインターフェースは少し変わったのでご注意してください:&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/NewInterfaceForPrefab.png" alt="NewInterfaceForPrefab" width="700" />
&lt;p>ほかに、&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://vrm.dev/docs/univrm/blendshape/univrm_blendshape/">表情や口パクの設定（BlendShape）&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://vrm.dev/docs/univrm/firstperson/univrm_firstperson/">一人称視点の設定（一人称視点でモデルを操作する場合、邪魔になる頭などのパーツを指定する、標準の視点位置を設定する）&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://vrm.dev/docs/univrm/lookat/univrm_lookat/">視線・眼球の可動範囲と可動曲線の設定。ボーンによる眼球回転だけでなく、BlendShapeによる眼球アニメーションにも対応。&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://vrm.dev/docs/univrm/springbone/univrm_secondary/">揺れ物（SpringBone/SpringBoneCollider）の設定&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>がありますので必要に応じて設定していきます。&lt;/p>
&lt;h3 id="7unity上で再生し挙動を確認する必要であれば">7.Unity上で再生し挙動を確認する（※必要であれば）&lt;/h3>
&lt;p>&lt;code>AnimationClip/AnimationController&lt;/code>をセットしたり、&lt;code>VRMLookAtHead&lt;/code>の&lt;code>Target&lt;/code>に&lt;a href="https://vrm.dev/docs/univrm/lookat/univrm_lookat/#target">GameObject&lt;/a>をセットしたり（視線がどこを向くかの設定）、&lt;code>Head&lt;/code>欄にヘッドコンポーネントを探したり、実際にUnity上で動作を確認します。モデルはプレイモードでターゲット位置を追跡します（たとえば、&lt;code>GameObject -&amp;gt; 3D Object -&amp;gt; Cube&lt;/code>からターゲットとしてキュ​​ーブをヒエラルキーに作成できます）。シーンに配置されたオブジェクトをドラッグして、モデルの目がリアルタイムでオブジェクトを追跡しているかどうかをテストできます。モデルのクローズアップフェイスは、インスペクターウィンドウで見れます。&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/vrm/LookAtTarget.png" alt="LookAtTarget" width="900" />
&lt;br>
&lt;br>
&lt;img src="https://vrm.dev/images/vrm/TargetTracking.png" alt="TargetTracking" width="500" />
&lt;/p>
&lt;p>モデルの表情を確認するには、非常に簡単なテストスクリプト「AIUEO」と「Blinker」を用意しています。&lt;a href="https://vrm.dev/docs/univrm/blendshape/univrm_blendshape/#vrmblendshapeproxy">BlendShape&lt;/a>をセットアップした後、&lt;code>Add Component&lt;/code>から「AIUEO」を選んでセットすれば「あ」「い」「う」「え」「お」の口の形に順番に切り替わるアニメーションが、「Blinker」を選んでセットすれば定期的にまばたきのアニメーションが行われます。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/BlendShapeProxy.png" alt="BlendShapeProxy" width="650" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>BlendShapeAvatar&lt;/code>フィールドにダブルクリックして、3Dモデルの表情を設定します&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;img src="https://vrm.dev/images/vrm/AddExpressionScripts.png" alt="AddExpressionScripts" width="650" />
&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;br>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;br>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;img src="https://vrm.dev/images/vrm/InspectorFaceView.png" alt="InspectorFaceView" width="400" />
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="8vrmファイルを出力する">8.VRMファイルを出力する&lt;/h3>
&lt;img src="https://vrm.dev/images/vrm/UniVRMExportHumanoid.png" alt="UniVRMExportHumanoid" width="400" />
&lt;p>調整が終わったら、UnityのHierarchyでモデルデータを選択し、再度メニューから&lt;code>VRM -&amp;gt; UniVRM-0.XX -&amp;gt; Export humanoid&lt;/code>を実行します&lt;/p>
&lt;p>このとき、&lt;strong>「Force T Pose」と「Pose Freeze」のチェックは外してください&lt;/strong>。このチェックは初回（正規化）のときのみ使用します。
ファイル名を指定してVRMファイルを出力します&lt;/p>
&lt;h3 id="完成">完成！&lt;/h3>
&lt;p>これでセットアップ済のVRMファイルが出来ました。対応アプリケーションに読み込ませてみましょう！&lt;/p></description></item><item><title>Docs: VRMモデルを実行時にインポートする</title><link>https://vrm.dev/dev/univrm-0.xx/programming/univrm_import_runtime/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/dev/univrm-0.xx/programming/univrm_import_runtime/</guid><description>
&lt;p>最新バージョンは&lt;a href="https://vrm.dev/dev/univrm-0.xx/programming/runtime_import/">こちら&lt;/a>をご覧ください。&lt;/p>
&lt;p>Unityで実行時にモデルをインポートする方法です。&lt;/p>
&lt;h2 id="ファイルパスからvrmを開く">ファイルパスからVRMを開く&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sample.vrm&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">go&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#000">VRM&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">VRMImporter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LoadFromPath&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">Debug&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LogFormat&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;loaded {0}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">go&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="ファイルパスから非同期にvrmを開く">ファイルパスから非同期にVRMを開く&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sample.vrm&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">VRMImporter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LoadVrmAsync&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">go&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Debug&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LogFormat&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;loaded {0}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">go&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000;font-weight:bold">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="バイト列からvrm開く">バイト列からVRM開く&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sample.vrm&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">bytes&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">File&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ReadAllBytes&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">go&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#000">VRMImporter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LoadFromBytes&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="バイト列から非同期にvrmを開く">バイト列から非同期にVRMを開く&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#000">VRMImporter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LoadVrmAsync&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">go&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Debug&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LogFormat&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;loaded {0}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">go&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000;font-weight:bold">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="vrmから情報を取り出す">VRMから情報を取り出す&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#8f5902;font-style:italic">#if UNITY_STANDALONE_WIN
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">path&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">FileDialogForWindows&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">FileDialog&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;open VRM&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;.vrm&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#else
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">path&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">Application&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataPath&lt;/span> &lt;span style="color:#000;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;/default.vrm&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#endif
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">IsNullOrEmpty&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// Byte列を得る
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">bytes&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">File&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ReadAllBytes&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">context&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">VRMImporterContext&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// GLB形式をParseしてチャンクからJSONを取得しParseします
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ParseGlb&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// metaを取得
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">meta&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ReadMeta&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">Debug&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LogFormat&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;meta: title:{0}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">meta&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Title&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// もしくはこちらでパースされたGLTF全体にアクセスできます
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">vrm&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">GLTF&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ParseしたJSONをもとにシーンを構築します
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">m_loadAsync&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 非同期に実行する
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">now&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">Time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">VRMImporter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LoadVrmAsync&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">go&lt;/span>&lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">delta&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">Time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">time&lt;/span> &lt;span style="color:#000;font-weight:bold">-&lt;/span> &lt;span style="color:#000">now&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">Debug&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LogFormat&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;LoadVrmAsync {0:0.0} seconds&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">delta&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">OnLoaded&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">go&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000;font-weight:bold">});&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 同期的に実行する
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">VRMImporter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LoadFromBytes&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">OnLoaded&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Root&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="thumbnailを取得するv037から">Thumbnailを取得する(v0.37から)&lt;/h2>
&lt;p>ReadMetaに引数を渡すことでThumbnailテクスチャを作成できます。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs"> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">meta&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ReadMeta&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Thumbnailテクスチャを作成する
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">Texture2D&lt;/span> &lt;span style="color:#000">thumbnail&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#000">meta&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Thumbnail&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: LookAt(Blendshape)</title><link>https://vrm.dev/docs/univrm/lookat/lookat_blendshape/</link><pubDate>Wed, 05 Aug 2020 20:01:17 +0900</pubDate><guid>https://vrm.dev/docs/univrm/lookat/lookat_blendshape/</guid><description>
&lt;p>VRMLookAtHead + VRMLookAtBlendShapeApplyer の２つのコンポーネントを組み合わせます。
&lt;code>VRMLookAtBoneApplyer&lt;/code> を削除して、代わりに &lt;code>VRMLookAtBlendShapeApplyer&lt;/code> をアタッチしてください。&lt;/p>
&lt;h2 id="モーフ制御の視線-vrmlookatblendshapeapplyer">モーフ制御の視線: VRMLookAtBlendShapeApplyer&lt;/h2>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/blendshape_applyer.png" alt="image">&lt;/p>
&lt;p>BlendShapeで視線制御するモデル用のコンポーネントです。
事前に、 &lt;code>LookUp&lt;/code>, &lt;code>LookDown&lt;/code>, &lt;code>LookLeft&lt;/code>, &lt;code>LookRight&lt;/code> の４つの BlendShape を設定してください。&lt;/p>
&lt;p>VRMLookAtBlendShapeに関する設定方法&lt;a href="https://vrm.dev/docs/univrm/lookat/lookat_blendshape/">こちら&lt;/a> を参照してください。&lt;/p>
&lt;h3 id="degreemapping">DegreeMapping&lt;/h3>
&lt;p>以下の設定で、目標物への相対角度 yaw, pitch の適用度合を調整できます。&lt;/p>
&lt;ul>
&lt;li>yaw, pitch 角の上限値 =&amp;gt; Curve X Range Degree&lt;/li>
&lt;li>yaw, pitch が上限の時の blendShape の適用割合(0 ～ 1)。1にしてください =&amp;gt; Curve Y Range Degree&lt;/li>
&lt;/ul>
&lt;p>次の３つを設定してください。&lt;/p>
&lt;ul>
&lt;li>VerticalDown&lt;/li>
&lt;li>VerticalUp&lt;/li>
&lt;li>Horizontal&lt;/li>
&lt;/ul></description></item><item><title>Docs: Standard</title><link>https://vrm.dev/docs/univrm/shaders/univrm_standard/</link><pubDate>Tue, 04 Aug 2020 12:24:49 +0900</pubDate><guid>https://vrm.dev/docs/univrm/shaders/univrm_standard/</guid><description>
&lt;h2 id="standard">Standard&lt;/h2>
&lt;p>Unityの&lt;a href="https://docs.unity3d.com/ja/2019.3/Manual/StandardShaderMaterialParameters.html">デフォルト&lt;/a>でGLTF標準のPBRマテリアルとほぼ互換性があります。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">Unityのデフォルト&lt;/th>
&lt;th align="left">GLTFのPBRマテリアル&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">Albedo カラー&lt;/td>
&lt;td align="left">/materials/pbrMetallicRoughness/baseColorFactor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Albedo テクスチャ&lt;/td>
&lt;td align="left">/materials/pbrMetallicRoughness/baseColorTexture&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Metallic レベル&lt;/td>
&lt;td align="left">/materials/pbrMetallicRoughness/metallicFactor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Smoothness レベル&lt;/td>
&lt;td align="left">1.0f - (/materials/pbrMetallicRoughness/roughnessFactor)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Metallic テクスチャ&lt;/td>
&lt;td align="left">/materials/pbrMetallicRoughness/metallicRoughnessTexture&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">法線マップ&lt;/td>
&lt;td align="left">/materials/normalTexture&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">バンプスケール&lt;/td>
&lt;td align="left">/materials/normalTexture/scale&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">ハイトマップ&lt;/td>
&lt;td align="left">N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">オクルージョンテクスチャ&lt;/td>
&lt;td align="left">/materials/occlusionTexture&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">オクルージョン強度&lt;/td>
&lt;td align="left">/materials/occlusionTexture/strength&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Emission カラー&lt;/td>
&lt;td align="left">/materials/emissiveFactor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">Emission テクスチャ&lt;/td>
&lt;td align="left">/materials/emissiveTexture&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">詳細マスク&lt;/td>
&lt;td align="left">N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">セカンダリマップ&lt;/td>
&lt;td align="left">N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">レンダリングモード&lt;/td>
&lt;td align="left">/materials/alphaMode&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>UniVRMのマテリアルインポートに関して、roughnessFactor値はMetallicテクスチャにベイクされる。マテリアルエクスポートではsmoothness値はMetallicテクスチャにベイクされる&lt;a href="https://github.com/vrm-c/UniVRM/pull/222">[参照]&lt;/a>。&lt;/p>
&lt;p>Unity と GLTF でテクスチャーの仕様に非互換があるので、 &lt;code>export/import&lt;/code> で変換しています。&lt;/p>
&lt;h2 id="テクスチャ変換">テクスチャ変換&lt;/h2>
&lt;p>Standardシェーダーのカラー以外のテクスチャ(Linear)の処理について。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ノーマルマップの修正。MToonと共通なので次項で説明します&lt;/p>
&lt;ul>
&lt;li>Materialのプロパティ名 &lt;code>_BumpMap&lt;/code> で判定します。&lt;/li>
&lt;li>EditorImport: &lt;code>TextureImporterType.NormalMap&lt;/code>&lt;/li>
&lt;li>RuntimeImport: 法線テクスチャのPack&lt;/li>
&lt;li>Export: 法線テクスチャのUnpack&lt;/li>
&lt;li>sRGBとLinearの対応&lt;/li>
&lt;li>Tangentの対応&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Metallic, Roughnes, OcclusionMapの変換&lt;/p>
&lt;ul>
&lt;li>RGBAチャンネル組み換え&lt;/li>
&lt;li>Roughness値とSmoothness値の反転&lt;/li>
&lt;li>sRGBとLinearの対応&lt;/li>
&lt;li>Importerで変換、Exporterで逆変換&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="トラブルシューティング">トラブルシューティング&lt;/h2>
&lt;ul>
&lt;li>ピカピカに反射してしまう。
&lt;ul>
&lt;li>Shaderの種類が &lt;code>Standard&lt;/code> (Unityの標準) で &lt;code>metallic&lt;/code> と &lt;code>smooth&lt;/code> 値が高い状態になっています。 マテリアルのシェーダーを &lt;code>Unlit/UniUnlit&lt;/code> にするとテクスチャがそのまま表示できます。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: エクスポート時にBlendShapeの状態をベイクする</title><link>https://vrm.dev/docs/univrm/blendshape/univrm_bake_blendshape/</link><pubDate>Mon, 27 Jul 2020 19:28:41 +0900</pubDate><guid>https://vrm.dev/docs/univrm/blendshape/univrm_bake_blendshape/</guid><description>
&lt;p>UniVRM ではエクスポートするときに、 &lt;code>SkinnedMeshRenderer&lt;/code> のスライダーを上げておくとその状態を基本状態にすることができます。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/blendshape_value.jpg" width="400" />
&lt;p>&lt;code>Pose Freeze&lt;/code> のチェックボックスを有効にする必要があります。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/check_freeze.jpg" width="400" />
&lt;p>エクスポートすると・・・&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/bake_blink.gif" />
&lt;p>基本状態(blendShape が 0 の状態)が変更されます。&lt;/p></description></item><item><title>Docs: VRMファイルを眺めてみたい</title><link>https://vrm.dev/how_to_view_vrm/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/how_to_view_vrm/</guid><description>
&lt;h2 id="vrmファイルの読み込みかた">VRMファイルの読み込みかた&lt;/h2>
&lt;p>&lt;a href="https://github.com/vrm-c/UniVRMTest/releases">UniVRMTest/releases&lt;/a>からVRMファイルのビューアーアプリケーションをダウンロードしてください。プログラムを実行してVRMモデルを選んでモデルが表示されます。
また、以下の方法は少し面倒ですが、UnityでVRMファイルを読み込むことで内容を確認することができます。他のVRMビューアは&lt;a href="https://vrm.dev/vrm_applications/#ビューア">こちら&lt;/a>をご覧ください。&lt;/p>
&lt;h3 id="1unityで空のプロジェクトを作る">1.Unityで空のプロジェクトを作る&lt;/h3>
&lt;img src="https://vrm.dev/images/vrm/unity_new_project.png" />
&lt;p>Unityを起動し、プロジェクトを新規作成します。New→Create projectをクリック。&lt;/p>
&lt;h3 id="2unityにunivrmをインストール">2.UnityにUniVRMをインストール&lt;/h3>
&lt;img src="https://vrm.dev/images/vrm/package_import.png" alt="package_import" />
&lt;p>&lt;a href="https://github.com/vrm-c/UniVRM/releases">UniVRM/releases&lt;/a>から最新のunitypackageをダウンロードし、&lt;code>Assets/VRM&lt;/code>にインストールします。
&lt;strong>既存のVRMが存在している場合、あらかじめVRMフォルダを削除することを推奨&lt;/strong>しています。
UniVRM-XXX.unitypackageファイルをUnityにインポートしてください。&lt;/p>
&lt;h3 id="3vrmファイルをunity上に読み込む">3.VRMファイルをUnity上に読み込む&lt;/h3>
&lt;img src="https://vrm.dev/images/vrm/vrm_prefab.png" />
&lt;p>&lt;strong>VRMファイルを、UnityのAssetsにドラッグ＆ドロップする&lt;/strong>だけで、VRMファイルがインポートされ&lt;strong>モデルデータのPrefabが生成されます&lt;/strong>。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/alicia_scene2.png" />
&lt;p>&lt;strong>VRMから生成されたPrefabをあらためてシーンに配置します&lt;/strong>。
すると、モデルデータが表示されます。&lt;/p>
&lt;img src="https://vrm.dev/images/vrm/vrm_settings.png" />
&lt;p>読み込まれたモデルデータをHierarchyで選択すると、&lt;strong>インスペクタに各種情報が表示されます&lt;/strong>。&lt;/p>
&lt;h2 id="vrmファイルの読み込みかた簡易版">VRMファイルの読み込みかた（簡易版）&lt;/h2>
&lt;img src="https://vrm.dev/images/vrm/alicia_3dbuilder.png" />
&lt;p>～.vrmとなっているファイル拡張子を ～.glb に変更すると、&lt;strong>Windows 10標準搭載の3D Builderで読み込み確認することができます&lt;/strong>。（ただしVRM独自の設定は反映されません）&lt;/p>
&lt;h2 id="vrmファイルを投稿する探す">VRMファイルを投稿する・探す&lt;/h2>
&lt;p>現在、&lt;a href="https://seed.online/">The Seed Online&lt;/a>、&lt;a href="https://hub.vroid.com/">VRoid Hub&lt;/a>及び&lt;a href="https://3d.nicovideo.jp/">ニコニ立体&lt;/a>でVRMファイルの投稿ができます。
ニコニ立体では&lt;a href="https://3d.nicovideo.jp/search?word_type=tag&amp;amp;word=VRM">こちら&lt;/a>から投稿されたVRMモデルデータのリストが見られます。ライセンスなど確認して使ってみてください。&lt;/p>
&lt;p>なお、ニコニ立体にご自分でVRMファイルを投稿する際、「バーチャルキャスト連携」を有効にすると&lt;a href="https://virtualcast.jp/">バーチャルキャスト&lt;/a>から利用できます。&lt;/p></description></item><item><title>Docs: 一人称表示</title><link>https://vrm.dev/docs/univrm/firstperson/univrm_firstperson/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/docs/univrm/firstperson/univrm_firstperson/</guid><description>
&lt;h1 id="vrmfirstperson">VRMFirstPerson&lt;/h1>
&lt;p>一人称表示に関連する設定です。&lt;/p>
&lt;h2 id="firstpersonbone">FirstPersonBone&lt;/h2>
&lt;p>通常頭ボーンを指定します。
一人称時にヘッドセットに追随させるボーンです。&lt;/p>
&lt;h2 id="firstpersonoffset">FirstPersonOffset&lt;/h2>
&lt;p>追随する位置をFirstPersonBoneの位置からオフセットします。
デフォルト値[0, 0.06, 0]は、Headから両目の間へのオフセットを想定しています。&lt;/p>
&lt;h2 id="renderers">Renderers&lt;/h2>
&lt;p>一人称描画時のメッシュのOn/Offをコントロールする設定です。&lt;/p>
&lt;p>VRアプリでは、自分モデルの頭部の見えなくていい部分が見えてしまう問題があります。
VRMFirstPersonでは一人称時に頭を描画しないようにすることを支援する機能を用意しています。&lt;/p>
&lt;h3 id="頭が分かれている場合">頭が分かれている場合&lt;/h3>
&lt;p>頭に&lt;strong>ThirdPersonOnly&lt;/strong>を指定します。
その他の部分に&lt;strong>Both&lt;/strong>を指定します。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/firstperson.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>立体ちゃんは頭とそれ以外が分かれているので体をBoth、頭をThirdPersonOnlyに設定します。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/firstperson_runtime.png" alt="firstperson" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>動作例。ThirdPersonOnlyに設定したメッシュがFirstPersonで非表示になりました。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="頭が分かれていない場合">頭が分かれていない場合&lt;/h3>
&lt;p>Autoを指定します。
実行時に頭以外をコピーしたモデルを複製して、これを&lt;strong>FirstPersonOnly&lt;/strong>として扱います。
元のモデルは&lt;strong>ThirdPersonOnly&lt;/strong>として扱います。
頭ボーンのとその子孫のウェイトを持っている部分が削除対象になります。&lt;/p>
&lt;h3 id="特に設定しない場合">特に設定しない場合&lt;/h3>
&lt;p>Bothを設定してください。&lt;/p></description></item><item><title>Docs: BlendShapeを操作する</title><link>https://vrm.dev/dev/univrm-0.xx/programming/univrm_use_blendshape/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/dev/univrm-0.xx/programming/univrm_use_blendshape/</guid><description>
&lt;h2 id="スクリプトからblendshapeを適用する">スクリプトからBlendShapeを適用する&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#000">GetComponent&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">VRMBlendShapeProxy&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// enumで呼び出し
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ImmediatelySetValue&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BlendShapePreset&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">A&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1.0f&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// 0から1で指定
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// stringで呼び出し
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ImmediatelySetValue&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;A&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1.0f&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="複数のblendshapeをまとめて適用する">複数のBlendShapeをまとめて適用する&lt;/h2>
&lt;p>たとえば&lt;/p>
&lt;p>Blink_Lが&lt;/p>
&lt;ul>
&lt;li>MeshAのeye_L=100&lt;/li>
&lt;li>MeshAのeye_R=1&lt;/li>
&lt;/ul>
&lt;p>Blink_Rが&lt;/p>
&lt;ul>
&lt;li>MeshAのeye_L=1&lt;/li>
&lt;li>MeshAのeye_R=100&lt;/li>
&lt;/ul>
&lt;p>で定義されている場合に両方を有効にする意図で下記のようにすると、後からセットしたものだけが適用されてしまいます。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ImmediatelySetValue&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BlendShapePreset&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Blink_L&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1.0f&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ImmediatelySetValue&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BlendShapePreset&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Blink_R&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1.0f&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;p>この場合は、以下のようにできます。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">AccumerateValue&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BlendShapePreset&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Blink_L&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1.0f&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// すぐに適用せずにたくわえる
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">AccumerateValue&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BlendShapePreset&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Blink_R&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1.0f&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Apply&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// 蓄積した値をまとめて適用する
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>または&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">SetValues&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">Dictionary&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">BlendShapeKey&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">float&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BlendShapeKey&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BlendShapePreset&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Blink_L&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1.0f&lt;/span>&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">BlendShapeKey&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">BlendShapePreset&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Blink_R&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1.0f&lt;/span>&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: LookAt(UV)</title><link>https://vrm.dev/docs/univrm/lookat/lookat_uv/</link><pubDate>Wed, 05 Aug 2020 20:01:17 +0900</pubDate><guid>https://vrm.dev/docs/univrm/lookat/lookat_uv/</guid><description>
&lt;p>VRMLookAtHead + VRMLookAtBlendShapeApplyer の２つのコンポーネントを組み合わせます。
&lt;code>VRMLookAtBoneApplyer&lt;/code> を削除して、代わりに &lt;code>VRMLookAtBlendShapeApplyer&lt;/code> をアタッチしてください。&lt;/p>
&lt;h2 id="textureのuv操作による視線制御">TextureのUV操作による視線制御&lt;/h2>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/blendshape_applyer.png" alt="image">&lt;/p>
&lt;p>Textureを上下左右にスライドさせることで目線を移動させる方法です。
&lt;code>Unityちゃん&lt;/code> はこのタイプです。&lt;/p>
&lt;h2 id="目のマテリアルを探す">目のマテリアルを探す&lt;/h2>
&lt;p>マテリアルのインスペクタの目のテクスチャの &lt;code>Tiling Offset&lt;/code> の設定に注目してください。&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/material_tiling_offset.png" alt="image">&lt;/p>
&lt;p>&lt;code>1, 1, 0, 0&lt;/code> になっているはずです(なっていない場合は特殊なので以降を適切に読み替えてください)。&lt;/p>
&lt;p>試しに、&lt;code>Offset&lt;/code> Xの値を増減させてみてください。目が左右に動きます。Yの値では上下に動くはずです。
目的の設定が見つかったので元に戻して次に進みます。&lt;/p>
&lt;h2 id="blendshapeの準備">BlendShapeの準備&lt;/h2>
&lt;p>LookUp, LookDown, LookLeft, LookRight が、目標のマテリアルのカラーマテリアルの UV を操作するようにします。
例では、Materialに &lt;code>unlit/transparent cutout&lt;/code> を使用しています。&lt;/p>
&lt;h3 id="lookleftの例">LookLeftの例&lt;/h3>
&lt;p>&lt;code>LookLeft&lt;/code> 選択してください。&lt;/p>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/lookleft.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>&lt;code>Material List&lt;/code> タブを選択&lt;/li>
&lt;li>&lt;code>+&lt;/code> を選択&lt;/li>
&lt;li>&lt;code>eye_L1&lt;/code> - &lt;code>_MainTex_ST&lt;/code> を選択&lt;/li>
&lt;li>&lt;code>Tliling = 1, 1&lt;/code>, &lt;code>Offset = 0, 0&lt;/code> に設定します&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/tiling_offset_1100.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>Offsetを調整してLookLeftを作ります&lt;/li>
&lt;li>&lt;code>eye_R1&lt;/code> も同様に&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://vrm.dev/images/wiki/look_left.png" alt="image">&lt;/p>
&lt;p>&lt;a href="http://unity-chan.com/">© UTJ/UCL&lt;/a>&lt;/p>
&lt;h3 id="degreemapping">DegreeMapping&lt;/h3>
&lt;p>以下の設定で、目標物への相対角度 yaw, pitch の適用度合を調整できます。&lt;/p>
&lt;ul>
&lt;li>yaw, pitch 角の上限値 =&amp;gt; Curve X Range Degree&lt;/li>
&lt;li>yaw, pitch が上限の時の blendShape の適用割合(0 ～ 1)。1にしてください =&amp;gt; Curve Y Range Degree&lt;/li>
&lt;/ul>
&lt;p>次の３つを設定してください。&lt;/p>
&lt;ul>
&lt;li>VerticalDown&lt;/li>
&lt;li>VerticalUp&lt;/li>
&lt;li>Horizontal&lt;/li>
&lt;/ul></description></item><item><title>Docs: アニメーション</title><link>https://vrm.dev/docs/univrm/gltf/animation_exporter/</link><pubDate>Tue, 04 Aug 2020 14:54:52 +0900</pubDate><guid>https://vrm.dev/docs/univrm/gltf/animation_exporter/</guid><description>
&lt;p>GLTF は、Animation の定義があります。&lt;/p>
&lt;blockquote>
&lt;p>VRM は、Animation を使わないという仕様です&lt;/p>
&lt;/blockquote>
&lt;h3 id="対応バージョン">対応バージョン&lt;/h3>
&lt;ul>
&lt;li>v0.44&lt;/li>
&lt;/ul>
&lt;h3 id="対応状況">対応状況&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="left">KeyName&lt;/th>
&lt;th align="center">&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="left">TranslationKey&lt;/td>
&lt;td align="center">○&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">RotationKey&lt;/td>
&lt;td align="center">○&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">ScaleKey&lt;/td>
&lt;td align="center">○&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="left">BlendShapeKey&lt;/td>
&lt;td align="center">×&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="animatorをエクスポートする場合">Animatorをエクスポートする場合&lt;/h3>
&lt;ol>
&lt;li>ルートGameObjectにAnimatorコンポーネントを追加&lt;/li>
&lt;li>AnimatorControllerを作成し、それをAnimatorのController項目に設定&lt;/li>
&lt;li>UnityEditorのツールバーからWindow&amp;gt;AnimationでAnimationウインドウを開く&lt;/li>
&lt;li>ルートGameObjectが選択状態であることを確認してAnimationウインドウ中央に表示されているCreateボタンを押してAnimationClipを作る&lt;/li>
&lt;li>このクリップに対してアニメーションキーを追加&lt;/li>
&lt;li>UniGLTF&amp;gt;Exportからglbを出力する&lt;/li>
&lt;/ol>
&lt;h3 id="animationをエクスポートする場合">Animationをエクスポートする場合&lt;/h3>
&lt;ol>
&lt;li>ルートGameObjectにAnimationコンポーネントを追加&lt;/li>
&lt;li>UnityEditorのツールバーからWindow&amp;gt;AnimationでAnimationウインドウを開く&lt;/li>
&lt;li>ルートGameObjectが選択状態であることを確認してAnimationウインドウ中央に表示されているCreateボタンを押してAnimationClipを作る&lt;/li>
&lt;li>Inspectorの設定をDebugモードにしてAnimationClipのLegacyフラグをONにする&lt;br>
&lt;img src="https://vrm.dev/images/wiki/LegacyClip.png" alt="Interpolation">&lt;/li>
&lt;li>AnimationコンポーネントのAnimation項目に作成したAnimationClipを設定&lt;/li>
&lt;li>クリップに対してアニメーションキーを追加&lt;/li>
&lt;li>UniGLTF&amp;gt;Exportからglbを出力する&lt;/li>
&lt;/ol>
&lt;h3 id="注意事項">注意事項&lt;/h3>
&lt;ol>
&lt;li>RotationKeyのInterpolation設定をQuaternionかまたはEulerAngles(Quaternion)にすること&lt;br>
&lt;img src="https://vrm.dev/images/wiki/Interpolation.png" alt="Interpolation">&lt;/li>
&lt;li>Animatorの場合は設定されている全てのClipを検索して書き出しをしているが、ステートの状態などは出力されない&lt;/li>
&lt;li>Animator経由だと複数のアニメーションが書き込まれるが、UniGLTFのImporterが読み込むのは最初の１つだけ(UniGLTF-1.25時点）&lt;/li>
&lt;/ol></description></item><item><title>Docs: Export Import</title><link>https://vrm.dev/docs/univrm/shaders/univrm_export_import/</link><pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate><guid>https://vrm.dev/docs/univrm/shaders/univrm_export_import/</guid><description>
&lt;h2 id="エクスポート">エクスポート&lt;/h2>
&lt;h3 id="gltf-レイヤー">GLTF レイヤー&lt;/h3>
&lt;p>gltf の &lt;code>/materials[]&lt;/code> に記録します。&lt;/p>
&lt;ul>
&lt;li>PBR(default)&lt;/li>
&lt;li>Unlit(KHR_materials_unlit extension)&lt;/li>
&lt;/ul>
&lt;p>の２種類のみをサポートしています。&lt;/p>
&lt;h4 id="詳細">詳細&lt;/h4>
&lt;p>&lt;code>standard&lt;/code> と見做して処理します。&lt;/p>
&lt;p>Unityマテリアルが以下の何れかのシェーダーである場合に、
&lt;code>KHR_materials_unlit&lt;/code> extension を追加します。&lt;/p>
&lt;ul>
&lt;li>Unlit/Color(Unity標準)&lt;/li>
&lt;li>Unlit/Texture(Unity標準)&lt;/li>
&lt;li>Unlit/Transparent(Unity標準)&lt;/li>
&lt;li>Unlit/Transparent Cutout(Unity標準)&lt;/li>
&lt;li>UniGLTF/UniUnlit(UniVRM)&lt;/li>
&lt;li>VRM/UnlitTexture(UniVRM)&lt;/li>
&lt;li>VRM/UnlitTransparent(UniVRM)&lt;/li>
&lt;li>VRM/UnlitCutout(UniVRM)&lt;/li>
&lt;/ul>
&lt;h3 id="vrm-レイヤー">VRM レイヤー&lt;/h3>
&lt;p>gltf の &lt;code>/extensions/VRM/materialProperties[]&lt;/code> に記録します。&lt;/p>
&lt;ul>
&lt;li>VRM/UnlitTransparentZWrite&lt;/li>
&lt;li>VRM/MToon&lt;/li>
&lt;/ul>
&lt;p>以外の時は、 &lt;code>shaderName&lt;/code> に &lt;code>VRM_USE_GLTFSHADER&lt;/code> が記録されて、 &lt;code>unknown shader&lt;/code> として GLTF 処理されます。&lt;/p>
&lt;h2 id="インポート">インポート&lt;/h2>
&lt;h3 id="gltf-レイヤー-1">GLTF レイヤー&lt;/h3>
&lt;p>GLTFの &lt;code>/materials[]&lt;/code> からUnityマテリアルを作成します。
&lt;code>KHR_materials_unlit&lt;/code> extension を発見した場合に、&lt;/p>
&lt;ul>
&lt;li>UniGLTF/UniUnlit&lt;/li>
&lt;/ul>
&lt;p>でマテリアルを作成します。&lt;/p>
&lt;p>&lt;a href="https://vrm.dev/docs/univrm/shaders/univrm_vrmshaders/#uniunlit">UniUnlit&lt;/a>&lt;/p>
&lt;h3 id="vrm-レイヤー-1">VRM レイヤー&lt;/h3>
&lt;p>GLTFの &lt;code>/extensions/VRM/materialProperties[]&lt;/code> からUnityマテリアルを作成します。
&lt;code>shaderName&lt;/code> が &lt;code>VRM_USE_GLTFSHADER&lt;/code> の場合は、 &lt;code>/materials[]&lt;/code> に記録されている情報を使って &lt;code>GLTF&lt;/code> の &lt;code>PBR&lt;/code> か &lt;code>Unlit&lt;/code> として処理します。&lt;/p>
&lt;h2 id="エクスポートしてインポートしたときのシェーダーの変化">エクスポートしてインポートしたときのシェーダーの変化&lt;/h2>
&lt;p>エクスポートしてからインポートすると元と違うシェーダーになる場合があります。&lt;/p>
&lt;ul>
&lt;li>サポート外のシェーダーの場合。 &lt;code>Standard&lt;/code> になります。GLTF のデフォルトが &lt;code>PBR&lt;/code> で、それに対応するのが &lt;code>Standard&lt;/code> です。&lt;/li>
&lt;li>unlit 系の場合。 &lt;a href="https://vrm.dev/docs/univrm/shaders/univrm_unlit/">UniGLTF/UniUnlit&lt;/a> になります。正常な動作です。&lt;/li>
&lt;/ul>
&lt;h2 id="vrm_use_gltfshader">VRM_USE_GLTFSHADER&lt;/h2>
&lt;p>&lt;code>/extensions/VRM/materialProperties[]&lt;/code>&lt;/p>
&lt;p>に記録した情報を使ってすべてのシェーダーを読みこめます。&lt;/p>
&lt;ul>
&lt;li>Runtimeは問題ない&lt;/li>
&lt;li>EditorはインスペクターをアクティブにしたタイミングでGUIに値が変更されたりして個別の対応が必要な場合があり完全ではない&lt;/li>
&lt;/ul>
&lt;p>ただし、この機能は&lt;/p>
&lt;ul>
&lt;li>VRM/UnlitTransparentZWrite&lt;/li>
&lt;li>VRM/MToon&lt;/li>
&lt;/ul>
&lt;p>以外では &lt;code>VRM_USE_GLTFSHADER&lt;/code> で無効になるように封じています(v0.44くらい)。実質 MToon 専用です。
VRMがサポートするシェーダーは、 &lt;code>PBR(Standard)&lt;/code>, &lt;code>Unlit&lt;/code>, &lt;code>MToon&lt;/code> の３種類です。&lt;/p>
&lt;blockquote>
&lt;p>歴史的経緯で &lt;code>UnlitTransparentZWrite&lt;/code> が存在していますが、整理予定です。 &lt;code>MToon&lt;/code> の &lt;code>ZWrite&lt;/code> 機能を使ってください&lt;/p>
&lt;/blockquote>
&lt;p>以前にエクスポートするなどして &lt;code>VRM_USE_GLTFSHADER&lt;/code> を回避していればロード出来る場合があります。
最初は、&lt;code>VRM&lt;/code> と無関係に Unity のマテリアルを読み書きする機能だった名残です。&lt;/p></description></item><item><title>Docs: VRMファイルが使えるアプリケーションは？</title><link>https://vrm.dev/vrm_applications/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/vrm_applications/</guid><description>
&lt;h2 id="3dキャラクター投稿プラットフォーム">3Dキャラクター投稿プラットフォーム&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://seed.online/">ザ・シードオンライン&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://3d.nicovideo.jp/">ニコニ立体&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hub.vroid.com/">VRoid Hub&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="プラグイン">プラグイン&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>アプリケーション&lt;/th>
&lt;th>プラットフォーム&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://vrm.dev/univrm/">UniVRM&lt;/a>&lt;/td>
&lt;td>Unityエディタ拡張, Unityライブラリ&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/saturday06/VRM_IMPORTER_for_Blender2_8">VRM_IMPORTER&lt;/a>&lt;/td>
&lt;td>Blenderアドオン&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/ruyo/VRM4U">VRM4U&lt;/a>&lt;/td>
&lt;td>UnrealEngineプラグイン&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/kashikacojp/glTF-Maya-Exporter">glTF-Maya-Exporter&lt;/a>&lt;/td>
&lt;td>Mayaスクリプト&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://pokemori.booth.pm/items/1025226">VRM Converter for VRChat&lt;/a>&lt;/td>
&lt;td>Unityエディタ拡張&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://pokemori.booth.pm/items/1788660">CopyVRMSettings.cs&lt;/a>&lt;/td>
&lt;td>Unityエディタ拡張&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="キャラメイクツール">キャラメイクツール&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>アプリケーション&lt;/th>
&lt;th>プラットフォーム&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://vroid.com/studio/">VRoid Studio&lt;/a>&lt;/td>
&lt;td>Windows, macOS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://fantia.jp/fanclubs/10552">セシル変身アプリ&lt;/a>&lt;/td>
&lt;td>Windows, macOS&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="配信ツール">配信ツール&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>アプリケーション&lt;/th>
&lt;th>プラットフォーム&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://sites.google.com/view/vdraw/">VDRAW&lt;/a>&lt;/td>
&lt;td>Windows&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://campaign.showroom-live.com/showroom-v/">SHOWROOM V&lt;/a>&lt;/td>
&lt;td>iOS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://sites.google.com/site/vhitogata/">Hitogata&lt;/a>&lt;/td>
&lt;td>Windows&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://3tene.com/">3tene&lt;/a>&lt;/td>
&lt;td>Windows, macOS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://store.steampowered.com/app/870820/Wakaru_ver_beta/">Wakaru&lt;/a>&lt;/td>
&lt;td>Windows&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://sh-akira.github.io/VirtualMotionCapture/">バーチャルモーションキャプチャー&lt;/a>&lt;/td>
&lt;td>Windows VR&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://facevtuber.com/">FaceVTuber&lt;/a>&lt;/td>
&lt;td>Google Chrome&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/m2wasabi/LiveAvatar">LiveAvatar&lt;/a>&lt;/td>
&lt;td>HTC VIVE&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://luppet.appspot.com/">Luppet&lt;/a>&lt;/td>
&lt;td>Windows + Leap Motion&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://apps.apple.com/jp/app/vear/id1490697369">vear&lt;/a>&lt;/td>
&lt;td>iOS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/xelloss120/CharWebCam">CharWebCam&lt;/a>&lt;/td>
&lt;td>Windows&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://malaybaku.github.io/VMagicMirror/">VMagicMirror&lt;/a>&lt;/td>
&lt;td>Windows&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://2dr.info/">2DR&lt;/a>&lt;/td>
&lt;td>iOS, Android&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="メタバース">メタバース&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>アプリケーション&lt;/th>
&lt;th>プラットフォーム&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://virtualcast.jp/">バーチャルキャスト&lt;/a>&lt;/td>
&lt;td>Windows VR&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://cluster.mu/">cluster&lt;/a>&lt;/td>
&lt;td>PCVR, Windows, macOS, iOS, Android&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://biscrat.booth.pm/items/1193414">Clarie&lt;/a>&lt;/td>
&lt;td>Windows VR&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/exokitxr/avatars">Exokit&lt;/a>&lt;/td>
&lt;td>Windows, macOS, Linux, VR&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ゲームなど">ゲームなど&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>アプリケーション&lt;/th>
&lt;th>プラットフォーム&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://wandv.jp/seiya/">SEIYA&lt;/a>&lt;/td>
&lt;td>Windows VR&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://orenodinner.booth.pm/items/952450">BONFIRE~焚き火~&lt;/a>&lt;/td>
&lt;td>Oculus Go&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://store.steampowered.com/app/867090/VR__TSUNTSUN_VR/">つんつんVR&lt;/a>&lt;/td>
&lt;td>Windows VR&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.mediaplex.co.jp/korokoro/">コロコロシステム&lt;/a>&lt;/td>
&lt;td>Oculus Rift&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://n-mattun.booth.pm/">パイロットクロス&lt;/a>&lt;/td>
&lt;td>Windows VR&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ビューア">ビューア&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>アプリケーション&lt;/th>
&lt;th>プラットフォーム&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://naby.booth.pm/items/990663">Vワールド&lt;/a>&lt;/td>
&lt;td>Windows&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/virtual-cast/babylon-vrm-loader/">Babylon VRM Viewer&lt;/a>&lt;/td>
&lt;td>Babylon.js拡張&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/pixiv/three-vrm/">Three-VRM&lt;/a>&lt;/td>
&lt;td>three.js拡張&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://booooooh.booth.pm/items/1033823">VPocket&lt;/a>&lt;/td>
&lt;td>Android, iOS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://w.atwiki.jp/beamman/">VRMビュアー&lt;/a>&lt;/td>
&lt;td>Windows&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://vrm-viewer.yukimochi.io/">VRM Viewer&lt;/a>&lt;/td>
&lt;td>Webブラウザ&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/magicien/VRMQuickLook">VRMQuickLook&lt;/a>&lt;/td>
&lt;td>macOS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://fantom1x.blog130.fc2.com/blog-entry-309.html">VRM Live Viewer&lt;/a>&lt;/td>
&lt;td>Windows&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/kirurobo/UniWinApi">UniWinApi Example project&lt;/a>&lt;/td>
&lt;td>Unityライブラリ&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://120byte.booth.pm/items/1099618">VRMお人形遊び&lt;/a>&lt;/td>
&lt;td>Windows VR&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/m2wasabi/KinectV2VRM">KinectV2VRM&lt;/a>&lt;/td>
&lt;td>Unityライブラリ&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://www.vrai.jp/vr_mocuvrm.html">MocuMocuVRM&lt;/a>&lt;/td>
&lt;td>Windows VR, Looking Glass&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://akarimichi.github.io/vrm-display-releases/">VRM Display&lt;/a>&lt;/td>
&lt;td>Windows&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="その他のvrm対応アプリ">その他のVRM対応アプリ&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>アプリケーション&lt;/th>
&lt;th>プラットフォーム&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://app.famitsu.com/gametitle/8356/">Vタビ&lt;/a>&lt;/td>
&lt;td>iOS, Android&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://vismuth.com/">Vismuth&lt;/a>&lt;/td>
&lt;td>Android, iOS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/t-takasaka/AI4Animation/tree/master/AI4Animation/Assets/Demo/ARKit">AI4Animation&lt;/a>&lt;/td>
&lt;td>Unityライブラリ&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://bnut.jp/vstamp">Vスタンプ&lt;/a>&lt;/td>
&lt;td>iOS, Android&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/m2wasabi/VRMLoaderUI">VRMLoaderUI&lt;/a>&lt;/td>
&lt;td>Unityライブラリ&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://deatrathias.net/TW/">TRACKING WORLD&lt;/a>&lt;/td>
&lt;td>Windows VR&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="内部的にvrmを活用しているサービス">内部的にVRMを活用しているサービス&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>アプリケーション&lt;/th>
&lt;th>プラットフォーム&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="http://vkatsu.jp/">Vカツ&lt;/a>&lt;/td>
&lt;td>Windows, iOS, Android&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://customcast.jp/">カスタムキャスト&lt;/a>&lt;/td>
&lt;td>iOS, Android&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://reality.wrightflyer.net/">REALITY&lt;/a>&lt;/td>
&lt;td>iOS, Android&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.puppemoji.com/">パペ文字&lt;/a>&lt;/td>
&lt;td>iOS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://materializer.co/lab/mayalive">メイアライブオーダーメイド版&lt;/a>&lt;/td>
&lt;td>Windows, macOS&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: UniVRMの座標系変換について</title><link>https://vrm.dev/dev/univrm-0.xx/programming/univrm_coordinate/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/dev/univrm-0.xx/programming/univrm_coordinate/</guid><description>
&lt;p>UniVRMは、インポート・エクスポート時に自動でGLTFとの座標変換を実行しています。&lt;/p>
&lt;h2 id="vrmの座標系">VRMの座標系&lt;/h2>
&lt;p>VRMはGLTFの拡張なので、GLTFの座標系に準拠します。
OpenGL標準の右手系Y-UP座標系です。&lt;/p>
&lt;ul>
&lt;li>右:X+&lt;/li>
&lt;li>上:Y+&lt;/li>
&lt;li>前:Z-&lt;/li>
&lt;/ul>
&lt;h2 id="unityの座標系">Unityの座標系&lt;/h2>
&lt;p>左手系Y-UP座標系です。&lt;/p>
&lt;ul>
&lt;li>右:X+&lt;/li>
&lt;li>上:Y+&lt;/li>
&lt;li>前:Z+(+-が反転)&lt;/li>
&lt;/ul>
&lt;h2 id="各値の変換">各値の変換&lt;/h2>
&lt;p>Z軸を反転します。&lt;/p>
&lt;h3 id="vector3position-normalなど">Vector3(Position, Normalなど)&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#000">Vector3&lt;/span> &lt;span style="color:#000">ReverseZ&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span> &lt;span style="color:#000">Vector3&lt;/span> &lt;span style="color:#000">v&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">Vector3&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">v&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">x&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">v&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">y&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">v&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">z&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="quaternionrotation">Quaternion(Rotation)&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#000">Quaternion&lt;/span> &lt;span style="color:#000">ReverseZ&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span> &lt;span style="color:#000">Quaternion&lt;/span> &lt;span style="color:#000">q&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">float&lt;/span> &lt;span style="color:#000">angle&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">Vector3&lt;/span> &lt;span style="color:#000">axis&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">q&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ToAngleAxis&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">out&lt;/span> &lt;span style="color:#000">angle&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">out&lt;/span> &lt;span style="color:#000">axis&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">Quaternion&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">AngleAxis&lt;/span>&lt;span style="color:#000;font-weight:bold">(-&lt;/span>&lt;span style="color:#000">angle&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ReverseZ&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">axis&lt;/span>&lt;span style="color:#000;font-weight:bold">));&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="matrixbindmatrices">Matrix(BindMatrices)&lt;/h3>
&lt;p>スケール値が入っているとうまくいきません&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#000">Matrix4x4&lt;/span> &lt;span style="color:#000">ReverseZ&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">this&lt;/span> &lt;span style="color:#000">Matrix4x4&lt;/span> &lt;span style="color:#000">m&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#if UNITY_2017_1_OR_NEWER
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">m&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">SetTRS&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">m&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">GetColumn&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">).&lt;/span>&lt;span style="color:#000">ReverseZ&lt;/span>&lt;span style="color:#000;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">m&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">rotation&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ReverseZ&lt;/span>&lt;span style="color:#000;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">Vector3&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">one&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#else
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">m&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">SetTRS&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">m&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ExtractPosition&lt;/span>&lt;span style="color:#000;font-weight:bold">().&lt;/span>&lt;span style="color:#000">ReverseZ&lt;/span>&lt;span style="color:#000;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">m&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ExtractRotation&lt;/span>&lt;span style="color:#000;font-weight:bold">().&lt;/span>&lt;span style="color:#000">ReverseZ&lt;/span>&lt;span style="color:#000;font-weight:bold">(),&lt;/span> &lt;span style="color:#000">Vector3&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">one&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#endif
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">m&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: VRMFirstPersonの使い方</title><link>https://vrm.dev/dev/univrm-0.xx/programming/univrm_use_firstperson/</link><pubDate>Tue, 29 May 2018 10:00:00 +0900</pubDate><guid>https://vrm.dev/dev/univrm-0.xx/programming/univrm_use_firstperson/</guid><description>
&lt;h1 id="vrmfirstpersonの設定">VRMFirstPersonの設定&lt;/h1>
&lt;p>&lt;a href="https://vrm.dev/docs/univrm/firstperson/univrm_firstperson/">VRMFirstPerson&lt;/a>ではRendererに対して設定があります。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>FirstPersonFlag&lt;/th>
&lt;th>レイヤー&lt;/th>
&lt;th>備考&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Both&lt;/td>
&lt;td>default&lt;/td>
&lt;td>一人称と三人称で分ける必要のない部分に指定します&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ThirdPersonOnly&lt;/td>
&lt;td>VRMThirdPersonOnly&lt;/td>
&lt;td>一人称時に描画したくない部分に指定します&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FirstPersonOnly&lt;/td>
&lt;td>VRMFirstPersonOnly&lt;/td>
&lt;td>三人称時に描画したくない部分に指定します。自動作成した頭部無しモデルが使います&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Auto&lt;/td>
&lt;td>VRMThirdPersonOnly&lt;/td>
&lt;td>実行時に一人称用モデルを自動で作成し、それをFIRSTPERSON_ONLY_LAYERに設定します&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>実行時に&lt;strong>VRMFirstPerson.Setup&lt;/strong>を呼び出すことで、上記のレイヤー設定を行うことができます。明示的に外部から呼び出してください。&lt;/p>
&lt;h1 id="アプリケーションに追加の描画レイヤーを指定する">アプリケーションに追加の描画レイヤーを指定する&lt;/h1>
&lt;p>定数で以下のレイヤーを定義しています。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">VRMFirstPerson&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">MonoBehaviour&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">FIRSTPERSON_ONLY_LAYER&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">9&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">THIRDPERSON_ONLY_LAYER&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 省略
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/layer_setting.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>9番と１０番にLayerを設定&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="実行時にsetupを呼び出してカメラにlayermaskを設定する">実行時にSetupを呼び出して、カメラにLayerMaskを設定する&lt;/h1>
&lt;ul>
&lt;li>VRMFirstPerson.Setupの呼び出し&lt;/li>
&lt;li>一人称カメラとその他のカメラに対してLayerMask&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">System.Collections&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">System.Collections.Generic&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">UnityEngine&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">VRM&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">SetupExample&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">MonoBehaviour&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#c4a000"> [SerializeField]&lt;/span>
&lt;span style="color:#000">Camera&lt;/span> &lt;span style="color:#000">m_firstPersonCamera&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// HMDのカメラ
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#c4a000">
&lt;/span>&lt;span style="color:#c4a000"> [SerializeField]&lt;/span>
&lt;span style="color:#000">LayerMask&lt;/span> &lt;span style="color:#000">m_firstPersonMask&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// HMDのカメラにセットするマスク default | VRMFirstPersonOnly など
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#c4a000">
&lt;/span>&lt;span style="color:#c4a000"> [SerializeField]&lt;/span>
&lt;span style="color:#000">LayerMask&lt;/span> &lt;span style="color:#000">m_otherMask&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// HMDのカメラにセットするマスク default | VRMThirdPersonOnly など
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#c4a000">
&lt;/span>&lt;span style="color:#c4a000"> [SerializeField]&lt;/span>
&lt;span style="color:#000">VRMFirstPerson&lt;/span> &lt;span style="color:#000">m_firstPerson&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">Reset&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">m_firstPerson&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">GameObject&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">FindObjectOfType&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">VRMFirstPerson&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;();&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">Start&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">foreach&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">camera&lt;/span> &lt;span style="color:#204a87;font-weight:bold">in&lt;/span> &lt;span style="color:#000">GameObject&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">FindObjectsOfType&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Camera&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;())&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">camera&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">cullingMask&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">camera&lt;/span> &lt;span style="color:#000;font-weight:bold">==&lt;/span> &lt;span style="color:#000">m_firstPersonCamera&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">?&lt;/span> &lt;span style="color:#000">m_firstPersonMask&lt;/span>
&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">m_otherMask&lt;/span>
&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// VRMFirstPersonの初期化
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">m_firstPerson&lt;/span> &lt;span style="color:#000;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">m_firstPerson&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Setup&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: VRMSpringBone</title><link>https://vrm.dev/docs/univrm/springbone/univrm_secondary/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/docs/univrm/springbone/univrm_secondary/</guid><description>
&lt;p>揺れモノ設定。&lt;/p>
&lt;h1 id="コンポーネントのアタッチされるノード">コンポーネントのアタッチされるノード&lt;/h1>
&lt;p>VRMをインポートしたとき、揺れモノ関連のコンポーネントは以下のようにアタッチされます。&lt;/p>
&lt;ul>
&lt;li>VRMSpringBoneは、名前が&lt;code>secondary&lt;/code>のノードが自動的に作成されてそこにアタッチされます。&lt;/li>
&lt;li>VRMSpringBoneColliderGroupは、エクスポート時にアタッチされていたノードに復旧されます。&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/vrm_settings.png" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>VRMSpringBoneが見つからない場合には&lt;code>secondary&lt;/code>ノードをご確認ください。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="vrmspringbone">VRMSpringBone&lt;/h1>
&lt;p>尻尾、髪の毛、衣装などで動きに合わせて揺れて欲しいものの設定です。
揺らしたいオブジェクトの一番親のGameObjectをRootBonesにセットしてください。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/VRMSpringBone.png" alt="lookat" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>RootBonesに髪の毛とリボンを設定&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>これだけで、指定したボーンが動きに合わせて揺れます。&lt;/p>
&lt;h1 id="オプションvrmspringbonecollidergroup当たり判定">[オプション]VRMSpringBoneColliderGroup(当たり判定)&lt;/h1>
&lt;p>揺れモノが特定の部位を貫通しないように、当たり判定を入れることができます。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/collider.png" alt="collider" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>headに頭に当たり判定(VRMSpringBoneColliderGroup)を設定&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>当たり判定を入れたいボーンにVRMSpringBoneColliderGroupをアタッチして、VRMSpringBoneのColliderGroupsにセットしてください。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/set_collider.png" alt="set_collider" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>headにVRMSpringBoneColliderGroupをアタッチして、VRMSpringBoneのCollierGroupsに設定&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/spring_gizmo.png" alt="gizmo" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>動作時のGizmo。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="ひとつのvrmspringbonecollidergroupに複数の当たり判定を設定できます">ひとつのVRMSpringBoneColliderGroupに複数の当たり判定を設定できます&lt;/h2>
&lt;p>VRMSpringBoneColliderGroupには最初からひとつの球が設定されますが、複数の球をセットすることができます。&lt;/p></description></item><item><title>Docs: VRMShaders UPMパッケージ</title><link>https://vrm.dev/docs/univrm/shaders/univrm_vrmshaders/</link><pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate><guid>https://vrm.dev/docs/univrm/shaders/univrm_vrmshaders/</guid><description>
&lt;p>&lt;code>UniVRM-0.56&lt;/code> からフォルダ構成を変更して、
&lt;code>UniVRM&lt;/code> のマテリアル関連の機能は、 &lt;code>Assets/VRMShaders&lt;/code> に移動しました。&lt;/p>
&lt;h2 id="upm-パッケージ">UPM パッケージ&lt;/h2>
&lt;p>パッケージとして独立して、 &lt;code>UniVRM&lt;/code> とは関係なくマテリアル関連だけ単体で使うことできます。
( &lt;code>UniVRM&lt;/code> が &lt;code>VRMShaders&lt;/code> を使う関係)。
&lt;code>UniUnlit&lt;/code> と &lt;code>MToon&lt;/code> を内包しています。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#a40000">//&lt;/span> &lt;span style="color:#a40000">manifest.json&lt;/span> &lt;span style="color:#a40000">抜粋&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;dependencies&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders#v0.57.0&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>#0.57.0&lt;/code> 部分で UniVRM のリリース番号(github の tag)を指定します。
&lt;code>VRMShaders&lt;/code> は &lt;code>VRM&lt;/code> と同じリリース番号を適用する運用をしています。&lt;/p>
&lt;h3 id="uniunlit">UniUnlit&lt;/h3>
&lt;p>&lt;a href="https://vrm.dev/docs/univrm/shaders/univrm_unlit/">unlit&lt;/a>&lt;/p>
&lt;h3 id="mtoon">MToon&lt;/h3>
&lt;p>&lt;a href="https://github.com/Santarh/MToon">https://github.com/Santarh/MToon&lt;/a>&lt;/p>
&lt;p>で開発しています。
git submodule で、VRMShaders 配下になるようにしています。&lt;/p>
&lt;p>&lt;a href="https://github.com/vrm-c/UniVRM/tree/master/Assets/VRMShaders">https://github.com/vrm-c/UniVRM/tree/master/Assets/VRMShaders&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://vrm.dev/docs/univrm/shaders/mtoon/">mtoon&lt;/a>&lt;/p></description></item><item><title>Docs: PrefabがImportされるタイミングと上書きの注意</title><link>https://vrm.dev/docs/univrm/import/prefab_importer_behaviour/</link><pubDate>Tue, 04 Aug 2020 14:54:52 +0900</pubDate><guid>https://vrm.dev/docs/univrm/import/prefab_importer_behaviour/</guid><description>
&lt;h2 id="049">0.49&lt;/h2>
&lt;p>UnityEditorでVRMをAssetImportしたときに、Material, BlendShapeAvatarが既存の場合は上書きしません。
その場合に、Prefab からの Material, BlendShapeAvatarへの参照は既存のファイルを参照するようにしました。&lt;/p>
&lt;h2 id="046">0.46&lt;/h2>
&lt;p>UnityEditorでVRMをAssetImportしたときに、Material, BlendShapeAvatar, BlendShapeClip が既存の場合は上書きしません。
Mesh, Texture, Prefabは上書きします。&lt;/p>
&lt;p>Material, BlendShapeAvatar, BlendShapeClipはユーザーが変更しているかもしれないので上書きしないことにしました。
上書きしたい場合はImport前に削除してください。&lt;/p>
&lt;h2 id="045以前">0.45以前&lt;/h2>
&lt;p>UnityEditorでVRMをAssetImportしたときに、Mesh, Texture, Material, BlendShape, Prefabが既存の場合は上書きされます。&lt;/p></description></item><item><title>Docs: T-Poseとモデルの正規化の詳細</title><link>https://vrm.dev/docs/univrm/humanoid/t_pose/</link><pubDate>Tue, 04 Aug 2020 14:54:52 +0900</pubDate><guid>https://vrm.dev/docs/univrm/humanoid/t_pose/</guid><description>
&lt;h2 id="t-pose化の補足">T-Pose化の補足&lt;/h2>
&lt;p>正規化する時に、元のモデルがT-PoseでないときT-Pose化する必要があります。&lt;/p>
&lt;p>T-Pose化するには、&lt;/p>
&lt;ul>
&lt;li>エクスポートダイアログの &lt;code>force T-Pose&lt;/code> を checkする&lt;/li>
&lt;li>エクスポートダイアログの &lt;code>force T-Pose&lt;/code> を checkせずに、手動で腕等の回転を調整してT-Poseにする&lt;/li>
&lt;/ul>
&lt;p>のどちらでもOKです。自動T-Poseがいい感じにならない場合は手動をお試しください。
また、&lt;code>正規化済のモデル&lt;/code> を繰り返し &lt;code>正規化する&lt;/code> ことをはできるだけ避けてください(ずれが蓄積する)。&lt;/p>
&lt;p>システムが、正規化済みと判定したモデル(Metaコンポーネントがアタッチされているなど)では、 &lt;code>force T-Pose&lt;/code> がデフォルトでは外れるようになっています。&lt;/p>
&lt;h2 id="よくある不具合">よくある不具合&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>顎の位置が変わってしまう。&lt;code>fbx&lt;/code> の &lt;code>Rig&lt;/code>　設定で &lt;code>jaw&lt;/code> (顎) ボーンの割り当てを解除してください。VRMはプログラム側で顎ボーンを使っていないの割り当てを解除しても問題ありません。T-Pose化するときに顎の位置が微妙に変わってしまう場合があります(T-Poseの顎になるため)。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>前髪等、顔のパーツが微妙に動く。 &lt;code>fbx&lt;/code> の &lt;code>Rig&lt;/code> 設定で前髪等の意図しないボーンが &lt;code>jaw&lt;/code> (顎) ボーン に割り当てされていないかご確認ください。T-Pose化するときに顎の位置が微妙に変わってしまい、結果として前髪等が動いてしまう場合があります。&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: ヒューマノイド</title><link>https://vrm.dev/docs/univrm/humanoid/humanoid/</link><pubDate>Tue, 04 Aug 2020 12:24:49 +0900</pubDate><guid>https://vrm.dev/docs/univrm/humanoid/humanoid/</guid><description>
&lt;p>WIP&lt;/p>
&lt;ul>
&lt;li>主にモーションキャプチャーのFKのモーションを投入できることを基準に決めました&lt;/li>
&lt;/ul>
&lt;h2 id="関連イシュー">関連イシュー&lt;/h2>
&lt;p>&lt;a href="https://github.com/vrm-c/vrm-specification/issues/87">https://github.com/vrm-c/vrm-specification/issues/87&lt;/a>&lt;/p>
&lt;h2 id="用語">用語&lt;/h2>
&lt;ul>
&lt;li>ボーン: ヒューマノイドを構成するgltfノード&lt;/li>
&lt;li>ボーン名
&lt;ul>
&lt;li>hips&lt;/li>
&lt;li>spine&lt;/li>
&lt;li>chest(UnityHumanoidでは option。VRMでは必須?)&lt;/li>
&lt;li>upperChest(option)&lt;/li>
&lt;li>neck(UnityHumanoidでは option。VRMでは必須?)&lt;/li>
&lt;li>head&lt;/li>
&lt;li>Left/Right eye(option)&lt;/li>
&lt;li>left/Right shoulder(UnityHumanoidでは option。VRMでは必須?)&lt;/li>
&lt;li>Left/Right upperArm&lt;/li>
&lt;li>Left/Right lowerArm&lt;/li>
&lt;li>Left/Right hand&lt;/li>
&lt;li>Left/Right upperLeg&lt;/li>
&lt;li>Left/Right lowerLeg&lt;/li>
&lt;li>Left/Right foot&lt;/li>
&lt;li>Left/Right toe(UnityHumanoidでは option。VRMでは必須?)&lt;/li>
&lt;li>Left/Right thumb proximal, intermediate, distal(option)&lt;/li>
&lt;li>Left/Right index proximal, intermediate, distal(option)&lt;/li>
&lt;li>Left/Right middle proximal, intermediate, distal(option)&lt;/li>
&lt;li>Left/Right ring proximal, intermediate, distal(option)&lt;/li>
&lt;li>Left/Right little proximal, intermediate, distal(option)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="ヒューマノイドの要件仮">ヒューマノイドの要件(仮)&lt;/h2>
&lt;ul>
&lt;li>対象となるノードはスキニング(GLTFのskinおよびjoint、UnityのSkinnedMeshRendererなど)とは無関係に選択できる&lt;/li>
&lt;li>必須のボーンがすべて含まれている&lt;/li>
&lt;li>ボーンの親子関係がヒューマノイドの定義を守っている(LowerLegの最初に見つかる祖先ボーンがUpperLegであるなど)&lt;/li>
&lt;li>hipsをrootに以下の親子関係。カッコは必須でないボーン
&lt;ul>
&lt;li>
&lt;p>hips - spine - chest - (upper chest) - neck - head&lt;/p>
&lt;ul>
&lt;li>headからleft - (eye)&lt;/li>
&lt;li>headからright - (eye)&lt;/li>
&lt;li>chestまたはupper chestからleft - (shoulder) - upper arm - lower arm - hand - (fingers)&lt;/li>
&lt;li>chestまたはupper chestからright - (shoulder) - upper arm - lower arm - hand - (fingers)&lt;/li>
&lt;li>hipsからleft - upper leg - lower leg - foot - (toes)&lt;/li>
&lt;li>hipsからright - upper leg - lower leg - foot - (toes)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>間にヒューマノイドに関係ないノードが入ることは許す(LowerLegの親がemptyでその親がUpperLegであるなど)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>必須でないボーンは飛ばしてよい(UpperArmの親がshoulderじゃなくてchestなど)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>加えて&lt;/p>
&lt;ul>
&lt;li>T-Poseになっていること&lt;/li>
&lt;li>各ノードの回転・拡大は無いこと&lt;/li>
&lt;/ul>
&lt;p>あたりになるかと思います。&lt;/p></description></item><item><title>Docs: BlendShapeProxyの更新</title><link>https://vrm.dev/dev/univrm-1.xx/blendshapeproxy/</link><pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate><guid>https://vrm.dev/dev/univrm-1.xx/blendshapeproxy/</guid><description>
&lt;h2 id="推奨される-blendshape-周りの更新順番">推奨される BlendShape 周りの更新順番&lt;/h2>
&lt;p>&lt;a href="https://github.com/vrm-c/vrm-specification/blob/master/specification/VRMC_vrm-1.0_draft/README.md#update-order">https://github.com/vrm-c/vrm-specification/blob/master/specification/VRMC_vrm-1.0_draft/README.md#update-order&lt;/a>&lt;/p>
&lt;p>のように&lt;/p>
&lt;ul>
&lt;li>Humanoid&lt;/li>
&lt;li>LookAt&lt;/li>
&lt;li>BlendShape&lt;/li>
&lt;/ul>
&lt;p>の順が推奨となります。&lt;/p>
&lt;h2 id="lookat-との統合">LookAt との統合&lt;/h2>
&lt;p>LookAt と BlendShape の処理順の問題を軽減するため、 &lt;code>VRMLookAtHead&lt;/code>, &lt;code>VRMLookAtBoneApplyer&lt;/code>, &lt;code>VRMLookAtBlendShapeApplyer&lt;/code> を &lt;code>VRMBlendShapeProxy&lt;/code> に統合しました。&lt;/p>
&lt;h2 id="blendshapeclip-の排他機能">BlendShapeClip の排他機能&lt;/h2>
&lt;p>例えば &lt;code>fan&lt;/code> と &lt;code>blink&lt;/code> が同時に適用されたときに、目がおかしくなるモデルがあります。
このとき、 &lt;code>fan&lt;/code> に対して &lt;code>blink&lt;/code> を無視するフラグを付けられるようにしました。&lt;/p>
&lt;p>&lt;a href="https://github.com/vrm-c/vrm-specification/blob/master/specification/VRMC_vrm-1.0_draft/README.md#blendshape-specification">https://github.com/vrm-c/vrm-specification/blob/master/specification/VRMC_vrm-1.0_draft/README.md#blendshape-specification&lt;/a>&lt;/p>
&lt;ul>
&lt;li>ignoreBlink&lt;/li>
&lt;li>ignoreLookAt&lt;/li>
&lt;li>ignoreMouth&lt;/li>
&lt;/ul>
&lt;p>の３種類があります。&lt;/p>
&lt;h2 id="setvalue-と-apply">SetValue と Apply&lt;/h2>
&lt;p>&lt;code>UniVRM-0.X&lt;/code> には &lt;code>BlendShapeProxyy.SetValueImmediate&lt;/code> と &lt;code>BlendSahpeProxy.SetValue + Apply&lt;/code> という２系統があったのですが、 &lt;code>BlendShapeProxyy.SetValueImmediate&lt;/code> は廃止になりました。&lt;/p>
&lt;p>&lt;code>ignoreBlink&lt;/code> 等を動作させるにはすべての値を蓄積してからまとめて処理する必要があるためです。(最初は、外部にアプリケーション側が貯めて適用する設計だった)&lt;/p>
&lt;h2 id="apply-の呼び出しタイミング">Apply の呼び出しタイミング&lt;/h2>
&lt;h3 id="none">None&lt;/h3>
&lt;p>ユーザーアプリケーション側で明示的に &lt;code>Apply&lt;/code> を呼び出してください。&lt;/p>
&lt;h3 id="update">Update&lt;/h3>
&lt;p>VRMBlendShapeProxy.Update で &lt;code>Apply&lt;/code> が呼ばれます。
VRMBlendShapeProxy.Apply は、後ろの方で処理したいので注意が必要。&lt;/p>
&lt;h3 id="lateupdate">LateUpdate&lt;/h3>
&lt;p>VRMBlendShapeProxy.LateUpdate で &lt;code>Apply&lt;/code> が呼ばれます。
細かい制御が必要ないときに。&lt;/p></description></item><item><title>Docs: UnityPackageManagerを使う</title><link>https://vrm.dev/dev/univrm-1.xx/package/</link><pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate><guid>https://vrm.dev/dev/univrm-1.xx/package/</guid><description>
&lt;h2 id="univrm-10-の-unitypackage">UniVRM-1.0 の UnityPackage&lt;/h2>
&lt;p>試験的に、パッケージを導入しています。&lt;/p>
&lt;p>github リポジトリのルート以外に &lt;code>package.json&lt;/code> を配置する機能を使っているので、
&lt;code>Unity 2019.3.4f1以降&lt;/code> が必要です。&lt;/p>
&lt;h3 id="導入方法">導入方法&lt;/h3>
&lt;p>UnityPackageManagerのWindow&lt;/p>
&lt;img src="https://vrm.dev/images/vrm10/menu_packagemanager.jpg" />
&lt;p>&lt;code>add package from git URL&lt;/code>&lt;/p>
&lt;img src="https://vrm.dev/images/vrm10/from_git.jpg" />
&lt;p>パッケージ同士の依存関係を自動でダウンロードしてくれる機能は無いので、以下の git url を順に追加してください。&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders&lt;/code>&lt;/li>
&lt;li>&lt;code>https://github.com/vrm-c/UniVRM_1_0.git?path=/Assets/Vrm10&lt;/code> =&amp;gt; VRMShadersに依存&lt;/li>
&lt;/ul>
&lt;h4 id="もしくは-packagesmanifestjson-に直接コピーペーストする">もしくは、 Packages/manifest.json に直接コピーペーストする。&lt;/h4>
&lt;p>以下の内容を追記してください。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;dependencies&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#a40000">//&lt;/span> &lt;span style="color:#a40000">省略&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;com.vrmc.univrm&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://github.com/vrm-c/UniVRM_1_0.git?path=/Assets/Vrm10&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#a40000">//&lt;/span> &lt;span style="color:#a40000">省略&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://github.com/vrm-c/UniVRMUtility/blob/master/Packages/manifest.json">https://github.com/vrm-c/UniVRMUtility/blob/master/Packages/manifest.json&lt;/a> は、 &lt;code>UniVRM-1.0&lt;/code> の &lt;code>UnityPackage&lt;/code> を使う例です。&lt;/p>
&lt;p>以下の &amp;ldquo;lock&amp;rdquo; はUnityが自動で更新するので、編集する必要はありません。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json"> &lt;span style="color:#4e9a06">&amp;#34;lock&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;com.vrmc.univrm&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;revision&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;HEAD&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;hash&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;198c2c605ded711b21781421e71ba9bdbe0f8728&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;revision&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;HEAD&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;hash&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;155acf354735288db0335878179f483901541851&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: BlendShapeProxyの使い方</title><link>https://vrm.dev/dev/univrm-0.xx/programming/how_to_use_blendshapeproxy/</link><pubDate>Thu, 23 Apr 2020 17:09:54 +0900</pubDate><guid>https://vrm.dev/dev/univrm-0.xx/programming/how_to_use_blendshapeproxy/</guid><description>
&lt;p>WIP&lt;/p>
&lt;h2 id="何故複数のsetterがあるのか">何故、複数のSetterがあるのか&lt;/h2>
&lt;ul>
&lt;li>LipSync&lt;/li>
&lt;li>瞬き&lt;/li>
&lt;li>視線制御(BlendShapeで視線を動かすタイプのモデル)&lt;/li>
&lt;li>プログラムによる喜怒哀楽&lt;/li>
&lt;/ul>
&lt;p>上記のような複数のBlendShapeが別々のコンポーネントから設定された場合に、
BlendShape同士が競合することがわかりました。
後で設定した値で上書きされて希望のBlendShapeが適用されないという状態になります。
これを解決するために、一か所で中央集権的に制御する必要があります。&lt;/p>
&lt;p>合成したり排他制御した、BlendShapeClipの集合のスナップショットをまとめて適用することを想定して &lt;code>SetValues&lt;/code>&lt;/p>
&lt;h2 id="immediatelysetvalue">ImmediatelySetValue&lt;/h2>
&lt;p>簡単なテストプログラムでの利用を想定しています。&lt;/p>
&lt;h2 id="accumeratevalue--apply">AccumerateValue + Apply&lt;/h2>
&lt;p>下記のSetValuesを推奨しています。&lt;/p>
&lt;h2 id="setvalues">SetValues&lt;/h2>
&lt;p>BlendShape合成器が必要に応じ呼び出すことを想定しています。&lt;/p></description></item><item><title>Docs: ランタイムインポーター</title><link>https://vrm.dev/dev/univrm-0.xx/programming/runtime_import/</link><pubDate>Thu, 23 Apr 2020 17:09:54 +0900</pubDate><guid>https://vrm.dev/dev/univrm-0.xx/programming/runtime_import/</guid><description>
&lt;p>この記事は &lt;code>Version 0.44以降&lt;/code> のAPIについてです。&lt;/p>
&lt;h2 id="loadasyncの例">LoadAsyncの例&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">bytes&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">File&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ReadAllBytes&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// なんらかの方法でByte列を得る
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">context&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">VRMImporterContext&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ParseGlb&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// metaが必要な場合
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">bool&lt;/span> &lt;span style="color:#000">createThumbnail&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">meta&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ReadMeta&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">createThumbnail&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">thumbnail&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">meta&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Thumbnail&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// modelを構築
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LoadAsync&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">_&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ShowMeshes&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">go&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Root&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// load完了
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000">Debug&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LogError&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="loadasynctaskを使う例">LoadAsyncTaskを使う例&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#8f5902;font-style:italic">#if (NET_4_6 &amp;amp;&amp;amp; UNITY_2017_1_OR_NEWER)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">async&lt;/span> &lt;span style="color:#204a87;font-weight:bold">static&lt;/span> &lt;span style="color:#000">Task&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">GameObject&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000">LoadAsync&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Byte&lt;/span>&lt;span style="color:#000;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">context&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">VRMImporterContext&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// GLB形式でJSONを取得しParseします
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ParseGlb&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">try&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ParseしたJSONをシーンオブジェクトに変換していく
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">await&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LoadAsyncTask&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// バウンディングボックスとカメラの位置関係で見切れるのを防止する
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// SkinnedMeshRenderer.updateWhenOffscreen = true
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">EnableUpdateWhenOffscreen&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// T-Poseのモデルを表示したくない場合、ShowMeshesする前に準備する
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// ロード後に表示する
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ShowMeshes&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Root&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">catch&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Debug&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LogError&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 関連するリソースを破棄する
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Destroy&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">throw&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#endif
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="関連する記事など">関連する記事など&lt;/h2>
&lt;p>こちらの記事がわかりやすいです。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/sh_akira/items/8155e4b69107c2a7ede6">UniVRMを使ってVRMモデルをランタイムロードする方法&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: API</title><link>https://vrm.dev/dev/univrm-1.xx/api/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/dev/univrm-1.xx/api/</guid><description>
&lt;p>&lt;a href="https://github.com/vrm-c/UniVRM_1_0/blob/master/Assets/UniVRM-1.0/PlayModeTests/ApiSampleTests.cs">https://github.com/vrm-c/UniVRM_1_0/blob/master/Assets/UniVRM-1.0/PlayModeTests/ApiSampleTests.cs&lt;/a>&lt;/p>
&lt;p>にあります。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">System.IO&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">UnityEngine&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="vrm-to-model">VRM to Model&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs"> &lt;span style="color:#000">VrmLib&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Model&lt;/span> &lt;span style="color:#000">ReadModel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">bytes&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">File&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ReadAllBytes&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">(!&lt;/span>&lt;span style="color:#000">VrmLib&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Glb&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TryParse&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">out&lt;/span> &lt;span style="color:#000">VrmLib&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Glb&lt;/span> &lt;span style="color:#000">glb&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">out&lt;/span> &lt;span style="color:#000">Exception&lt;/span> &lt;span style="color:#000">ex&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Debug&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LogError&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">$&amp;#34;fail to Glb.TryParse: {path} =&amp;gt; {ex}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// both VRM-0.X and VRM-1.0
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">model&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">UniVRM10&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">VrmLoader&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">CreateVrmModel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="this-is-possible-on-a-thread">This is possible on a thread&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">Task&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Run&lt;/span>&lt;span style="color:#000;font-weight:bold">(()=&amp;gt;{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">ReadModel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000;font-weight:bold">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="model-to-gameobject">Model to GameObject&lt;/h2>
&lt;p>This requires a ScriptThread.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs"> &lt;span style="color:#000">ModelAsset&lt;/span> &lt;span style="color:#000">BuildGameObject&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">VrmLib&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Model&lt;/span> &lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">bool&lt;/span> &lt;span style="color:#000">showMesh&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">importer&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">UniVRM10&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">RuntimeUnityBuilder&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">assets&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">importer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ToUnityAsset&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">showMesh&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">UniVRM10&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ComponentBuilder&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Build10&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">importer&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">assets&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">assets&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ロード後にレンダラーを設定する">ロード後にレンダラーを設定する&lt;/h3>
&lt;p>ModelAsset に各種アセットが格納されています。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs"> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">asset&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">BuildGameObject&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">srcModel&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// renderer setting
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">foreach&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">render&lt;/span> &lt;span style="color:#204a87;font-weight:bold">in&lt;/span> &lt;span style="color:#000">asset&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Renderers&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// show when RuntimeUnityBuilder.ToUnity(showMesh = false)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">render&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">enabled&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// avoid culling
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">render&lt;/span> &lt;span style="color:#204a87;font-weight:bold">is&lt;/span> &lt;span style="color:#000">SkinnedMeshRenderer&lt;/span> &lt;span style="color:#000">skinned&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">skinned&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">updateWhenOffscreen&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="フレームレートが落ちないようにするtodo">フレームレートが落ちないようにする(TODO)&lt;/h3>
&lt;p>１フレームの処理を小さく小出しにして、スパイクを少なくする場合。&lt;/p>
&lt;h2 id="gameobject-to-model">GameObject to Model&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs"> &lt;span style="color:#000">VrmLib&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Model&lt;/span> &lt;span style="color:#000">ToModel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">UnityEngine&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">GameObject&lt;/span> &lt;span style="color:#000">target&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">exporter&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">UniVRM10&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">RuntimeVrmConverter&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">model&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">exporter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ToModelFrom10&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">target&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="model-to-vrm">Model to VRM&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs"> &lt;span style="color:#204a87;font-weight:bold">byte&lt;/span>&lt;span style="color:#000;font-weight:bold">[]&lt;/span> &lt;span style="color:#000">ToVrm10&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">VrmLib&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Model&lt;/span> &lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 右手系に変換
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">VrmLib&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ModelExtensionsForCoordinates&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ConvertCoordinate&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">VrmLib&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Coordinates&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Gltf&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">bytes&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">Vrm10&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ModelExtensions&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ToGlb&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: APIの変更点</title><link>https://vrm.dev/dev/univrm-1.xx/api_update_from_univrm-0.xx/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/dev/univrm-1.xx/api_update_from_univrm-0.xx/</guid><description>
&lt;h2 id="import">Import&lt;/h2>
&lt;ul>
&lt;li>VRMをインポートするために（&lt;code>UniGLTF.ImporterContext.Load&lt;/code>）使用されるクラス&lt;code>VRM.VRMImporterContext&lt;/code>は削除されました。UniVRMインポーターはVRMデータ（&lt;code>UniVRM10.VrmLoader.CreateVrmModel&lt;/code>）を&lt;code>VrmLib.Model&lt;/code>に保存してからUnityに構築します&lt;/li>
&lt;li>&lt;code>UniVRM10.UnityBuilder.ToUnityAsset&lt;/code>は&lt;code>VrmLib.Model&lt;/code>からUnity Assetにデータを転送します。0.XXの &lt;code>UniGLTF.ImporterContext.ShowMeshes&lt;/code>が&lt;code>ToUnityAsset&lt;/code>のboolパラメータに変更されました&lt;/li>
&lt;li>&lt;code>UniVRM10.ComponentBuilder.Build10&lt;/code>はVRM GameObjectに対してMeta, BlendShape, LookAtなどのコンポーネントをセットアップします&lt;/li>
&lt;/ul>
&lt;h3 id="example">Example&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs"> &lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">System.IO&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">UnityEngine&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">MyClass&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">MonoBehaviour&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * VRMインポート
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> *
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * @return vrmオブジェクト
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#000">GameObject&lt;/span> &lt;span style="color:#000">Import&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ファイルパス
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">path&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;../YourModel.vrm&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">model&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">UniVRM10&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">VrmLoader&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">CreateVrmModel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// UniVRM-0.XXのコンポーネントを構築する
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">assets&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">UniVRM10&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">RuntimeUnityBuilder&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ToUnityAsset&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">showMesh&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// showRenderer = false のときに後で表示する例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">foreach&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">renderer&lt;/span> &lt;span style="color:#204a87;font-weight:bold">in&lt;/span> &lt;span style="color:#000">assets&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Renderers&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">renderer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">enabled&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// カリングを避ける
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">renderer&lt;/span> &lt;span style="color:#204a87;font-weight:bold">is&lt;/span> &lt;span style="color:#000">SkinnedMeshRenderer&lt;/span> &lt;span style="color:#000">skinned&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">skinned&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">updateWhenOffscreen&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">UniVRM10&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ComponentBuilder&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Build10&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">assets&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">vrmObject&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">assets&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Root&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> 　　　　　　
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">vrmObject&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="export">Export&lt;/h2>
&lt;ul>
&lt;li>VRMをエクスポートするために（&lt;code>UniGLTF.gltfExporter.Export&lt;/code>）使用されるクラス&lt;code>VRM.VRMExporter&lt;/code>は削除されました。UniVRMエクスポーターはVRMデータ（&lt;code>RuntimeVrmConverter.ToModelFrom10&lt;/code>）をVRM GameObjectから&lt;code>VrmLib.Model&lt;/code>に転送してVRMファイルに保存します&lt;/li>
&lt;li>&lt;code>Vrm10.ModelExtensions.ToGlb&lt;/code>はデータを&lt;code>VrmLib.Model&lt;/code>からglbに転送します。&lt;code>.glb&lt;/code>ファイルは&lt;code>.vrm&lt;/code>と交換可能です。UnityとGLTF間の座標変換は &lt;code>VrmLib.ModelExtensionsForCoordinates.ConvertCoordinate&lt;/code>です&lt;/li>
&lt;/ul>
&lt;h3 id="example-1">Example&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs"> &lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">System.IO&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">UnityEngine&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">MyClass&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">MonoBehaviour&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">/**
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> * VRMエクスポート
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> */&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">Export&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ファイルパス
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">importPath&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;../YourModel.vrm&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">importedModel&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">UniVRM10&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">VrmLoader&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">CreateVrmModel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">importPath&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">assets&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">UniVRM10&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">RuntimeUnityBuilder&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ToUnityAsset&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">importedModel&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000">UniVRM10&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ComponentBuilder&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Build10&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">importedModel&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">assets&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>　
&lt;span style="color:#8f5902;font-style:italic">// 1.0でエクスポート
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">exporter&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">UniVRM10&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">RuntimeVrmConverter&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">model&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">exporter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ToModelFrom10&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">assets&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Root&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 右手系に変換
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">VrmLib&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ModelExtensionsForCoordinates&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ConvertCoordinate&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">VrmLib&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Coordinates&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Gltf&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">exportedBytes&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">Vrm10&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ModelExtensions&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ToGlb&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 1.0モデルを書き出す
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">path&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;vrm10.vrm&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000">File&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WriteAllBytes&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">exportedBytes&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="lookat">LookAt&lt;/h2>
&lt;ul>
&lt;li>LookAt関連クラス&lt;code>VRM.VRMLookAtBoneApplyer&lt;/code>、&lt;code>VRM.VRMLookAtBlendShapeApplyer&lt;/code>、&lt;code>VRM.VRMLookAtHead&lt;/code>が&lt;code>UniVRM10.VRMController&lt;/code>に統合されました&lt;/li>
&lt;li>&lt;code>VRM.LookAtType&lt;/code>は&lt;code>UniVRM10.VRMController.LookAtTypes&lt;/code>に変更されました&lt;/li>
&lt;li>&lt;code>VRMLookAtHead.Target&lt;/code>は&lt;code>VRMController.Gaze&lt;/code>に置き換えられました&lt;/li>
&lt;li>&lt;code>UniVRM10.VRMController.LookAtTargetTypes&lt;/code>を追加しました。自動で頭に対するyaw・pitch角度を取得するか、yaw・pitch角度をセットするの選択肢があります&lt;/li>
&lt;/ul>
&lt;h3 id="example-2">Example&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs"> &lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">System&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">System.IO&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">UnityEngine&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">using&lt;/span> &lt;span style="color:#000">UniVRM10&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">class&lt;/span> &lt;span style="color:#000">MyClass&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">MonoBehaviour&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#c4a000"> [SerializeField]&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">GameObject&lt;/span> &lt;span style="color:#000">_vrmModel&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#c4a000">
&lt;/span>&lt;span style="color:#c4a000"> [SerializeField]&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">private&lt;/span> &lt;span style="color:#000">GameObject&lt;/span> &lt;span style="color:#000">_targetObject&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">SpecifyLookAtTarget&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">proxy&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">_vrmModel&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">GetComponent&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">VRMController&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;();&lt;/span>
&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LookAtTargetType&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">VRMController&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LookAtTargetTypes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">CalcYawPitchToGaze&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// LookAtターゲットを指定する
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">_vrmModel&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">GetComponent&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">VRMController&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;().&lt;/span>&lt;span style="color:#000">Gaze&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">_targetObject&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">transform&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 頭に対するyaw・pitch角度を取得する
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">yaw&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">pitch&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">GetLookAtYawPitch&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">public&lt;/span> &lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">SpecifyYawPitchAngle&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">proxy&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">_vrmModel&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">GetComponent&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">VRMController&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;();&lt;/span>
&lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LookAtTargetType&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">VRMController&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LookAtTargetTypes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">SetYawPitch&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// yaw・pitch角度をセットする
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">proxy&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">SetLookAtYawPitch&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ...
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Assetの扱いを変更しました</title><link>https://vrm.dev/dev/univrm-1.xx/unity_assets/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/dev/univrm-1.xx/unity_assets/</guid><description>
&lt;p>&lt;a href="https://docs.unity3d.com/ScriptReference/Experimental.AssetImporters.ScriptedImporter.html">ScriptedImporter&lt;/a> を使っていて、以前の&lt;a href="https://docs.unity3d.com/ScriptReference/AssetPostprocessor.html">AssetPostprocessor&lt;/a>と挙動が異なります。&lt;/p>
&lt;h2 id="0xx">0.xx&lt;/h2>
&lt;p>&lt;code>model.vrm&lt;/code> を Assets フォルダに投入 =&amp;gt; AssetPostprocessor が拡張子 &lt;code>.vrm&lt;/code> のファイルに対して発動&lt;/p>
&lt;ul>
&lt;li>vrmからTextureを取り出し&lt;/li>
&lt;li>vrmからMaterialを取り出し&lt;/li>
&lt;li>vrmからMeshを取り出し&lt;/li>
&lt;li>vrmからBlendShpaeを取り出し&lt;/li>
&lt;li>取り出したAssetからPrefabを組み立て&lt;/li>
&lt;/ul>
&lt;p>たくさんのアセットが生成される。
ファイルシステム上は、&lt;/p>
&lt;ul>
&lt;li>model.vrm&lt;/li>
&lt;li>model.vrm.meta&lt;/li>
&lt;li>model.prefab&lt;/li>
&lt;li>model.prefab.meta&lt;/li>
&lt;li>model.Materials.meta&lt;/li>
&lt;li>model.Materials/*.assets&lt;/li>
&lt;li>model.Materials/*.meta&lt;/li>
&lt;li>&amp;hellip;etc&lt;/li>
&lt;/ul>
&lt;h2 id="10">1.0&lt;/h2>
&lt;p>&lt;code>model.vrm&lt;/code> を Assets フォルダに投入 =&amp;gt; ScriptedImporter が拡張子 &lt;code>.vrm&lt;/code> のファイルに対して発動&lt;/p>
&lt;ul>
&lt;li>ScriptedImporterのアセットができる。&lt;/li>
&lt;li>vrmからTextureを取り出して、ScriptedImporterのアセットのサブアセット(readonly)とする&lt;/li>
&lt;li>vrmからMaterialを取り出して、ScriptedImporterのアセットのサブアセット(readonly)とする&lt;/li>
&lt;li>vrmからMeshを取り出して、ScriptedImporterのアセットのサブアセット(readonly)とする&lt;/li>
&lt;li>vrmからBlendShpaeを取り出して、ScriptedImporterのアセットのサブアセット(readonly)とする&lt;/li>
&lt;li>取り出したAssetからPrefabを組み立てて、ScriptedImporterのアセットのサブアセット(readonly)とする&lt;/li>
&lt;/ul>
&lt;p>見た目上アセットは一つしかできない。
ファイルシステム上は、&lt;/p>
&lt;ul>
&lt;li>model.vrm&lt;/li>
&lt;li>model.vrm.meta&lt;/li>
&lt;/ul>
&lt;p>の２つ。&lt;/p>
&lt;h2 id="extract">Extract&lt;/h2>
&lt;p>ScriptedImporterのアセットのままではreadonlyで変更ができません。
変更可能にするにはExtractが必用です(fbxインポーターのExtractと同じものです)。
変更せずに使う場合は、Extractは不要です。&lt;/p></description></item><item><title>Docs: UniVRM-0.XX と共存する</title><link>https://vrm.dev/dev/univrm-1.xx/use_with_univrm-0.xx/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/dev/univrm-1.xx/use_with_univrm-0.xx/</guid><description>
&lt;p>UniVRM-1.0 と UniVRM-0.XX の両方のインポーターが動作します。&lt;/p>
&lt;p>C# のシンボル &lt;code>VRM_STOP_ASSETPOSTPROCESSOR&lt;/code> を #define することで uniVRM-0.XX のインポーターを停止できます。&lt;/p>
&lt;ul>
&lt;li>Edit - preference - UniVRM&lt;/li>
&lt;/ul>
&lt;p>もしくは、&lt;/p>
&lt;ul>
&lt;li>Eidt - project settings - other settings - Scripting Define Symbols&lt;/li>
&lt;/ul>
&lt;p>から設定できます。&lt;/p></description></item><item><title>Docs: UniVRM使用例</title><link>https://vrm.dev/dev/univrm-1.xx/use_vrm/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/dev/univrm-1.xx/use_vrm/</guid><description>
&lt;h2 id="editorimport">EditorImport&lt;/h2>
&lt;ul>
&lt;li>読み込んでprefabを生成する&lt;/li>
&lt;/ul>
&lt;h2 id="editorexport">EditorExport&lt;/h2>
&lt;ul>
&lt;li>シーンをEditorで作り上げてからエクスポートする&lt;/li>
&lt;/ul>
&lt;h2 id="runtimeimport">RunTimeImport&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/vrm-c/UniVRMUtility">https://github.com/vrm-c/UniVRMUtility&lt;/a> SimpleViewer, VRMViewer&lt;/li>
&lt;/ul>
&lt;h2 id="runtimeexport">RuntimeExport&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/vrm-c/UniVRMUtility">https://github.com/vrm-c/UniVRMUtility&lt;/a> PrimMan。ランタイムに箱人間をプログラム的に生成してVRMとしてエクスポートする&lt;/li>
&lt;/ul></description></item><item><title>Docs: エクスポート手順</title><link>https://vrm.dev/dev/univrm-1.xx/how_to_export/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/dev/univrm-1.xx/how_to_export/</guid><description>
&lt;p>旧 UniVRM-0.XX から少しエクスポート手順が変わります。&lt;/p>
&lt;ol>
&lt;li>シーンの原点にZ+向きにしてモデルを配置する。必要であれば手動で &lt;code>T-Pose&lt;/code> にしてください。強制 &lt;code>T-Pose&lt;/code> 機能は無くなりました。&lt;/li>
&lt;li>Hierarchy でモデルを右クリック。[UniVRM-1.0.0] - [Export] エクスポートウィンドウを表示&lt;/li>
&lt;li>エクスポートウィンドウのExportボタンを押す&lt;/li>
&lt;li>出力先をダイアログで選択する&lt;/li>
&lt;/ol>
&lt;p>以上です。&lt;/p>
&lt;p>エクスポートウインドウで選択モデルがエクスポート可能か判定があります。エクスポートできる条件は以下の通りです。&lt;/p>
&lt;ul>
&lt;li>ルートにAnimatorコンポーネントが追加してあり、Humanoidアバターがセットしてある&lt;/li>
&lt;li>Metaの必須項目が入力済みである
&lt;ul>
&lt;li>Title&lt;/li>
&lt;li>Version&lt;/li>
&lt;li>Authors&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: 過去バージョンのロードについて</title><link>https://vrm.dev/dev/univrm-1.xx/load_vrm-0.x_model/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/dev/univrm-1.xx/load_vrm-0.x_model/</guid><description>
&lt;h2 id="metaの変換について">Metaの変換について&lt;/h2>
&lt;p>VRM-0.Xのモデルは、ロード時に1.0に変換されます。&lt;/p>
&lt;p>TODO:&lt;/p>
&lt;ul>
&lt;li>同じ項目はそのまま&lt;/li>
&lt;li>新規項目は、不許可側に&lt;/li>
&lt;li>内容の変わった項目は、不許可側に&lt;/li>
&lt;li>再配布関連は、 &lt;code>OtherURL&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Docs: VRMのT-Poseについて</title><link>https://vrm.dev/docs/univrm/humanoid/vrm_tpose/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/docs/univrm/humanoid/vrm_tpose/</guid><description>
&lt;p>VRMの第１実装のUnityのHumanoidに準拠したT-Pose&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>を採用しています。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;img src="https://vrm.dev/images/vrm/T_pose.png" alt="T_pose" />
&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>T-Poseの例&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>胴体と頭・足については自明ですが、腕と手の指についても規約があります。&lt;/p>
&lt;ul>
&lt;li>手の平は下向き&lt;/li>
&lt;li>親指は水平でXZ平面(上から見て)45度&lt;/li>
&lt;/ul>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://blogs.unity3d.com/jp/2014/05/26/mecanim-humanoids/">Mecanim Humanoids&lt;/a> &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item></channel></rss>