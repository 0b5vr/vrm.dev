# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, VRMコンソーシアム
# This file is distributed under the same license as the VRM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: VRM \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 21:20+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../univrm/humanoid/meshutility_humanoid.md:6
msgid "HumanoidComponent"
msgstr ""

#: ../../univrm/humanoid/meshutility_humanoid.md:8
msgid "`UniVRM-0.60.0`"
msgstr ""

#: ../../univrm/humanoid/meshutility_humanoid.md:10
msgid "fbx が無くても、シーンから直接 humanoid avatar を作成できます。"
msgstr "A humanoid avatar can be created directly from the Scene without fbx."

#: ../../univrm/humanoid/meshutility_humanoid.md:12
msgid "使い方"
msgstr "How to use"

#: ../../univrm/humanoid/meshutility_humanoid.md:14
msgid "ヒューマノイドボーンがあるシーンを用意します。"
msgstr "Prepare a rigged model in the scene."

#: ../../univrm/humanoid/meshutility_humanoid.md:16
msgid "例として"
msgstr "We will take the model in the following link as an example:"

#: ../../univrm/humanoid/meshutility_humanoid.md:18
msgid ""
"https://github.com/KhronosGroup/glTF-Sample-"
"Models/tree/master/2.0/RiggedFigure/glTF-Binary"
msgstr ""

#: ../../univrm/humanoid/meshutility_humanoid.md:20
msgid "で説明します。"
msgstr "First, import `RiggedFigure.glb` into the `Assets` folder."

#: ../../univrm/humanoid/meshutility_humanoid.md:22
msgid ""
"まず、 `RiggedFigure.glb` を Asset フォルダに import してください。 UniVRM の `glb` import"
" で prefab が生成されます。"
msgstr ""
"If UniVRM package is installed, the `Prefab` file can be automatically "
"generated from the imported `glb`."

#: ../../univrm/humanoid/meshutility_humanoid.md:25
msgid "新規のシーンに `RiggedFigure` prefab をインスタンス化します。"
msgstr ""
"Drag the `Prefab` file to the `Hierarchy` window. A GameObject associated"
" with this `Prefab` is instantiated."

#: ../../univrm/humanoid/meshutility_humanoid.md:27
msgid "AddComponent で `Humanoid` を追加してください。(MeshUtility.Humanoid。UniVRMに含まれています。)"
msgstr ""
"Click on the GameObject in the `Hierarchy` window, then add a humanoid "
"component (`Inspector -> Add Component -> Humanoid`)."

#: ../../univrm/humanoid/meshutility_humanoid.md:29
msgid "![img](/_static/images/vrm/bone_required.jpg)"
msgstr ""

#: ../../univrm/humanoid/meshutility_humanoid.md:29
#: ../../univrm/humanoid/meshutility_humanoid.md:33
#: ../../univrm/humanoid/meshutility_humanoid.md:37
msgid "img"
msgstr ""

#: ../../univrm/humanoid/meshutility_humanoid.md:31
msgid "適当に Bone を当てはめます。"
msgstr "As shown in the image above, assign required bones."

#: ../../univrm/humanoid/meshutility_humanoid.md:33
msgid "![img](/_static/images/vrm/create_avatar.jpg)"
msgstr ""

#: ../../univrm/humanoid/meshutility_humanoid.md:35
msgid "`Create UnityEngine.Avatar` ボタンを押します。"
msgstr "Press `Create UnityEngine.Avatar` button."

#: ../../univrm/humanoid/meshutility_humanoid.md:37
msgid "![img](/_static/images/vrm/humanoid_animator.jpg)"
msgstr ""

#: ../../univrm/humanoid/meshutility_humanoid.md:39
msgid "humanoid avatar が新規に作成されます。"
msgstr "Now a humanoid avatar is created. "

#: ../../univrm/humanoid/meshutility_humanoid.md:41
msgid "このまま、T-Pose にして VRM 化することもできます。"
msgstr "You can make a T-pose for the model and convert it to VRM."

#~ msgid "{}"
#~ msgstr ""

