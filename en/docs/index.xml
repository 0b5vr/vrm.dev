<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>VRM – Documentation</title><link>https://vrm.dev/en/docs/</link><description>Recent content in Documentation on VRM</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 04 Aug 2019 17:59:33 +0900</lastBuildDate><atom:link href="https://vrm.dev/en/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Outline</title><link>https://vrm.dev/en/dev/univrm-1.xx/outline/</link><pubDate>Tue, 21 Apr 2020 19:56:48 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-1.xx/outline/</guid><description>
&lt;h1 id=&#34;univrm-1-0-draft&#34;&gt;UniVRM-1.0 draft&lt;/h1&gt;
&lt;p&gt;Unity implementation of VRM-1.0 draft.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Please do not use VRM-1.0 draft in your products until the official version is released. The current specifications may be modified/changed later on&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SupportUnityVersion: &lt;code&gt;Unity2019.3&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Recommended ColorSpaceSetting: &lt;code&gt;Linear&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;library-dependencies&#34;&gt;Library Dependencies&lt;/h2&gt;
&lt;p&gt;VrmLib&amp;rsquo;s byte array operation depends on &lt;code&gt;System.Memory&lt;/code&gt; and&lt;code&gt;System.Span&lt;/code&gt; (included in standard library starting from &lt;code&gt;.NET Standard-2.1&lt;/code&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/Assets/dotnet.system.memory/Runtime
&lt;ul&gt;
&lt;li&gt;System.Memory.dll&lt;/li&gt;
&lt;li&gt;System.Buffers.dll&lt;/li&gt;
&lt;li&gt;System.Runtime.CompilerServices.Unsafe.dll&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nuget.org/packages/System.Memory/&#34; target=&#34;_blank&#34;&gt;https://www.nuget.org/packages/System.Memory/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/corefx/blob/master/LICENSE.TXT&#34; target=&#34;_blank&#34;&gt;https://github.com/dotnet/corefx/blob/master/LICENSE.TXT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ProtobufSerializer&amp;rsquo;s JSON reading/writing. Depends on the JSONSerializer&amp;rsquo;s &lt;code&gt;Google.Protobuf&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/Assets/ProtobufSerializer/Google.Protobuf&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/protocolbuffers/protobuf/tree/master/csharp/src/Google.Protobuf&#34; target=&#34;_blank&#34;&gt;https://github.com/protocolbuffers/protobuf/tree/master/csharp/src/Google.Protobuf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/protocolbuffers/protobuf/blob/master/LICENSE&#34; target=&#34;_blank&#34;&gt;https://github.com/protocolbuffers/protobuf/blob/master/LICENSE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;+-------------------+
| GameObject |
| Assets |Left handed, Y-UP system
+-------------------+
^ |
|[UnityBuilder] |[VrmConverter]
| |
Unity-2019.3 |
===============================================
.NET Standard-2.0 + System.Memory
| |
| Right handed, |
| Y-UP system v
+-------------------+
|VrmLib.Model |
+-------------------+
^ |
| VrmLib |
|[import] v[export]
+-------------------+
|VrmProtobuf |
+-------------------+
^ |
| Protobuf v
+-------------------+
|GLB(GLTF+BIN) |VRM-1.0
+-------------------+
&lt;/code&gt;&lt;/pre&gt;</description></item><item><title>Docs: UniVRM-0.44 Material</title><link>https://vrm.dev/en/univrm/shaders/univrm_shaders_044/</link><pubDate>Fri, 05 Oct 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/univrm/shaders/univrm_shaders_044/</guid><description>
&lt;p&gt;Material-related fixes and additions in UniVRM-0.44.&lt;/p&gt;
&lt;h2 id=&#34;introduction-of-unigltf-uniunlit-shader&#34;&gt;Introduction of UniGLTF / UniUnlit shader&lt;/h2&gt;
&lt;p&gt;UniVRM-0.43 was capable of importing / exporting the following Unlit shaders:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unlit/Color&lt;/li&gt;
&lt;li&gt;Unlit/Texture, VRM/UnlitTexture&lt;/li&gt;
&lt;li&gt;Unlit/Transparent, VRM/UnlitTransparent&lt;/li&gt;
&lt;li&gt;Unlit/Transparent Coutout, VRM/UnlitCutout&lt;/li&gt;
&lt;li&gt;VRM/UnlitTransparentZWrite(not compatible with GLTF)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following materials that are set with GLTF were not functional:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;doubleSided&lt;/li&gt;
&lt;li&gt;the multiplication of color and texture&lt;/li&gt;
&lt;li&gt;transparent with color&lt;/li&gt;
&lt;li&gt;vertex color&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hence, we introduced the GLTF-compatible Unlit shader &lt;code&gt;UniGLTF / UnLit&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RenderType: &lt;code&gt;Opaque&lt;/code&gt;, &lt;code&gt;Cutout&lt;/code&gt;, &lt;code&gt;Transparent&lt;/code&gt;, &lt;code&gt;TransparentZWrite&lt;/code&gt;(VRM extension)&lt;/li&gt;
&lt;li&gt;CullMode: &lt;code&gt;Off&lt;/code&gt;(doubleSided=True), &lt;code&gt;Back&lt;/code&gt;(doublueSided=False), &lt;code&gt;Front&lt;/code&gt;(VRM extension)&lt;/li&gt;
&lt;li&gt;VertexColorBlend: &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;Multiply&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;improvement-of-texture-conversion-of-standard-shaders&#34;&gt;Improvement of texture conversion of Standard shaders&lt;/h2&gt;
&lt;p&gt;The processing of textures other than Standard shader color has been improved.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Normal map correction: Since it is also applied to MToon, we put the details in the next section&lt;/li&gt;
&lt;li&gt;Metallic, Roughnes, OcclusionMap conversion
&lt;ul&gt;
&lt;li&gt;RGBA channel recombination&lt;/li&gt;
&lt;li&gt;Inversion of Roughness and Smoothness values&lt;/li&gt;
&lt;li&gt;sRGB&amp;rsquo;s and Linear&amp;rsquo;s correspondence&lt;/li&gt;
&lt;li&gt;Conversion with Importer, reverse conversion with Exporter&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;correction-of-normal-map-import-export&#34;&gt;Correction of normal map import / export&lt;/h2&gt;
&lt;p&gt;The texture of &lt;code&gt;Standard&lt;/code&gt; and &lt;code&gt;MToon&lt;/code&gt;.
Parse material&amp;rsquo;s property name according to &lt;code&gt;_BumpMap&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EditorImport: &lt;code&gt;TextureImporterType.NormalMap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;RuntimeImport: Normal texture&amp;rsquo;s Pack&lt;/li&gt;
&lt;li&gt;Export: Normal texture&amp;rsquo;s Unpack&lt;/li&gt;
&lt;li&gt;sRGB&amp;rsquo;s and Linear&amp;rsquo;s correspondence&lt;/li&gt;
&lt;li&gt;Tangent&amp;rsquo;s correspondence&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Docs: API Change History</title><link>https://vrm.dev/en/dev/univrm-0.xx/programming/univrm_api_history/</link><pubDate>Mon, 21 May 2018 10:00:00 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-0.xx/programming/univrm_api_history/</guid><description>
&lt;p&gt;This section describes about changes affecting the program.&lt;/p&gt;
&lt;p&gt;Please go to &lt;a href=&#34;https://github.com/vrm-c/UniVRM/wiki&#34; target=&#34;_blank&#34;&gt;UniVRM/Wiki&lt;/a&gt; to get the latest information of the API update.&lt;/p&gt;
&lt;h1 id=&#34;v0-36&#34;&gt;v0.36&lt;/h1&gt;
&lt;h2 id=&#34;texture-name-save-locations-changed&#34;&gt;Texture Name Save Locations Changed&lt;/h2&gt;
&lt;p&gt;Conforming to the GLTF specification.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#a40000&#34;&gt;json.images&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;.extra.name&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the change&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#a40000&#34;&gt;json.images&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;.name&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;blendshape-name-save-locations-changed&#34;&gt;BlendShape Name Save Locations Changed&lt;/h2&gt;
&lt;p&gt;Conforming to the GLTF specification.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;extras&amp;rdquo; is not allowed in target&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/KhronosGroup/glTF/issues/1036#issuecomment-314078356&#34; target=&#34;_blank&#34;&gt;https://github.com/KhronosGroup/glTF/issues/1036#issuecomment-314078356&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#a40000&#34;&gt;json.meshes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;.primitives&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;.targets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;.extra.name&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After the change&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#a40000&#34;&gt;json.meshes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;.primitives&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;.extras.targetNames&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Docs: About VRM T-Pose</title><link>https://vrm.dev/en/dev/univrm-0.xx/vrm/vrm_tpose/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-0.xx/vrm/vrm_tpose/</guid><description>
&lt;p&gt;VRM T-Pose&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:tpose&#34;&gt;&lt;a href=&#34;#fn:tpose&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; conforms to Unity&amp;rsquo;s Humanoid of the first implementation of VRM.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/T_pose.png&#34; alt=&#34;T_pose&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;T-Pose example&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Besides fundamental parts such as body, head, and leg, rules on arm and finger are also formulated:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Palm faces downward, parallel to the ground along x axis&lt;/li&gt;
&lt;li&gt;Thumbs are parallel to the ground half way 45 degrees between x and z axis (the perspective view from the top)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:tpose&#34;&gt;&lt;a href=&#34;https://blogs.unity3d.com/2014/05/26/mecanim-humanoids/&#34; target=&#34;_blank&#34;&gt;Mecanim Humanoids&lt;/a&gt;
&lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:tpose&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description></item><item><title>Docs: UniVRM installation</title><link>https://vrm.dev/en/univrm/univrm_install/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/univrm/univrm_install/</guid><description>
&lt;h2 id=&#34;unity-version&#34;&gt;Unity Version&lt;/h2&gt;
&lt;p&gt;Starting from &lt;code&gt;UniVRM-0.56&lt;/code&gt;, UniVRM supports &lt;code&gt;Unity-2018.4LTS+&lt;/code&gt; &lt;code&gt;.Net4.x&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To install UniVRM with Unity Package Manager, please refer to &lt;a href=&#34;../univrm_upm&#34;&gt;Install UniVRM with UPM&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;unitypackage&#34;&gt;unitypackage&lt;/h2&gt;
&lt;p&gt;Get unity package in &lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases&#34; target=&#34;_blank&#34;&gt;https://github.com/vrm-c/UniVRM/releases&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The package name will look like this: &lt;code&gt;UniVRM-0.XX.X_XXXX.unitypackage&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;before-installation&#34;&gt;Before Installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Create a new Unity project (&lt;code&gt;Unity-2018.4LTS+&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Show Console: click &lt;code&gt;clear&lt;/code&gt; button on the upper-left of the window to see if any error message (in red) left before installation.&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/show_console.jpg&#34; alt=&#34;show console&#34; width=&#34;500&#34; /&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/clear_console.jpg&#34; alt=&#34;clear console&#34; width=&#34;500&#34; /&gt;
&lt;hr&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;code&gt;Linear&lt;/code&gt;&lt;code&gt;ProjectSettings&lt;/code&gt; - &lt;code&gt;Player&lt;/code&gt; - &lt;code&gt;Other Settings&lt;/code&gt; - &lt;code&gt;Rendering&lt;/code&gt; - &lt;code&gt;ColorSpace&lt;/code&gt; and set &lt;code&gt;ColorSpace&lt;/code&gt; to &lt;code&gt;Linear&lt;/code&gt; (recommended setting)&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/linear_setting.jpg&#34; alt=&#34;linear setting&#34; width=&#34;600&#34; /&gt;
&lt;h3 id=&#34;install-univrm-in-an-existing-project&#34;&gt;Install UniVRM in an Existing Project&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;code&gt;ProjectSettings&lt;/code&gt; - &lt;code&gt;Player&lt;/code&gt; - &lt;code&gt;Other Settings&lt;/code&gt; - &lt;code&gt;Scripting Runtime Version&lt;/code&gt; and set &lt;code&gt;Scripting Runtime Version&lt;/code&gt; to &lt;code&gt;.Net4.X equivalent&lt;/code&gt; (Unity 2018).&lt;/li&gt;
&lt;li&gt;If old UniVRM version exists, please delete &lt;code&gt;Assets/VRM&lt;/code&gt; before installation&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;import-unitypackage&#34;&gt;Import unitypackage&lt;/h2&gt;
&lt;p&gt;Go to &lt;code&gt;Assets&lt;/code&gt; - &lt;code&gt;Import Package&lt;/code&gt; - &lt;code&gt;Custom Package&lt;/code&gt; and select &lt;code&gt;UniVRM-0.XX.X_XXXX.unitypackage&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The two folders: &lt;code&gt;Assets/VRM&lt;/code&gt; and &lt;code&gt;Assets/VRMShaders&lt;/code&gt; will be imported into the Unity project.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/package_import.png&#34; alt=&#34;package_import&#34; width=&#34;350&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Import Unity Package&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;check-if-univrm-has-been-imported-successfully&#34;&gt;Check if UniVRM has been imported successfully&lt;/h2&gt;
&lt;p&gt;if UniVRM import successes, VRM menu will be displayed on the top:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_menu.jpg&#34; alt=&#34;vrm menu&#34; /&gt;
&lt;hr&gt;&lt;/p&gt;
&lt;p&gt;If menu does not show up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check if &lt;code&gt;.Net4.X equivalent&lt;/code&gt; has been selected (&lt;code&gt;ProjectSettings&lt;/code&gt; - &lt;code&gt;Player&lt;/code&gt; - &lt;code&gt;Other Settings&lt;/code&gt; - &lt;code&gt;Scripting Runtime Version&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Open Console and check if any error (message in red) occurs&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Docs: Model Information</title><link>https://vrm.dev/en/univrm/components/univrm_meta/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/univrm/components/univrm_meta/</guid><description>
&lt;h2 id=&#34;vrmmeta&#34;&gt;VRMMeta&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/meta.png&#34; alt=&#34;meta&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VRMMeta component&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;information&#34;&gt;Information&lt;/h3&gt;
&lt;h4 id=&#34;title&#34;&gt;Title&lt;/h4&gt;
&lt;p&gt;Set the name of the VRM model&lt;/p&gt;
&lt;h4 id=&#34;author&#34;&gt;Author&lt;/h4&gt;
&lt;p&gt;Enter the author name of the VRM model&lt;/p&gt;
&lt;h4 id=&#34;contact-information&#34;&gt;Contact Information&lt;/h4&gt;
&lt;p&gt;Enter the contact information of the author&lt;/p&gt;
&lt;h4 id=&#34;reference&#34;&gt;Reference&lt;/h4&gt;
&lt;p&gt;Original / Related works of this avatar (URL), if any&lt;/p&gt;
&lt;h4 id=&#34;thumbnail&#34;&gt;Thumbnail&lt;/h4&gt;
&lt;p&gt;Register the thumbnail of the VRM model. A texture resolution about 2048x2048 is recommended.&lt;/p&gt;
&lt;h4 id=&#34;version&#34;&gt;Version&lt;/h4&gt;
&lt;p&gt;Specify the model version with character string.
Any description is OK.&lt;/p&gt;
&lt;h3 id=&#34;license&#34;&gt;License&lt;/h3&gt;
&lt;h4 id=&#34;personation-characterization-permission&#34;&gt;Personation / Characterization Permission&lt;/h4&gt;
&lt;h5 id=&#34;a-person-who-can-perform-with-this-avatar&#34;&gt;A person who can perform with this avatar&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Only Author&lt;/li&gt;
&lt;li&gt;Explicitly Licensed Person&lt;/li&gt;
&lt;li&gt;Everyone&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;permission-to-perform-violent-acts-with-this-avatar&#34;&gt;Permission to perform violent acts with this avatar&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;permission-to-perform-sexual-acts-with-this-avatar&#34;&gt;Permission to perform sexual acts with this avatar&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;for-commercial-use&#34;&gt;For commercial use&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;other-license-url&#34;&gt;Other License Url&lt;/h5&gt;
&lt;p&gt;If there are any conditions not mentioned above, put the URL link of the license document here.&lt;/p&gt;
&lt;h4 id=&#34;redistribution-modifications-license&#34;&gt;Redistribution / Modifications License&lt;/h4&gt;
&lt;h5 id=&#34;license-type&#34;&gt;License Type&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Redistribution Prohibited&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Copyright wavier(CC0)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY License(CC_BY)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC License(CC_BY_NC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY SA License(CC_BY_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC SA License(CC_BY_NC_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nd/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY ND License(CC_BY_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC ND License(CC_BY_NC_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;other-license-url-1&#34;&gt;Other License Url&lt;/h5&gt;
&lt;p&gt;If “Other” is selected, put the URL link of the license document here.&lt;/p&gt;</description></item><item><title>Docs: About GLTF</title><link>https://vrm.dev/en/dev/univrm-0.xx/gltf/gltf_about/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-0.xx/gltf/gltf_about/</guid><description>
&lt;p&gt;glTF is a 3D format created by Khronos Group, which is developing openGL specifications. glTF 2.0 was released in 2017. VRM is based on glTF 2.0.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/KhronosGroup/glTF&#34; target=&#34;_blank&#34;&gt;https://github.com/KhronosGroup/glTF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;what-kind-of-information-can-be-recorded-by-gltf&#34;&gt;What kind of information can be recorded by glTF?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Mesh (Vertex array、index array)
&lt;ul&gt;
&lt;li&gt;Morph target&lt;/li&gt;
&lt;li&gt;Skinning (4weight)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Texture&lt;/li&gt;
&lt;li&gt;Material (PBR)&lt;/li&gt;
&lt;li&gt;Scene&lt;/li&gt;
&lt;li&gt;Animation&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:vrm-not-supported&#34;&gt;&lt;a href=&#34;#fn:vrm-not-supported&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Camera&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:vrm-not-supported&#34;&gt;&lt;a href=&#34;#fn:vrm-not-supported&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Light source&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:vrm-not-supported&#34;&gt;&lt;a href=&#34;#fn:vrm-not-supported&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An entire 3D scene can be recorded.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenGL right-handed, Y-UP coordinate system&lt;/li&gt;
&lt;li&gt;Meter (unit)&lt;/li&gt;
&lt;li&gt;Little endian&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;gltf-format-outline&#34;&gt;glTF format outline&lt;/h1&gt;
&lt;p&gt;glTF format comprises two parts: a JSON scene description part and a binary part that records images and vertex arrays. External binary data can be accessed by referencing Url or path. For glb format, it combines a JSON part and a binary part into one file. The binary data can be accessed via the offset into the buffer (byteOffset). For a program, it is easier to handle the glb format which is no need to access external files&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:VRM-glb&#34;&gt;&lt;a href=&#34;#fn:VRM-glb&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;h1 id=&#34;glb-format&#34;&gt;glb format&lt;/h1&gt;
&lt;p&gt;A structure that has&lt;code&gt;Header part + Chunk parts&lt;/code&gt;.
More specifically, it is&lt;code&gt;Header part + JSON CHUNk + BINARY CHUNK&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Header part&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Length&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Content&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ascii&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&amp;ldquo;glTF&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;glTF version&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;int32&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;file size&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;int32&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Chunk part&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Length&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Content&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;chunk size&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;int32&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;chunk type&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ascii&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&amp;ldquo;JSON&amp;rdquo; or &amp;ldquo;BIN\x00&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;chunk size&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;chunk body&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;byte array&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;example-of-parsing-with-python3&#34;&gt;Example of parsing with python3&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;struct&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;json&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Reader&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;__init__&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#3465a4&#34;&gt;None&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;
&lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;read_str&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;):&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pos&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;strip&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;):&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pos&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;result&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;read_uint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;):&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;struct&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;unpack&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;I&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pos&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;])[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#3465a4&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pos&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;result&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;parse_glb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;):&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Reader&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;magic&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reader&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;read_str&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;magic&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;glTF&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#c00;font-weight:bold&#34;&gt;Exception&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;magic not found: #{magic}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;version&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reader&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;read_uint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;version&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#c00;font-weight:bold&#34;&gt;Exception&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;version:#{version} is not 2&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reader&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;read_uint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;12&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;json_str&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#3465a4&#34;&gt;None&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;body&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#3465a4&#34;&gt;None&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#print(size)&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;chunk_size&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reader&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;read_uint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;chunk_type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reader&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;read_str&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;chunk_data&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;reader&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;chunk_size&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;chunk_size&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;chunk_type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;BIN&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\x00&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;body&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;chunk_data&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;chunk_type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;JSON&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;json_str&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;chunk_data&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#c00;font-weight:bold&#34;&gt;Exception&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;unknown chunk_type: {chunk_type}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;json&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;loads&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;json_str&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;body&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;AliciaSolid.vrm&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;parsed&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;body&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;parse_glb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;vrm-extension&#34;&gt;VRM extension&lt;/h1&gt;
&lt;p&gt;Information of VRM extension is stored in&lt;code&gt;json[&#39;extensions&#39;][&#39;VRM&#39;]&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vrm-c/vrm-specification/blob/master/specification/0.0/README.md&#34; target=&#34;_blank&#34;&gt;VRM specifications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:vrm-not-supported&#34;&gt;Not supported in VRM
&lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:vrm-not-supported&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:VRM-glb&#34;&gt;glb is adopted in VRM.
&lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:VRM-glb&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description></item><item><title>Docs: What is &#34;VRM&#34;? What can VRM do?</title><link>https://vrm.dev/en/vrm_about/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/vrm_about/</guid><description>
&lt;h2 id=&#34;what-is-vrm&#34;&gt;What is VRM?&lt;/h2&gt;
&lt;p&gt;In the past, when trying to handle the &lt;strong&gt;3D humanoid avatar (3D model)&lt;/strong&gt; in Virtual Reality, Virtual YouTuber, etc., it was necessary to develop an unique system for applications and fine-tune the 3D model data due to&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The output data is depend on how creators make the 3D model and what modeling tools are used&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The coordinate system is different. The scale is different. The initial pose is different. The expression is different&amp;hellip;&lt;/li&gt;
&lt;li&gt;Needless to say, the way bones put into the 3D model is also different&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The format of handling the 3D model data is different. Each company has its own specifications, which are way more complex than necessary. Also, the necessary information about their file formats is not fully provided&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Whether the FBX file, which is compatible with various software, is viable for an application and which version of the application can process the FBX file are main issues concerned by most of the users.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There is not enough necessary information available from the viewpoint of using the 3D model data as the Avatar&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For example, in the first-person view, how to obtain the right position, how to get rid of the head display, which part of the body should be excluded and so on&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With the use of avatar in VR applications grows up very fast, if the situations mentioned above remain unchanged, application developers and 3D model creators will have to spend double or triple effort. To improve the current situation, based on the humanoid character and avatar, the first step is to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Effectively absorb and unify the differences from the model data&lt;/li&gt;
&lt;li&gt;Make handling the 3D model easy on the application side&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here we propose a &lt;strong&gt;platform-independent 3D avatar file format&lt;/strong&gt; that possesses the above characteristics called &lt;strong&gt;VRM&lt;/strong&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;what-can-you-do-with-vrm&#34;&gt;What can you do with VRM?&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/VRM_WorldConnect_EN.png&#34; alt=&#34;VRM applications&#34; /&gt;
&lt;p&gt;&lt;strong&gt;The same avatar (VRM model) data can be used in any application that supports VRM&lt;/strong&gt;. As long as various VR applications are ready, the future will look like the one described below for sure&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create your own avatar with character maker tools that support VRM&lt;/li&gt;
&lt;li&gt;Use your own avatar to host a live streaming event and show up on your friends&amp;rsquo; live channels&lt;/li&gt;
&lt;li&gt;After the live streaming, start a VR game to explore the VR world with your own avatar&lt;/li&gt;
&lt;li&gt;Move to the chat room in the VR world after getting tired of the game. Use the same avatar character to hang out with friends&lt;/li&gt;
&lt;li&gt;Tomorrow join the VR study group in VR. Of course, the same avatar appearance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;By using your own avatar (VRM 3D model), you can easily access to various VRM-compatible applications and games&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Live streaming, video creation, games, chat&amp;hellip;. Now the virtual worlds are separated. The first step to connect the separated virtual worlds is VRM.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;vrm-features&#34;&gt;VRM features&lt;/h2&gt;
&lt;p&gt;VRM can handle the humanoid character and avatar. &lt;strong&gt;Although the current provided software to import and export VRM is for Unity, VRM itself is platform-independent&lt;/strong&gt;, which means VRM is also applicable to other engines and environments.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Available to handle the humanoid character (3D model data) without limiting to a specific platform.&lt;/li&gt;
&lt;li&gt;VRM is based on the 3D standard format &lt;strong&gt;glTF2.0&lt;/strong&gt;, which is the format added with constraints and extensions for handling the humanoid model. Ease of implementation as it is based on this standard format.&lt;/li&gt;
&lt;li&gt;All data including textures and materials is compacted as one file. To import a VRM model, only one single file needs to be handled.&lt;/li&gt;
&lt;li&gt;Based on the standard of the scale (1.00 = 1 m), the coordinate system (Y-up, -Z) and the bone structure (conforming to Unity Humanoid, T-Stance, no local rotation for each bone), a 3D model made by different modeling tools will not cause differences on the exported VRM model.&lt;/li&gt;
&lt;li&gt;Various techniques such as the BlendShape and the material transparency can be used to handle Avatar expressions. The difference in a technique can be absorbed and unified through API operation on the VRM side.&lt;/li&gt;
&lt;li&gt;For the use of avatar in VR, VRM supports &lt;strong&gt;first-person view&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;A standard implementation of the object swaying that does not rely on the physical engine is available for users to set up the character&amp;rsquo;s hair, clothes and so on.&lt;/li&gt;
&lt;li&gt;A standard implementation of the PBR shader is provided. Beside the standard PBR, users can also choose the Toon shader or the Unlit shader.&lt;/li&gt;
&lt;li&gt;Not only the meta information such as the title and the author name, but also the thumbnail and the &lt;strong&gt;license information specialized for avatars in the VR era&lt;/strong&gt; can be included in the VRM file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VRM is assumed to be a 3D avatar format in the VR era and to be used in multiple applications. For example, when it comes to &amp;ldquo;VR communications with avatars online&amp;rdquo;, it is possible to &lt;strong&gt;send your own avatar data to your partners as they can see your avatar appearance in a shared virtual space&lt;/strong&gt;. However, there may be situations that cannot be handled by just redistribution rules based on conventional thinkings. Therefore, VRM has:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modification / Redistribution rules for the avatar（configurable from Creative Commons, etc.）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;in addition to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Permission to use the avatar and perform various acts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The new adding above is assumed to be the format in VR era.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;license-data-settings-in-vrm-file&#34;&gt;License data settings in VRM file&lt;/h2&gt;
&lt;h3 id=&#34;personation-characterization-permission&#34;&gt;Personation / Characterization Permission&lt;/h3&gt;
&lt;h4 id=&#34;a-person-who-can-perform-with-this-avatar&#34;&gt;A person who can perform with this avatar&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Only Author&lt;/li&gt;
&lt;li&gt;Explicitly Licensed Person&lt;/li&gt;
&lt;li&gt;Everyone&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;violent-acts-using-this-avatar&#34;&gt;Violent acts using this avatar&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;sexuality-acts-using-this-avatar&#34;&gt;Sexuality acts using this avatar&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;for-commercial-use&#34;&gt;For commercial use&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;other-license-url&#34;&gt;Other License Url&lt;/h4&gt;
&lt;p&gt;If there are any conditions not mentioned above, put the URL link of the license document here.&lt;/p&gt;
&lt;h3 id=&#34;redistribution-modifications-license&#34;&gt;Redistribution / Modifications License&lt;/h3&gt;
&lt;h4 id=&#34;license-type&#34;&gt;License Type&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Redistribution Prohibited&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/deed.en&#34; target=&#34;_blank&#34;&gt;Copyright wavier (CC0)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY License(CC_BY)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC License(CC_BY_NC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY SA License(CC_BY_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC SA License(CC_BY_NC_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nd/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY ND License(CC_BY_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC ND License(CC_BY_NC_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;other-license-url-1&#34;&gt;Other License Url&lt;/h4&gt;
&lt;p&gt;If “Other” is selected, put the URL link of the license document here.&lt;/p&gt;</description></item><item><title>Docs: UniVRM Export</title><link>https://vrm.dev/en/univrm/univrm_export/</link><pubDate>Thu, 16 Jul 2020 10:23:04 +0900</pubDate><guid>https://vrm.dev/en/univrm/univrm_export/</guid><description>
&lt;h2 id=&#34;export-dialog&#34;&gt;Export Dialog&lt;/h2&gt;
&lt;p&gt;v0.56&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/export_dialog_56.jpg&#34; alt=&#34;vrm export&#34; width=&#34;600&#34; /&gt;
&lt;hr&gt;&lt;/p&gt;
&lt;p&gt;Below is the export dialog in v0.56.
We will improve it in the later version.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Terminology&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Root&lt;/td&gt;
&lt;td&gt;Topmost parent of an object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hierarchy&lt;/td&gt;
&lt;td&gt;Root&amp;rsquo;s children&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;warning-message-marked-with-orange-frame&#34;&gt;Warning Message (marked with orange frame)&lt;/h3&gt;
&lt;p&gt;The model can be exported, but there is no guarantee that this exported model&amp;rsquo;s behaviors/looking are what you expect.&lt;/p&gt;
&lt;p&gt;Here is a list of warning messages:&lt;/p&gt;
&lt;h4 id=&#34;jaw-bone-is-included-it-may-not-be-what-you-intended-please-check-the-humanoid-avatar-setting-screen&#34;&gt;Jaw bone is included. It may not be what you intended. Please check the humanoid avatar setting screen&lt;/h4&gt;
&lt;p&gt;Jaw (chin) bone is included in humanoid setting.
There is a possibility that the jaw bone is automatically assigned during FBX import.
As a result, facial parts (e.g. bangs) are mis-recognized as jaw and being assigned to Jaw bone.
Therefore, bangs will have weird movements due to this issue.
Please remove this setting in Inspector &lt;code&gt;FBX Importer&lt;/code&gt; -&amp;gt; &lt;code&gt;rig&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;this-model-contains-vertex-color&#34;&gt;This model contains vertex color&lt;/h4&gt;
&lt;p&gt;If you see this message, there are meshes that contain vertex color in Hierarchy.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Vertex Color&lt;/th&gt;
&lt;th&gt;If contained&lt;/th&gt;
&lt;th&gt;Behavior&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Before UniVRM-0.53&lt;/td&gt;
&lt;td&gt;not applied&lt;/td&gt;
&lt;td&gt;ignore vertex color effect&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;From UniVRM-0.54&lt;/td&gt;
&lt;td&gt;applied&lt;/td&gt;
&lt;td&gt;show vertex color effect&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If &lt;code&gt;Unlit&lt;/code&gt; is used, there is no setting that can disable vertex color usage.
If necessary, please choose &lt;code&gt;Remove Vertex Color&lt;/code&gt; option to direct remove vertex color data from the model.&lt;/p&gt;
&lt;h4 id=&#34;unknown-material-0-is-used-this-will-export-as-standard-fallback&#34;&gt;unknown material &amp;lsquo;{0}&amp;rsquo; is used. this will export as &lt;code&gt;Standard&lt;/code&gt; fallback&lt;/h4&gt;
&lt;p&gt;Materials other than Standard, Unlit, MToon will be defaulted to Standard.&lt;/p&gt;
&lt;h3 id=&#34;error-message-marked-with-red-frame&#34;&gt;Error Message (marked with red frame)&lt;/h3&gt;
&lt;p&gt;Export is not allowed. Problems shown in the red frame need to be resolved.
If Error Message is shown in the dialog, &lt;code&gt;export&lt;/code&gt; button is disabled.&lt;/p&gt;
&lt;p&gt;Here is a list of error messages:&lt;/p&gt;
&lt;h4 id=&#34;require-source&#34;&gt;Require source&lt;/h4&gt;
&lt;p&gt;Please select a valid object that can be exported as VRM file in the scene.&lt;/p&gt;
&lt;h4 id=&#34;the-root-transform-should-have-default-translation-rotation-and-scale&#34;&gt;The Root transform should have Default translation, rotation and scale&lt;/h4&gt;
&lt;p&gt;Starting from v0.56, Root (topmost parent) object with non-default values for translation, rotation, and scale is not allowed to export.
In previous versions we found it would cause errors sometimes if Root&amp;rsquo;s transform is not Default.
Instead, we recommend moving this object in the Hierarchy to be Root&amp;rsquo;s child.&lt;/p&gt;
&lt;h4 id=&#34;require-animator&#34;&gt;Require animator&lt;/h4&gt;
&lt;p&gt;Animator component cannot be found in Root (non-humanoid).&lt;/p&gt;
&lt;h4 id=&#34;require-animator-avatar&#34;&gt;Require animator.avatar&lt;/h4&gt;
&lt;p&gt;avatar cannot be found in Root&amp;rsquo;s Animator (non-humanoid).&lt;/p&gt;
&lt;h4 id=&#34;animator-avatar-is-not-valid&#34;&gt;Animator.avatar is not valid&lt;/h4&gt;
&lt;p&gt;Animator.avatar is not humanoid.&lt;/p&gt;
&lt;h4 id=&#34;animator-avatar-is-not-humanoid-please-change-model-s-animationtype-to-humanoid&#34;&gt;Animator.avatar is not humanoid. Please change model&amp;rsquo;s AnimationType to humanoid&lt;/h4&gt;
&lt;p&gt;Please change the setting to &lt;code&gt;humanoid&lt;/code&gt; (from Inspector: &lt;code&gt;FBX Import&lt;/code&gt; -&amp;gt; &lt;code&gt;rig&lt;/code&gt; -&amp;gt; &lt;code&gt;AnimationType&lt;/code&gt;).&lt;/p&gt;
&lt;h4 id=&#34;find-duplicate-bone-names-please-check-model-s-bone-names&#34;&gt;Find duplicate Bone names. Please check model&amp;rsquo;s bone names&lt;/h4&gt;
&lt;p&gt;Export is not allowed in v0.56 if there are GameObjects with the same name in Hierarchy.
In previous versions we found it would cause errors sometimes if bones with the same name are used.
Please rename them.&lt;/p&gt;
&lt;h4 id=&#34;require-title&#34;&gt;Require Title&lt;/h4&gt;
&lt;p&gt;Please enter the title of this model in the dialog.&lt;/p&gt;
&lt;h4 id=&#34;require-version&#34;&gt;Require Version&lt;/h4&gt;
&lt;p&gt;Please enter the version of this model in the dialog.&lt;/p&gt;
&lt;h4 id=&#34;require-author&#34;&gt;Require Author&lt;/h4&gt;
&lt;p&gt;Please enter the author of this model in the dialog.&lt;/p&gt;
&lt;h4 id=&#34;no-active-mesh&#34;&gt;No active mesh&lt;/h4&gt;
&lt;p&gt;Export target doesn&amp;rsquo;t have &lt;code&gt;active&lt;/code&gt; mesh.&lt;/p&gt;
&lt;h4 id=&#34;filename-0-is-too-long&#34;&gt;FileName &amp;lsquo;{0}&amp;rsquo; is too long&lt;/h4&gt;
&lt;p&gt;Material, Texture and Mesh names are too long.
Please rename them.&lt;/p&gt;
&lt;h3 id=&#34;export-option-marked-with-blue-frame&#34;&gt;Export Option (marked with blue frame)&lt;/h3&gt;
&lt;p&gt;Additional processing during export can be chosen here.&lt;/p&gt;
&lt;h4 id=&#34;force-t-pose&#34;&gt;Force T Pose&lt;/h4&gt;
&lt;p&gt;Force T-Pose before export.
If you can manually make T-Pose for model, it&amp;rsquo;s ok without selecting this option.&lt;/p&gt;
&lt;h4 id=&#34;pose-freeze&#34;&gt;Pose Freeze&lt;/h4&gt;
&lt;p&gt;Model&amp;rsquo;s normalization.
If Model&amp;rsquo;s normalization is already done, there is no need to perform model normalization again.
However, if additional parts are added into the model (not normalized yet), model normalization is required.
In Hierarchy, all GameObjects&amp;rsquo; rotation should be 0, and their scale should be 1 if a model has been normalized.&lt;/p&gt;
&lt;h4 id=&#34;useexperimentalexporter&#34;&gt;UseExperimentalExporter&lt;/h4&gt;
&lt;p&gt;Exporter&amp;rsquo;s Serializer version.
It will not affect the output whether this option is selected or not.&lt;/p&gt;
&lt;h4 id=&#34;usesparseaccessor&#34;&gt;UseSparseAccessor&lt;/h4&gt;
&lt;p&gt;If the model contains multiple BlendShapes, selecting this option can help reduce the file&amp;rsquo;s size.&lt;/p&gt;
&lt;h4 id=&#34;onlyblendshapeposition&#34;&gt;OnlyBlendshapePosition&lt;/h4&gt;
&lt;p&gt;BlendShape&amp;rsquo;s Normal and Tangent will not be exported if this option is selected.
The file size can be reduced.
Be aware that errors may occur during import if the export target is made by UniVRM-0.53 or earlier versions.&lt;/p&gt;
&lt;h4 id=&#34;reduceblendshape&#34;&gt;ReduceBlendshape&lt;/h4&gt;
&lt;p&gt;BlendShapes that are not referenced by BlendShapeClips will not be exported.
The file size can be reduced.&lt;/p&gt;
&lt;h4 id=&#34;reduceblendshapeclip&#34;&gt;ReduceBlendshapeClip&lt;/h4&gt;
&lt;p&gt;BlendShapeClip belongs to Preset.Unknown will not be exported.
Used in combination with ReduceBlendshape.&lt;/p&gt;
&lt;h4 id=&#34;removevertexcolor&#34;&gt;RemoveVertexColor&lt;/h4&gt;
&lt;p&gt;Vertex color will not be exported.
In GLTF, there is no setting that can disable the color vertex usage.
UniVRM supports vertex color for &lt;code&gt;unlit&lt;/code&gt; shader.&lt;/p&gt;</description></item><item><title>Docs: Structure</title><link>https://vrm.dev/en/dev/univrm-1.xx/structure/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-1.xx/structure/</guid><description>
&lt;h2 id=&#34;assets-vrmlib&#34;&gt;Assets/vrmlib&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;VrmLib.Model&lt;/code&gt;: An intermediate container generated from the GLTF array buffer to make handling VRM model data easier. It can access the GLTF hierarchy in the VRM model without index referencing.&lt;/p&gt;
&lt;h2 id=&#34;assets-protobufserializer&#34;&gt;Assets/ProtobufSerializer&lt;/h2&gt;
&lt;p&gt;VRM-1.0&amp;rsquo;s reading/writing.
Defined by ProtocolBuffer and generate a Json serializer.&lt;/p&gt;
&lt;p&gt;Transfer from VRM-1.0 to the intermediate format &lt;code&gt;VrmLib.Model&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VRM-1.0 &amp;lt;=&amp;gt; VrmLib.Model&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assets-vrm&#34;&gt;Assets/VRM&lt;/h2&gt;
&lt;p&gt;Add &lt;code&gt;package.json&lt;/code&gt; to reference the followings (UniVRM-0.55):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MToon shader&lt;/li&gt;
&lt;li&gt;UniUnlit shader&lt;/li&gt;
&lt;li&gt;VRM-0.X&amp;rsquo;s serializer&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assets-univrm0xreader&#34;&gt;Assets/UniVRM0XReader&lt;/h2&gt;
&lt;p&gt;Transfer from VRM-0.X to the intermediate format &lt;code&gt;VrmLib.Model&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VRM-0.x =&amp;gt; VrmLib.Model&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assets-univrm-1-0&#34;&gt;Assets/UniVRM-1.0&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VrmLib.Model &amp;lt;=&amp;gt; Unity&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Transformation between right-handed and left-handed coordinate system&lt;/li&gt;
&lt;li&gt;Must be run in ScriptThread&lt;/li&gt;
&lt;li&gt;GLTF-related (Mesh, Texture, Material, GameObject, SkinnedMeshRenderer, etc.)&lt;/li&gt;
&lt;li&gt;VRM-related (HumanoidAvatar, BlendShapeProxy, LookAt, FirstPerson, etc.)&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Docs: BlendShape Setting</title><link>https://vrm.dev/en/univrm/components/univrm_blendshape/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/univrm/components/univrm_blendshape/</guid><description>
&lt;p&gt;New features introduced in UniVRM v0.45
&lt;a href=&#34;../../settings/blendshape_setup/&#34;&gt;can be found here&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;vrmblendshapeproxy&#34;&gt;VRMBlendShapeProxy&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMBlendShapeProxy.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The figure above is VRMBlendShapeProxy in the Inspector window at runtime. VRMBlendShapeProxy can be enabled by clicking the play button in edit mode&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;How to use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set BlendShapeAvatar &lt;code&gt;VRMBlendShapeProxy-&amp;gt;BlendShapeAvatar&lt;/code&gt; in the Inspector&lt;/li&gt;
&lt;li&gt;Change BlendShapeClip value between 0 and 1 at runtime (e.g. BLINK, JOY)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;blendshapeavatar&#34;&gt;BlendShapeAvatar&lt;/h2&gt;
&lt;p&gt;Expressions can be created in the Inspector.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMBlendShapeProxyEditor.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Double click the&lt;code&gt;Blend Shape Avatar&lt;/code&gt;field&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeAvatarAsset.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Click&lt;code&gt;BlendShape&lt;/code&gt;directly in the Project view&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeAvatarEditor.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The Inspector of BlendShape editor&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Select expressions and customize the values.
For example, we select&lt;code&gt;Fun&lt;/code&gt;and edit its expressions as shown in the following:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeClip.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Example: Set&lt;code&gt;mouth_smile&lt;/code&gt;,&lt;code&gt;eye_smile&lt;/code&gt;and&lt;code&gt;eyeblow_smile&lt;/code&gt;to 100&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The individual blend shapes such as eyebrow, eye and mouth can be merged into one expression like the image above. Created BlendShape names can be specified.&lt;/p&gt;
&lt;p&gt;After changing slider value and creating BlendShape, click the Apply button for saving the current status.&lt;/p&gt;
&lt;h2 id=&#34;blendshape-preset&#34;&gt;BlendShape preset&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShape_Preset.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Select&lt;code&gt;Preset&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The predefined names for the BlendShape clips. The following predefined expressions are available:&lt;/p&gt;
&lt;h3 id=&#34;neutral&#34;&gt;NEUTRAL&lt;/h3&gt;
&lt;p&gt;Specified as the standard facial expression and assumed to be used in standby state.&lt;/p&gt;
&lt;h3 id=&#34;a-i-u-e-o&#34;&gt;A, I, U, E, O&lt;/h3&gt;
&lt;p&gt;Corresponds to the sound of lip-sync&lt;code&gt;aa・ih・ou・E・oh&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;blink&#34;&gt;Blink&lt;/h3&gt;
&lt;p&gt;Eye blink.&lt;/p&gt;
&lt;h3 id=&#34;blink-l-blink-r&#34;&gt;Blink_L, Blink_R&lt;/h3&gt;
&lt;p&gt;Blinks with only one eye.&lt;/p&gt;
&lt;h3 id=&#34;joy-angry-sorrow-fun&#34;&gt;Joy, Angry, Sorrow, Fun&lt;/h3&gt;
&lt;p&gt;Emotion.&lt;/p&gt;
&lt;h3 id=&#34;lookup-lookdown-lookleft-lookright&#34;&gt;LookUp, LookDown, LookLeft, LookRight&lt;/h3&gt;
&lt;p&gt;Used when the model&amp;rsquo;s eyes are controlled by BlendShape.&lt;/p&gt;
&lt;h3 id=&#34;unknown&#34;&gt;Unknown&lt;/h3&gt;
&lt;p&gt;New created expressions are specified as &amp;ldquo;Unknown&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;change-the-value-of-blendshapeproxy-at-runtime&#34;&gt;Change the value of BlendShapeProxy (at runtime)&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMBlendShapeProxyRuntime.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Preset&lt;/code&gt;is used&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You can operate expressions from the Inspector.&lt;/p&gt;
&lt;h2 id=&#34;option-add-additional-facial-expressions&#34;&gt;[Option] Add additional facial expressions&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMBlendShapeProxyRuntime.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Double click the&lt;code&gt;Blend Shape Avatar&lt;/code&gt;field and click&lt;code&gt;Add BlendShapeClip&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Enter a name for the new BlendShapeClip file (BlendShapeClipName.asset) and save it. Then, select the new generated button in the BlendShapeClip list (the last button) and enter a name. Also, please set facial expression values for new BlendShape clips.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeClipOption.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Click the new expression &amp;ldquo;びっくり&amp;rdquo; (surprised)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You can call it from the codes shown as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Call this expression with string since it belongs to unknown category
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ImmediatelySetValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;びっくり&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.0f&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Assign a value between the range 0~1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the setting is done, don&amp;rsquo;t forget to export VRM file for being able to use the created expressions at runtime.&lt;/p&gt;
&lt;h2 id=&#34;option-morph-material-color&#34;&gt;[Option] Morph material color&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeClipMaterial.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The setting of Material morph. Double click the&lt;code&gt;Current clip&lt;/code&gt;field or directly select the BlendShape clip (e.g. BlendShape.XXX or your created name) in the Project view&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description></item><item><title>Docs: How to make VRM file</title><link>https://vrm.dev/en/how_to_make_vrm/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/how_to_make_vrm/</guid><description>
&lt;h2 id=&#34;conversion-from-existing-3d-model&#34;&gt;Conversion from existing 3D model&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/VRM_changeVRM_EN.png&#34; alt=&#34;vrm workflow&#34; /&gt;
&lt;p&gt;The VRM file can be made by &lt;a href=&#34;https://unity3d.com/&#34; target=&#34;_blank&#34;&gt;Unity&lt;/a&gt; and &lt;a href=&#34;https://github.com/vrm-c/UniVRM&#34; target=&#34;_blank&#34;&gt;UniVRM&lt;/a&gt;. The workflow is as follow:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Import the 3D model data and &lt;a href=&#34;https://github.com/vrm-c/UniVRM&#34; target=&#34;_blank&#34;&gt;UniVRM&lt;/a&gt; into the current unity project. Adjust/set the model&amp;rsquo;s size, material, etc.&lt;/li&gt;
&lt;li&gt;Export the 3D model data as VRM in Unity (normalization processing)&lt;/li&gt;
&lt;li&gt;Import the VRM file into the current unity project and customize the settings (license, spring bone, expression, eyelook, etc.)
&lt;ul&gt;
&lt;li&gt;In some cases, make sure the model is working (e.g. facial expression change) in play mode first&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Export the 3D model data as VRM again after the adjustment is finished. The new customized settings are now saved in the VRM file.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Briefly speaking, &lt;strong&gt;A humanoid 3D model can be adjusted and exported as a VRM file in Unity. Once the VRM file is made, it can be imported again to adjust items such as VRM Meta, BlendShape, etc.&lt;/strong&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id=&#34;1-create-an-empty-project-in-unity&#34;&gt;1. Create an empty project in Unity&lt;/h3&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/unity_new_project.png&#34; /&gt;
&lt;p&gt;Create a new project at the start page (&lt;code&gt;New -&amp;gt; Create project&lt;/code&gt;).&lt;/p&gt;
&lt;h3 id=&#34;2-import-univrm-package-into-the-created-project&#34;&gt;2. Import UniVRM package into the created project&lt;/h3&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/package_import.png&#34; alt=&#34;package_import&#34; /&gt;
&lt;p&gt;Download the latest unitypackage (UniVRM-0.XX) from &lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases&#34; target=&#34;_blank&#34;&gt;UniVRM/releases&lt;/a&gt; and import it into the current project (&lt;code&gt;Assets -&amp;gt; Import Package -&amp;gt; Custom Package&lt;/code&gt;). The imported files will be in &lt;code&gt;../Assets/VRM&lt;/code&gt;. &lt;strong&gt;To update UniVRM to a newer version, deleting the previously created VRM folder before package import is recommended&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;3-prepare-a-3d-model-that-can-be-handled-as-humanoid-in-unity&#34;&gt;3. Prepare a 3D model that can be handled as &amp;ldquo;Humanoid&amp;rdquo; in Unity&lt;/h3&gt;
&lt;p&gt;Prepare a 3D model that can be &lt;a href=&#34;https://docs.unity3d.com/2019.3/Documentation/Manual/HOWTO-importObject.html&#34; target=&#34;_blank&#34;&gt;imported&lt;/a&gt; into Unity such as FBX format. The model&amp;rsquo;s bones must be set. Also, &lt;strong&gt;be sure to use your own model or the model data that is processed and licensed for use as a VR avatar.&lt;/strong&gt;. As we will describe later, &lt;strong&gt;there are items that describe license information in the VRM file, authors need to fill up those information for their own VRM models&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/DragImportedModel.png&#34; alt=&#34;DragImported3DModel&#34; width=&#34;300&#34; /&gt;
&lt;br&gt;
&lt;br&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/ModelConversionMenu.png&#34; alt=&#34;ModelConversionMenu&#34; width=&#34;900&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;First, drag the imported humanoid 3D model from the Project window to the Hierarchy window. Click the 3D model in the Hierarchy window then you will see the menu as shown in the Figure above. Click &lt;code&gt;Select&lt;/code&gt; and then click &lt;code&gt;Materials&lt;/code&gt;. Set &lt;code&gt;Location&lt;/code&gt; as &lt;code&gt;Use External Materials (Legacy)&lt;/code&gt;.&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/SetAsExternalMaterialsLegacy.png&#34; alt=&#34;SetAsExternalMaterialsLegacy&#34; width=&#34;900&#34; /&gt;
&lt;p&gt;Next, click &lt;code&gt;Rig&lt;/code&gt; and set &lt;code&gt;Animation Type&lt;/code&gt; as &lt;code&gt;Humanoid&lt;/code&gt;, and then click &lt;code&gt;Configure&lt;/code&gt; button. A message box will pop up asking whether you want to save the current scene. Click &lt;code&gt;Save&lt;/code&gt; to save it.&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/SetModelAsHumanoid.png&#34; alt=&#34;SetModelAsHumanoid&#34; width=&#34;900&#34; /&gt;
&lt;p&gt;Now you will see the bone mapping details for this model. Unity will perform auto-mapping for each bone initially. You can check the model&amp;rsquo;s Body, Head, etc. if an assigned component fits, the leftmost icon will show as green, otherwise it will show as red. In this situation, click rightmost icon for a bone that has the failure bone mapping and select a component you think it fits this bone. To re-map the bones automatically, simply click &lt;code&gt;Mapping&lt;/code&gt; in the lowerleft of the interface, click &lt;code&gt;clear&lt;/code&gt; and then click &lt;code&gt;Automap&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BoneMapping.png&#34; alt=&#34;BoneMapping&#34; width=&#34;600&#34; /&gt;
&lt;br&gt;
&lt;br&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/BoneAssignment.png&#34; alt=&#34;BoneAssignment&#34; width=&#34;900&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;However, in some cases the bone mapping results are not reasonable even all of them appear as green as shown in the figure below:&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/fix_eye.png&#34; /&gt;
&lt;p&gt;We can see the Jaw and Eyes are assigned by the wrong components. As mentioned above, we can fix them by assigning the right corresponding components manually (e.g. eye_light_L will be replaced with eye_L). If the bone mappings are all right, click &lt;code&gt;Done&lt;/code&gt; button to proceed to the next step.&lt;/p&gt;
&lt;h3 id=&#34;4-adjust-the-model-data-and-export-it-as-vrm-from-menu-normalization-processing&#34;&gt;4. Adjust the model data and export it as VRM from menu（normalization processing）&lt;/h3&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_scene.png&#34; /&gt;
&lt;p&gt;Now click the model in the Hierarchy window, you shall see sub-components attached to this model. Please click any of them. We are going to check and adjust the items listed below:&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/initial_position_rotation.jpg&#34; alt=&#34;initial_position_rotation&#34; width=&#34;800&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;Model Position
&lt;ul&gt;
&lt;li&gt;The model should be placed at the origin&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Model Scale
&lt;ul&gt;
&lt;li&gt;1.0 = 1m&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Model Pose
&lt;ul&gt;
&lt;li&gt;The model should face towards +Z(axis) direction&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Texture（material / shader）
&lt;ul&gt;
&lt;li&gt;The shaders listed below are &lt;strong&gt;highly recommended&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;PBR
&lt;ul&gt;
&lt;li&gt;Standard shader (Unity standard)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Unlit type shader
&lt;ul&gt;
&lt;li&gt;VRM/UnlitTexture (same as Unit/Texture)&lt;/li&gt;
&lt;li&gt;VRM/UnlitCutout (same as Unit/Coutout)&lt;/li&gt;
&lt;li&gt;VRM/UnlitTransparent (same as Unit/Transparent)&lt;/li&gt;
&lt;li&gt;VRM/UnlitTransparentZWrite (Alpha blending and ZWrite are available. It is assumed to be applied to semi-transparent objects)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Toon shader
&lt;ul&gt;
&lt;li&gt;VRM/MToon (lighting supported toon shader）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/shader_option.jpg&#34; alt=&#34;shader_option&#34; width=&#34;800&#34; /&gt;
&lt;p&gt;Note that if the materials are not assigned or you want to change them, click the rightmost icon of &lt;code&gt;Element X&lt;/code&gt; to select available materials in your computer. There are several parameters that you can adjust rendering effects based on what shader you select. Here we select &lt;code&gt;VRM/MToon&lt;/code&gt; as an example as shown below. Please refer to &lt;a href=&#34;../univrm/shaders/mtoon/&#34;&gt;MToon&lt;/a&gt; for more information.&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/MToonMaterialSetting.png&#34; alt=&#34;MToonMaterialSetting&#34; width=&#34;700&#34; /&gt;
&lt;p&gt;After adjustments are completed, select the model in &lt;code&gt;Hierarchy&lt;/code&gt; window and export it from&lt;code&gt;VRM -&amp;gt; UniVRM-0.56.3 -&amp;gt; Export humanoid&lt;/code&gt;.&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/UniVRMExportHumanoid.png&#34; alt=&#34;UniVRMExportHumanoid&#34; width=&#34;400&#34; /&gt;
&lt;p&gt;Enter your name in the &lt;code&gt;Author&lt;/code&gt; field and click the &lt;code&gt;Export&lt;/code&gt; button. The VRM file can then be created. To easily track this file, it is recommended to name the file like this: &amp;ldquo;Model_Name_Normalized.vrm&amp;rdquo;. The file will be saved in the &lt;code&gt;Assets&lt;/code&gt; folder by default. The details for export settings &lt;a href=&#34;../univrm/univrm_export&#34;&gt;can be found here&lt;/a&gt;.&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/export_dialog_56.jpg&#34; alt=&#34;vrm export&#34; width=&#34;600&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;Force T Pose
&lt;ul&gt;
&lt;li&gt;Force the model pose to become &lt;a href=&#34;../dev/univrm-0.xx/vrm/vrm_tpose/&#34;&gt;T-Pose&lt;/a&gt; before removing rotation / scaling.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Pose Freeze
&lt;ul&gt;
&lt;li&gt;Whether the rotation / scaling removal processing should be performed. This is &lt;strong&gt;the process of normalizing model&lt;/strong&gt; for conforming to the VRM rules. Please make sure to check the boxes at the &lt;strong&gt;first time of use&lt;/strong&gt;. After this process is done, all the components can work correctly.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Details about model&amp;rsquo;s T-Pose normalization &lt;a href=&#34;../univrm/settings/t_pose/&#34;&gt;can be found here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;5-import-the-vrm-file&#34;&gt;5. Import the VRM file&lt;/h3&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_prefab_en.png&#34; /&gt;
&lt;p&gt;&lt;strong&gt;Drag and drop the VRM file (~.vrm) from step 4 into Assets folder&lt;/strong&gt;. The &lt;strong&gt;prefab&lt;/strong&gt; file of the imported VRM model data can be automatically generated.&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_scene2.png&#34; /&gt;
&lt;p&gt;Now remove the model data (step 4), and &lt;strong&gt;drag and drop the prefab file to the Hierarchy window&lt;/strong&gt;. Normalized model data such as mesh, etc. can then be shown.&lt;/p&gt;
&lt;h3 id=&#34;6-custom-setting-in-vrm&#34;&gt;6. Custom setting in VRM&lt;/h3&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_settings.png&#34; /&gt;
&lt;p&gt;The VRM model&amp;rsquo;s information will be shown in the Inspector window once the root of the model data (step 5) in &lt;code&gt;Hierarchy&lt;/code&gt; is selected. In addition, the &lt;strong&gt;spring bone (object swaying) settings are available in &amp;ldquo;secondary&amp;rdquo;&lt;/strong&gt;. Please at least fill in title, author, license information. &lt;strong&gt;Specially, license information is crucial!&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Information&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Title
&lt;ul&gt;
&lt;li&gt;Avatar model name (any input)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Version
&lt;ul&gt;
&lt;li&gt;Avatar model version (any input)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Author
&lt;ul&gt;
&lt;li&gt;Author name&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Contact Information
&lt;ul&gt;
&lt;li&gt;Author contact information&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Reference
&lt;ul&gt;
&lt;li&gt;Original / Related works of this avatar, if any&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;License&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Personation / Characterization Permission&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A person who can perform with this avatar
&lt;ul&gt;
&lt;li&gt;Only Author&lt;/li&gt;
&lt;li&gt;Explicitly Licensed Person&lt;/li&gt;
&lt;li&gt;Everyone&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Violent acts using this avatar
&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Sexuality acts using this avatar
&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;For commercial use
&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Other License Url
&lt;ul&gt;
&lt;li&gt;If there are any conditions not mentioned above, put the URL link of the license document here&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Redistribution / Modifications License&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;License Type&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Redistribution Prohibited&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/deed.en&#34; target=&#34;_blank&#34;&gt;Copyright wavier (CC0)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY License(CC_BY)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC License(CC_BY_NC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY SA License(CC_BY_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC SA License(CC_BY_NC_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nd/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY ND License(CC_BY_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC ND License(CC_BY_NC_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Other License Url&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If “Other” is selected, put the URL link of the license document here&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that starting from Unity version 2018.3, the interface has slightly changes:&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/NewInterfaceForPrefab.png&#34; alt=&#34;NewInterfaceForPrefab&#34; width=&#34;700&#34; /&gt;
&lt;p&gt;Now the basic model conversion is finished. To complete the whole setup, please set up the items listed below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../univrm/components/univrm_blendshape/&#34;&gt;Expression and lip-sync (BlendShape)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../univrm/components/univrm_firstperson/&#34;&gt;First-person point of view (Get rid of model&amp;rsquo;s head for VR applications)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../univrm/components/univrm_lookat/&#34;&gt;Movable range for eye gaze/eyeball controlled by bone or BlendShape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../univrm/components/univrm_secondary/&#34;&gt;Spring bone (SpringBone/SpringBoneCollider)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-check-model-expressions-movements-in-play-mode-if-necessary&#34;&gt;7. Check model expressions/movements in play mode（If necessary）&lt;/h3&gt;
&lt;p&gt;Set &lt;code&gt;AnimationClip/AnimationController&lt;/code&gt; and set &lt;a href=&#34;../univrm/components/univrm_lookat/#target&#34;&gt;viewing target&lt;/a&gt; in&lt;code&gt;VRMLookAtHead -&amp;gt; Target&lt;/code&gt;(the head orientation towards the target). For example, you can create a cube as a target from &lt;code&gt;GameObject -&amp;gt; 3D Object -&amp;gt; Cube&lt;/code&gt;. Next, serach head component in&lt;code&gt;VRMLookAtHead -&amp;gt; Head&lt;/code&gt;. After the corresponding components are assigned, check the model&amp;rsquo;s motion in the scene. The model will track the target position in Play Mode. You can drag the object position to test whether the model&amp;rsquo;s eyes are tracking the object in (near) real-time. The model&amp;rsquo;s close-up face can be viewed in Inspector window.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/LookAtTarget.png&#34; alt=&#34;LookAtTarget&#34; width=&#34;900&#34; /&gt;
&lt;br&gt;
&lt;br&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/TargetTracking.png&#34; alt=&#34;TargetTracking&#34; width=&#34;500&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;To test the model&amp;rsquo;s expressions, fairly simple test scripts &amp;ldquo;AIUEO&amp;rdquo; and &amp;ldquo;Blinker&amp;rdquo; are provided. After setting up &lt;a href=&#34;../univrm/components/univrm_blendshape/#vrmblendshapeproxy&#34;&gt;BlendShape&lt;/a&gt;, click &lt;code&gt;Add Component&lt;/code&gt; at the bottom of model&amp;rsquo;s Inspector window to add &amp;ldquo;AIUEO&amp;rdquo; script or drag the script directly to Inspector. After &amp;ldquo;AIUEO&amp;rdquo; is set, lip synchronization animation that &amp;ldquo;aa&amp;rdquo;, &amp;ldquo;ih&amp;rdquo;, &amp;ldquo;ou&amp;rdquo;, &amp;ldquo;E&amp;rdquo;, &amp;ldquo;oh&amp;rdquo; switches in turn can be created in the scene. Similarly, if &amp;ldquo;Blinker&amp;rdquo; is set, eye blink animation that plays periodically can be created. See &lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases&#34; target=&#34;_blank&#34;&gt;runtime VRM loader sample&lt;/a&gt; (download UniVRM-RuntimeLoaderSample-0.XX) for more details on how to use these scripts.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeProxy.png&#34; alt=&#34;BlendShapeProxy&#34; width=&#34;650&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Double click the&lt;code&gt;BlendShapeAvatar&lt;/code&gt; field to set up expressions for the 3D model&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/AddExpressionScripts.png&#34; alt=&#34;AddExpressionScripts&#34; width=&#34;650&#34; /&gt;
&lt;br&gt;
&lt;br&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/InspectorFaceView.png&#34; alt=&#34;InspectorFaceView&#34; width=&#34;400&#34; /&gt;
&lt;/p&gt;
&lt;h3 id=&#34;8-export-the-adjusted-vrm-model&#34;&gt;8. Export the adjusted VRM model&lt;/h3&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/UniVRMExportHumanoid.png&#34; alt=&#34;UniVRMExportHumanoid&#34; width=&#34;400&#34; /&gt;
&lt;p&gt;After the adjustment is completed, select the model data in &lt;code&gt;Hierarchy&lt;/code&gt; and again export the model from&lt;code&gt;VRM -&amp;gt; UniVRM-0.56.3 -&amp;gt; Export humanoid&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This time &lt;strong&gt;please do not check &amp;ldquo;Force T Pose&amp;rdquo; and &amp;ldquo;Pose Freeze&amp;rdquo;&lt;/strong&gt;. They are only used for the first time (normalization processing). Name the file and export the adjusted VRM model.&lt;/p&gt;
&lt;h3 id=&#34;done&#34;&gt;Done！&lt;/h3&gt;
&lt;p&gt;Your VRM file is good to go. Let’s try to import the VRM file into applications that support VRM!&lt;/p&gt;</description></item><item><title>Docs: Import VRM Model at Runtime</title><link>https://vrm.dev/en/dev/univrm-0.xx/programming/univrm_import_runtime/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-0.xx/programming/univrm_import_runtime/</guid><description>
&lt;p&gt;Examples of importing the VRM model with the latest version &lt;a href=&#34;../runtime_import/&#34;&gt;can be found here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The followings are the methods to import a VRM model at runtime in Unity:&lt;/p&gt;
&lt;h2 id=&#34;open-vrm-from-a-file-path&#34;&gt;Open VRM from a file path&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;sample.vrm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VRM&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VRMImporter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LoadFromPath&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Debug&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LogFormat&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;loaded {0}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;open-vrm-asynchronously-from-a-file-path&#34;&gt;Open VRM asynchronously from a file path&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;sample.vrm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;VRMImporter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LoadVrmAsync&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;go&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Debug&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LogFormat&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;loaded {0}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;open-vrm-from-a-byte-array&#34;&gt;Open VRM from a byte array&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;sample.vrm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ReadAllBytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VRMImporter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LoadFromBytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;open-vrm-asynchronously-from-a-byte-array&#34;&gt;Open VRM asynchronously from a byte array&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;VRMImporter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LoadVrmAsync&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;go&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Debug&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LogFormat&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;loaded {0}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;get-the-information-form-vrm&#34;&gt;Get the information form VRM&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#if UNITY_STANDALONE_WIN
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;FileDialogForWindows&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;FileDialog&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;open VRM&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;.vrm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#else
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Application&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dataPath&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/default.vrm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#endif
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Get a byte array
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ReadAllBytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VRMImporterContext&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Get JSON in GLB format and parse it
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ParseGlb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Get the meta
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ReadMeta&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Debug&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LogFormat&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;meta: title:{0}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// You can access the entire parsed GLTF here
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;vrm&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GLTF&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Convert the parsed JSON to the Scene Object
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;m_loadAsync&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Run asynchronously
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;now&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Time&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;VRMImporter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LoadVrmAsync&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;delta&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Time&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Debug&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LogFormat&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;LoadVrmAsync {0:0.0} seconds&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;delta&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;OnLoaded&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;});&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Run synchronously
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VRMImporter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LoadFromBytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;OnLoaded&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Root&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;get-the-thumbnail-from-v0-37&#34;&gt;Get the thumbnail (From v0.37)&lt;/h2&gt;
&lt;p&gt;A thumbnail texture can be created by passing arguments to ReadMeta.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ReadMeta&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Make a thumbnail texture
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Texture2D&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;thumbnail&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Thumbnail&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Docs: MToon</title><link>https://vrm.dev/en/univrm/shaders/mtoon/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/univrm/shaders/mtoon/</guid><description>
&lt;p&gt;&lt;a href=&#34;../../univrm_install/#shader-preloading-setting&#34;&gt;Shader preloading setting&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://www.slideshare.net/VirtualCast/vrm-mtoon&#34; target=&#34;_blank&#34;&gt;How to use MToon&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;about-mtoon&#34;&gt;About MToon&lt;/h1&gt;
&lt;p&gt;MToon aims for making Japanese anime expressions. It is achieved by mixing &lt;code&gt;Lit Color&lt;/code&gt; and &lt;code&gt;Shade Color&lt;/code&gt; based on Lighting parameters and light source environment.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/mtoon_about.png&#34; alt=&#34;alicia MToon&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Apply MToon to the 3D model&lt;code&gt;Alicia&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;for-users-who-want-to-have-a-quick-setup&#34;&gt;For users who want to have a quick setup&lt;/h1&gt;
&lt;h2 id=&#34;common-items&#34;&gt;Common items&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Select the target material and change the shader to &lt;code&gt;VRM/MToon&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click the shader panel and set the same texture in &lt;code&gt;Color-&amp;gt;Lit Color, Alpha&lt;/code&gt; and &lt;code&gt;Color-&amp;gt;Shade Color&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set white color in &lt;code&gt;Color-&amp;gt;Lit Color, Alpha&lt;/code&gt; and set the preference shade color in &lt;code&gt;Color-&amp;gt;Shade Color&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set the preference value in &lt;code&gt;Shading-&amp;gt;Toony&lt;/code&gt;. Make the lit color and shade color sharp:&lt;code&gt;1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set the texture in &lt;code&gt;Rim-&amp;gt;Additive&lt;/code&gt; (equivalent to &lt;code&gt;sphere map&lt;/code&gt; or &lt;code&gt;Matcap&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;If outline is necessary, select &lt;code&gt;WorldCoordinates&lt;/code&gt; in &lt;code&gt;Outline-&amp;gt;Width-&amp;gt;Mode&lt;/code&gt;. Select &lt;code&gt;None&lt;/code&gt; if outline is not needed&lt;/li&gt;
&lt;li&gt;Set the value with good appearance in &lt;code&gt;Outline-&amp;gt;Width-&amp;gt;Width&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;general-material&#34;&gt;General material&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Choose &lt;code&gt;Shading Shift&lt;/code&gt; and set &lt;code&gt;0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Choose &lt;code&gt;Shading Toony-&amp;gt;Shadow Receive Multiplier&lt;/code&gt; and set &lt;code&gt;1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;set-materials-not-being-shadowed-too-much-such-as-the-character-s-face&#34;&gt;Set materials not being shadowed too much such as the character&amp;rsquo;s face&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Choose &lt;code&gt;Shading Shift&lt;/code&gt; and set a negative value&lt;/li&gt;
&lt;li&gt;Choose &lt;code&gt;Shading Toony-&amp;gt;Shadow Receive Multiplier&lt;/code&gt; and set &lt;code&gt;0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;setting-items&#34;&gt;Setting items&lt;/h1&gt;
&lt;h2 id=&#34;preliminary&#34;&gt;Preliminary&lt;/h2&gt;
&lt;p&gt;Select the target material and change the shader to VRM/MToon.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/set_mtoon.png&#34; alt=&#34;select MToon&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Change the material shader to VRM/MToon&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;rendering&#34;&gt;Rendering&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/mtoon_inspector_rendering.png&#34; alt=&#34;MToon Rendering&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The items included in the Rendering Inspector&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Set the rendering type and cull mode in &lt;code&gt;Rendering&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;rendering-type&#34;&gt;Rendering Type&lt;/h3&gt;
&lt;p&gt;Set whether the material is opaque or semi-transparent.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Opaque
&lt;ul&gt;
&lt;li&gt;For rendering performance, it is recommended to set &lt;code&gt;Opaque&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cutout&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Although it is opaque, it refers to the alpha value in &lt;code&gt;Color-&amp;gt;Lit Color, Alpha&lt;/code&gt;. Therefore, it skips rendering for places having smaller value than &lt;code&gt;Color-&amp;gt;Alpha-&amp;gt;Cutoff&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Transparent&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The opacity based on the alpha value in &lt;code&gt;Color-&amp;gt;Lit Color, Alpha&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The downside is that outline rendering cannot be performed correctly.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cull-mode&#34;&gt;Cull Mode&lt;/h3&gt;
&lt;p&gt;Set which side of the polygon to be rendered.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Back
&lt;ul&gt;
&lt;li&gt;Render the front side. Generally selecting &amp;ldquo;Back&amp;rdquo; is recommended.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Front
&lt;ul&gt;
&lt;li&gt;Render the back side.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;None
&lt;ul&gt;
&lt;li&gt;Render the both sides.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;alpha&#34;&gt;Alpha&lt;/h3&gt;
&lt;p&gt;Required if choosing &lt;code&gt;Rendering Type-&amp;gt;Cutout&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cutoff (&lt;code&gt;Color-&amp;gt;Alpha&lt;/code&gt;)
&lt;ul&gt;
&lt;li&gt;Set the threshold value for not rendering.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;color&#34;&gt;Color&lt;/h2&gt;
&lt;p&gt;Set the rendering color.
The texture and color are multiplied.
Set the color hit by the light ray in &lt;code&gt;Lit Color, Alpha&lt;/code&gt; and set the color not hit by the light ray in &lt;code&gt;Shade Color&lt;/code&gt;.&lt;br /&gt;
Also, set the the alpha value in &lt;code&gt;Lit Color, Alpha&lt;/code&gt; for opacity information.&lt;/p&gt;
&lt;h2 id=&#34;lighting&#34;&gt;Lighting&lt;/h2&gt;
&lt;h3 id=&#34;shading-shift&#34;&gt;Shading Shift&lt;/h3&gt;
&lt;p&gt;Adjust the threshold value of the lit color and shade color for how the light ray hits the object.
When the value is &lt;code&gt;0&lt;/code&gt;, it is the normal lighting.
When the value is negative, it becomes the lighting with anime-like, wide range of lit color.
It is necessary to disable the self-shadow with setting the value to &lt;code&gt;0&lt;/code&gt; in &lt;code&gt;Shadow Receive Multiplier&lt;/code&gt; according to the displayed warning message.&lt;/p&gt;
&lt;h3 id=&#34;shading-toony&#34;&gt;Shading Toony&lt;/h3&gt;
&lt;p&gt;Set whether to smoothly change the lit color and shade color around the threshold value in &lt;code&gt;Shade Shift&lt;/code&gt;.
When the value is &lt;code&gt;0&lt;/code&gt;, it becomes realistically smooth like a general Lambert model.
When the value is &lt;code&gt;1&lt;/code&gt;, it becomes animation-style lighting. The lit color and shade color change rapidly around the threshold value.&lt;/p&gt;
&lt;h3 id=&#34;shadow-receive-multiplier&#34;&gt;Shadow Receive Multiplier&lt;/h3&gt;
&lt;p&gt;Set the influence of the self-shadow and shadow.
&lt;code&gt;0&lt;/code&gt;: Not affected.
&lt;code&gt;1&lt;/code&gt;: Affected.&lt;/p&gt;
&lt;h3 id=&#34;lightcolor-attenuation&#34;&gt;LightColor Attenuation&lt;/h3&gt;
&lt;p&gt;Set the influence of the light source color.
&lt;code&gt;0&lt;/code&gt;: Affected by the light source color.
&lt;code&gt;1&lt;/code&gt;: Not affected by the light source color. It only reflects the luminance of the light source color.&lt;/p&gt;
&lt;h3 id=&#34;rim-additive&#34;&gt;Rim Additive&lt;/h3&gt;
&lt;p&gt;Display additional light sources based on the relationship between the camera and the normal.
In general it is called sphere map or matcap.&lt;/p&gt;
&lt;h3 id=&#34;emission&#34;&gt;Emission&lt;/h3&gt;
&lt;p&gt;Set the constant color regardless of the light source environment.&lt;/p&gt;
&lt;h3 id=&#34;normal-map&#34;&gt;Normal Map&lt;/h3&gt;
&lt;p&gt;Set the normal map.
Set the strength value in the box on the right.&lt;/p&gt;
&lt;h2 id=&#34;outline&#34;&gt;Outline&lt;/h2&gt;
&lt;p&gt;Set the outline.&lt;/p&gt;
&lt;h3 id=&#34;width-mode&#34;&gt;Width Mode&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;None
&lt;ul&gt;
&lt;li&gt;The outline is not rendered&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;WorldCoordinates
&lt;ul&gt;
&lt;li&gt;Render the outline of the constant width for the world coordinate&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ScreenCoordinates
&lt;ul&gt;
&lt;li&gt;Render the outline of the constant width for the screen coordinate&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;width&#34;&gt;Width&lt;/h3&gt;
&lt;p&gt;Set the width of the outline.
The unit of distance is meter when &lt;code&gt;Width Mode-&amp;gt;WorldCoordinates&lt;/code&gt; is chosen.&lt;/p&gt;
&lt;h3 id=&#34;color-mode&#34;&gt;Color Mode&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;FixedColor
&lt;ul&gt;
&lt;li&gt;Render with the fixed color&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;MixedLighting
&lt;ul&gt;
&lt;li&gt;Multiply the influence of Lighting&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;color-1&#34;&gt;Color&lt;/h3&gt;
&lt;p&gt;Set the outline color.&lt;/p&gt;
&lt;h3 id=&#34;color-lighting-mix&#34;&gt;Color Lighting Mix&lt;/h3&gt;
&lt;p&gt;Set the multiplier coefficient when &lt;code&gt;Color Mode-&amp;gt;MixedLighting&lt;/code&gt; is chosen.&lt;/p&gt;</description></item><item><title>Docs: Install UniVRM with UPM</title><link>https://vrm.dev/en/univrm/univrm_upm/</link><pubDate>Tue, 07 Jul 2020 18:33:59 +0900</pubDate><guid>https://vrm.dev/en/univrm/univrm_upm/</guid><description>
&lt;h2 id=&#34;univrm-0-xx-s-unitypackage&#34;&gt;UniVRM-0.XX&amp;rsquo;s UnityPackage&lt;/h2&gt;
&lt;p&gt;Starting from UniVRM-0.56, UniVRM can be imported with Unity Package Manager.&lt;/p&gt;
&lt;p&gt;Requirement: &lt;code&gt;Unity 2019.3.4f1 or later version&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;how-to-use&#34;&gt;How to use&lt;/h3&gt;
&lt;p&gt;To open UPM, go to &lt;code&gt;Windows&lt;/code&gt; -&amp;gt; &lt;code&gt;Package Manager&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/menu_packagemanager.jpg&#34; /&gt;
&lt;hr&gt;&lt;/p&gt;
&lt;p&gt;Select &lt;code&gt;add package from git URL&lt;/code&gt; to import the target package specified by its git url.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/from_git.jpg&#34; /&gt;
&lt;hr&gt;&lt;/p&gt;
&lt;p&gt;Whenever a new UniVRM version comes out, we will post git urls associated with this release.&lt;/p&gt;
&lt;p&gt;For example, the git urls of &lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/tag/v0.56.3&#34; target=&#34;_blank&#34;&gt;v0.56.3&lt;/a&gt; are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders#v0.56.3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRM#v0.56.3&lt;/code&gt; =&amp;gt; depends on VRMShaders&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since there is no function that can automatically download the dependencies between packages, please add above git urls in order.&lt;/p&gt;
&lt;p&gt;By changing the version number, You can switch to different version based on your needs.&lt;/p&gt;
&lt;h4 id=&#34;add-dependencies-in-packages-manifest-json&#34;&gt;Add dependencies in Packages/manifest.json&lt;/h4&gt;
&lt;p&gt;An alternative way is to add necessary dependencies right in Packages/manifest.json.
Open manifest.json with text/code editor and paste the following contents (example of &lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/tag/v0.56.3&#34; target=&#34;_blank&#34;&gt;v0.56.3&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders#v0.56.3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.univrm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRM#v0.56.3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The hash values in &lt;code&gt;lock&lt;/code&gt; can be updated automatically by Unity, there is no need to manually change them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;lock&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;revision&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;v0.56.3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;hash&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;3b68eb7f99bfe78ea9c83ea75511282ef1782f1a&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.univrm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;revision&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;v0.56.3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;hash&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;3b68eb7f99bfe78ea9c83ea75511282ef1782f1a&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, if you want to switch to the specific commit, you can manually change the hash value or append the specific commit in &lt;code&gt;dependencies&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders#155acf354735288db0335878179f483901541851&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.univrm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRM#155acf354735288db0335878179f483901541851&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Docs: First-Person View</title><link>https://vrm.dev/en/univrm/components/univrm_firstperson/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/univrm/components/univrm_firstperson/</guid><description>
&lt;h1 id=&#34;vrmfirstperson&#34;&gt;VRMFirstPerson&lt;/h1&gt;
&lt;p&gt;Settings related to first-person perspectives.&lt;/p&gt;
&lt;h2 id=&#34;firstpersonbone&#34;&gt;FirstPersonBone&lt;/h2&gt;
&lt;p&gt;FirstPersonBone keeps track of a VR headset in a first-person view.
Normally the head bone is assigned as FirstPersonBone.&lt;/p&gt;
&lt;h2 id=&#34;firstpersonoffset&#34;&gt;FirstPersonOffset&lt;/h2&gt;
&lt;p&gt;The offset from the tracking position to the FirstPersonBone position. We assume the default value [0, 0.06, 0] is the offset between the head and the middle of the eyes.&lt;/p&gt;
&lt;h2 id=&#34;renderers&#34;&gt;Renderers&lt;/h2&gt;
&lt;p&gt;The settings for controlling mesh rendering on/off in a first-person view.&lt;/p&gt;
&lt;p&gt;When a VRM model is used in VR applications, the user may see the model&amp;rsquo;s head inside inadvertently, which is not a good experience of being immersed in VR worlds. To address this problem, we provide the function &lt;strong&gt;VRMFirstPerson&lt;/strong&gt; which can hide the model&amp;rsquo;s head in the first-person view. To test out first-person mode in Unity project, set up &lt;a href=&#34;../../../dev/univrm-0.xx/programming/univrm_use_firstperson/#specify-the-additional-render-layers-for-the-application&#34;&gt;render layer&lt;/a&gt; in the inspector window and call &lt;a href=&#34;../../../dev/univrm-0.xx/programming/univrm_use_firstperson/#call-setup-function-at-runtime-and-set-layermask-in-camera&#34;&gt;first-person setup function&lt;/a&gt;. Then, go to&lt;code&gt;camera-&amp;gt;cull mask&lt;/code&gt;and select&lt;code&gt;EVERYTHING&lt;/code&gt;but&lt;code&gt;THIRDPERSON_ONLY_LAYER&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;the-case-for-the-head-being-separated&#34;&gt;The case for the head being separated&lt;/h3&gt;
&lt;p&gt;Set &lt;strong&gt;ThirdPersonOnly&lt;/strong&gt; on the head.
Set &lt;strong&gt;Both&lt;/strong&gt; on the rest parts.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/firstperson.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;For a VRM model (below), the head is set to &lt;strong&gt;ThirdPersonOnly&lt;/strong&gt; and the rest parts of the body are set to &lt;strong&gt;Both&lt;/strong&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/firstperson_runtime.png&#34; alt=&#34;firstperson&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Example: The meshes set to &lt;strong&gt;ThirdPersonOnly&lt;/strong&gt; are not displayed in the first-person view.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;the-case-for-the-head-not-being-separated&#34;&gt;The case for the head not being separated&lt;/h3&gt;
&lt;p&gt;Please set &lt;strong&gt;Auto&lt;/strong&gt;.
Except the model&amp;rsquo;s head, the other parts are copied and treated as &lt;strong&gt;FirstPersonOnly&lt;/strong&gt;.
The original model is treated as &lt;strong&gt;ThirdPersonOnly&lt;/strong&gt;.
The parts regarding the head bone and its descendants with weights will be eliminated.&lt;/p&gt;
&lt;h3 id=&#34;the-case-for-no-particular-setting&#34;&gt;The case for no particular setting&lt;/h3&gt;
&lt;p&gt;Please set &lt;strong&gt;Both&lt;/strong&gt;.&lt;/p&gt;</description></item><item><title>Docs: How to view VRM file</title><link>https://vrm.dev/en/how_to_view_vrm/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/how_to_view_vrm/</guid><description>
&lt;h2 id=&#34;import-vrm-file-into-vrm-viewer&#34;&gt;Import VRM file into VRM Viewer&lt;/h2&gt;
&lt;p&gt;Download VRM Viewer from &lt;a href=&#34;https://github.com/vrm-c/UniVRMTest/releases&#34; target=&#34;_blank&#34;&gt;UniVRMTest/releases&lt;/a&gt;. Next, run the program and click&lt;code&gt;VRM Model&lt;/code&gt;. Then, select a VRM model available on your computer. The VRM model can be shown in the scene. Other VRM viewers &lt;a href=&#34;../vrm_applications/#viewer&#34;&gt;can be found here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;import-vrm-file-into-unity-project&#34;&gt;Import VRM file into Unity Project&lt;/h2&gt;
&lt;p&gt;Importing VRM file by this way is a little tedious but you can see the information of a VRM model:&lt;/p&gt;
&lt;h3 id=&#34;1-create-an-empty-project-in-unity&#34;&gt;1. Create an empty project in Unity&lt;/h3&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/unity_new_project.png&#34; /&gt;
&lt;p&gt;Create a new project at the start page (&lt;code&gt;New -&amp;gt; Create project&lt;/code&gt;).&lt;/p&gt;
&lt;h3 id=&#34;2-import-univrm-package-into-the-created-project&#34;&gt;2. Import UniVRM package into the created project&lt;/h3&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/package_import.png&#34; alt=&#34;package_import&#34; /&gt;
&lt;p&gt;Download the latest unitypackage (UniVRM-0.XX) from &lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases&#34; target=&#34;_blank&#34;&gt;UniVRM/releases&lt;/a&gt; and import it into the current project (&lt;code&gt;Assets -&amp;gt; Import Package -&amp;gt; Custom Package&lt;/code&gt;). The path of imported files is&lt;code&gt;../Assets/VRM&lt;/code&gt;. &lt;strong&gt;It is recommended to delete existing VRM folder included VRM in advance before package import&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;3-import-vrm-file-into-unity&#34;&gt;3. Import VRM file into Unity&lt;/h3&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_prefab_en.png&#34; /&gt;
&lt;p&gt;&lt;strong&gt;Drag and drop VRM file (~.vrm) into Assets folder&lt;/strong&gt;. The &lt;strong&gt;prefab&lt;/strong&gt; file of the imported VRM model data can be automatically generated.&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_scene2.png&#34; /&gt;
&lt;p&gt;&lt;strong&gt;Drag and drop the prefab file under the scene in the Hierarchy window&lt;/strong&gt;. The model data can be visualized as shown in the following image:&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_settings.png&#34; /&gt;
&lt;p&gt;&lt;strong&gt;The VRM model&amp;rsquo;s information will be shown in the Inspector window&lt;/strong&gt; once the GameObject of the model data in&lt;code&gt;Hierarchy&lt;/code&gt;is selected.&lt;/p&gt;
&lt;h2 id=&#34;import-vrm-file-into-3d-builder&#34;&gt;Import VRM file into 3D Builder&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_3dbuilder.png&#34; /&gt;
&lt;p&gt;&lt;strong&gt;Another simple way to visualize a VRM model or check whether a VRM file is viable is using Windows 3D Builder&lt;/strong&gt;. Please change file extension from ~. vrm to ~.glb. However, custom settings for VRM model will not be reflected.&lt;/p&gt;
&lt;h2 id=&#34;upload-download-vrm-file&#34;&gt;Upload / Download VRM file&lt;/h2&gt;
&lt;p&gt;Currently you can submit your VRM files to &lt;a href=&#34;https://seed.online/&#34; target=&#34;_blank&#34;&gt;THE SEED ONLINE&lt;/a&gt;, &lt;a href=&#34;https://hub.vroid.com/&#34; target=&#34;_blank&#34;&gt;VRoid Hub&lt;/a&gt; or &lt;a href=&#34;https://3d.nicovideo.jp/&#34; target=&#34;_blank&#34;&gt;Nikoni 3D&lt;/a&gt;. For Nikoni 3D, the submitted VRM file &lt;a href=&#34;https://3d.nicovideo.jp/search?word_type=tag&amp;amp;word=VRM&#34; target=&#34;_blank&#34;&gt;can be found here&lt;/a&gt;. Please check license information and try out those VRM models.
Also, when uploading a VRM file to Nikoni 3D, there is an option「バーチャルキャスト連携」(virtual cast cooperation) which can let users use the VRM model in &lt;a href=&#34;https://virtualcast.jp/&#34; target=&#34;_blank&#34;&gt;Virtual Cast&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Docs: Use BlendShape</title><link>https://vrm.dev/en/dev/univrm-0.xx/programming/univrm_use_blendshape/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-0.xx/programming/univrm_use_blendshape/</guid><description>
&lt;h2 id=&#34;apply-blendshape-from-a-script&#34;&gt;Apply BlendShape from a script&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetComponent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VRMBlendShapeProxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;();&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Call enum
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ImmediatelySetValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BlendShapePreset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.0f&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Assign a value between 0 and 1
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Call string
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ImmediatelySetValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.0f&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;apply-multiple-blendshapes-at-once&#34;&gt;Apply multiple BlendShapes at once&lt;/h2&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;p&gt;For Blink_L&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MeshA eye_L=100&lt;/li&gt;
&lt;li&gt;MeshA eye_R=1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For Blink_R&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MeshA eye_L=1&lt;/li&gt;
&lt;li&gt;MeshA eye_R=100&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If both BlendShapes are defined and enabled as shown below, later only those items set before can be applied.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ImmediatelySetValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BlendShapePreset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Blink_L&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.0f&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ImmediatelySetValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BlendShapePreset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Blink_R&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.0f&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case, the following codes are workable:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Keep the value and wait for Apply function
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AccumerateValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BlendShapePreset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Blink_L&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.0f&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AccumerateValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BlendShapePreset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Blink_R&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.0f&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Apply all the BlendShapes at once
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Apply&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetValues&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Dictionary&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BlendShapeKey&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;BlendShapeKey&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BlendShapePreset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Blink_L&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.0f&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;BlendShapeKey&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BlendShapePreset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Blink_R&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.0f&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Docs: UniVRM Coordinate Transformations</title><link>https://vrm.dev/en/dev/univrm-0.xx/programming/univrm_coordinate/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-0.xx/programming/univrm_coordinate/</guid><description>
&lt;p&gt;UniVRM automatically performs the coordinate transformation with GLTF during import / export.&lt;/p&gt;
&lt;h2 id=&#34;vrm-coordinate-system&#34;&gt;VRM coordinate system&lt;/h2&gt;
&lt;p&gt;Since VRM is an extension of GLTF, it conforms to the coordinate system of GLTF.
It is right-handed Y-UP (OpenGL standard) coordinate system.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Right: X+&lt;/li&gt;
&lt;li&gt;Up: Y+&lt;/li&gt;
&lt;li&gt;In front: Z-&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;unity-coordinate-system&#34;&gt;Unity coordinate system&lt;/h2&gt;
&lt;p&gt;Left-handed Y-UP coordinate system。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Right:X+&lt;/li&gt;
&lt;li&gt;Up:Y+&lt;/li&gt;
&lt;li&gt;In front:Z+ (+- is inverted)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;transformation-matrix&#34;&gt;Transformation matrix&lt;/h2&gt;
&lt;p&gt;Z-axis is inverted.&lt;/p&gt;
&lt;h3 id=&#34;vector3-position-normal-etc&#34;&gt;Vector3 (Position, Normal, etc.)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Vector3&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ReverseZ&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Vector3&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Vector3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;z&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;quaternion-rotation&#34;&gt;Quaternion (Rotation)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Quaternion&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ReverseZ&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Quaternion&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;q&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;float&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;angle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Vector3&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;axis&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;q&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ToAngleAxis&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;angle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;axis&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Quaternion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AngleAxis&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;angle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ReverseZ&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;axis&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;matrix-bindmatrices&#34;&gt;Matrix (BindMatrices)&lt;/h3&gt;
&lt;p&gt;Not working well if a scale value is contained.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Matrix4x4&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ReverseZ&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Matrix4x4&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#if UNITY_2017_1_OR_NEWER
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetTRS&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetColumn&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ReverseZ&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rotation&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ReverseZ&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Vector3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;one&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#else
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetTRS&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ExtractPosition&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ReverseZ&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ExtractRotation&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ReverseZ&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Vector3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;one&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#endif
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Docs: Eye Control</title><link>https://vrm.dev/en/univrm/components/univrm_lookat/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/univrm/components/univrm_lookat/</guid><description>
&lt;h2 id=&#34;vrmlookathead&#34;&gt;VRMLookAtHead&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMLookAtHead.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VRMLookAtHead&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This component calculates the direction from the model&amp;rsquo;s head to the target.&lt;/p&gt;
&lt;h3 id=&#34;target&#34;&gt;Target&lt;/h3&gt;
&lt;p&gt;The target to be tracked by the model&amp;rsquo;s eyes. If a camera is set as Target, the model will always look at the camera.&lt;/p&gt;
&lt;h2 id=&#34;eye-control-with-bone-vrmlookatboneapplyer&#34;&gt;Eye control with bone: VRMLookAtBoneApplyer&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMLookAtBoneApplyer.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VRMLookAtBoneApplyer&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Apply the parameters of the calculated eye gaze direction of VRMLookAtHead to EyeBone.&lt;/p&gt;
&lt;h3 id=&#34;degreemapping&#34;&gt;DegreeMapping&lt;/h3&gt;
&lt;p&gt;Adjust angles when applying rotation to EyeBone.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HorizontalOuter: The angle limit of horizontally outward direction&lt;/li&gt;
&lt;li&gt;HorizontalInner: The angle limit of horizontally inward direction&lt;/li&gt;
&lt;li&gt;VerticalDown: The angle limit of vertically downward direction&lt;/li&gt;
&lt;li&gt;VerticalUp: The angle limit of vertically upward direction&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;eye-control-with-blendshape-vrmlookatblendshapeapplyer&#34;&gt;Eye control with BlendShape: VRMLookAtBlendShapeApplyer&lt;/h2&gt;
&lt;p&gt;The component for controlling the eyes with BlendShape.
Please delete VRMLookAtBoneApplyer and attach VRMLookAtBlendShapeApplyer instead.
Settings related to VRMLookAtBlendShape &lt;a href=&#34;../../settings/lookat_settings&#34;&gt;can be found here&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Docs: UniVRM workflow</title><link>https://vrm.dev/en/univrm/univrm_workflow/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/univrm/univrm_workflow/</guid><description>
&lt;h2 id=&#34;workflow&#34;&gt;Workflow&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/VRM_changeVRM_EN.png&#34; alt=&#34;vrm workflow&#34; /&gt;
&lt;h2 id=&#34;prepare-a-3d-model-that-can-be-handled-as-humanoid-in-unity&#34;&gt;Prepare a 3D model that can be handled as &amp;ldquo;Humanoid&amp;rdquo; in Unity&lt;/h2&gt;
&lt;p&gt;Prepare a 3D model that can be &lt;a href=&#34;https://docs.unity3d.com/2019.3/Documentation/Manual/HOWTO-importObject.html&#34; target=&#34;_blank&#34;&gt;imported&lt;/a&gt; into Unity such as FBX format. The model&amp;rsquo;s bones must be set.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/DragImportedModel.png&#34; alt=&#34;DragImported3DModel&#34; width=&#34;300&#34; /&gt;
&lt;br&gt;
&lt;br&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/ModelConversionMenu.png&#34; alt=&#34;ModelConversionMenu&#34; width=&#34;900&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;First, drag the imported humanoid 3D model from the Project window to the Hierarchy window. Click the 3D model in the Hierarchy window then you will see the menu as shown in the Figure above. Click &lt;code&gt;Select&lt;/code&gt; and then click &lt;code&gt;Rig&lt;/code&gt;. Set &lt;code&gt;Animation Type&lt;/code&gt; as &lt;code&gt;Humanoid&lt;/code&gt;, and then click &lt;code&gt;Configure&lt;/code&gt; button. A message box will pop up asking whether you want to save the current scene. Click &lt;code&gt;Save&lt;/code&gt; to save it.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/SetModelAsHumanoid.png&#34; alt=&#34;SetModelAsHumanoid&#34; width=&#34;900&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Select&lt;code&gt;Humanoid&lt;/code&gt; and click &lt;code&gt;Configure&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now you will see the bone mapping details for this model. Unity will perform auto-mapping for each bone initially. You can check the model&amp;rsquo;s Body, Head, etc. if an assigned component fits, the leftmost icon will show as green, otherwise it will show as red.&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/BoneMapping.png&#34; alt=&#34;BoneMapping&#34; width=&#34;600&#34; /&gt;
&lt;h3 id=&#34;correct-bone-mapping-with-rig-configuration&#34;&gt;Correct bone mapping with rig configuration&lt;/h3&gt;
&lt;p&gt;To corrent bone mapping errors, click rightmost icon for a bone that has the failure bone mapping and select a component you think it fits this bone. To re-map the bones automatically, simply click &lt;code&gt;Mapping&lt;/code&gt; in the lowerleft of the interface, click &lt;code&gt;clear&lt;/code&gt; and then click &lt;code&gt;Automap&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BoneAssignment.png&#34; alt=&#34;BoneAssignment&#34; width=&#34;900&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Choose a right component to fit a bone&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;However, in some cases the bone mapping results are not reasonable even all of them appear as green as shown in the figure below:&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/fix_eye.png&#34; /&gt;
&lt;p&gt;We can see the Jaw and Eyes are assigned by the wrong components. As mentioned above, we can fix them by assigning the right corresponding components manually (e.g. eye_light_L will be replaced with eye_L). If the bone mappings are all right, click &lt;code&gt;Done&lt;/code&gt; button to proceed to the next step.&lt;/p&gt;
&lt;h2 id=&#34;export-from-menu&#34;&gt;Export from menu&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/UniVRMExportHumanoid.png&#34; alt=&#34;UniVRMExportHumanoid&#34; width=&#34;400&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;In the Hierarchy window, if 3D model data with a setup-completed humanoid is selected, the &lt;code&gt;Export humanoid&lt;/code&gt; option will become available (&lt;code&gt;VRM -&amp;gt; UniVRM-0.56.3 -&amp;gt; Export humanoid&lt;/code&gt;). The file will be saved in the &lt;code&gt;Assets&lt;/code&gt; folder by default.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/export_dialog_56.jpg&#34; alt=&#34;vrm export&#34; width=&#34;600&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Enter your name in the &lt;code&gt;Author&lt;/code&gt; field and click the &lt;code&gt;Export&lt;/code&gt; button.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;force-t-pose&#34;&gt;Force T Pose&lt;/h3&gt;
&lt;p&gt;Force the model pose to become &lt;a href=&#34;../../dev/univrm-0.xx/vrm/vrm_tpose/&#34;&gt;T-Pose&lt;/a&gt; before removing rotation / scaling.&lt;/p&gt;
&lt;h4 id=&#34;change-to-t-pose-manually&#34;&gt;Change to T Pose manually&lt;/h4&gt;
&lt;p&gt;You can manually change the model pose to &lt;a href=&#34;../../dev/univrm-0.xx/vrm/vrm_tpose/&#34;&gt;T-Pose&lt;/a&gt; (done automatically by default). Make sure to deselect the &lt;code&gt;Force T Pose&lt;/code&gt; checkbox.&lt;/p&gt;
&lt;h3 id=&#34;pose-freeze&#34;&gt;Pose Freeze&lt;/h3&gt;
&lt;p&gt;Whether the rotation / scaling removal processing should be performed. It is &lt;strong&gt;the process of normalizing model&lt;/strong&gt; for conforming to the VRM rules. Please make sure to check the boxes at the &lt;strong&gt;first time of use&lt;/strong&gt;. After this process is done, all the components can work correctly.&lt;/p&gt;
&lt;h4 id=&#34;hierarchy-normalization&#34;&gt;Hierarchy normalization&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/rot.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The model that has the bone rotation.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/rot_scale.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The model made by Z-UP coordinate system. The unit of distance is non-meter (Blender default).&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Remove rotation and scaling&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/without_rot_scale.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Normalization completed.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;mesh-normalization&#34;&gt;Mesh normalization&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/zup_mesh.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The mesh with non T-pose is stored in Z-UP coordinate system.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Use&lt;code&gt;SkinnedMeshRenderer.BakeMesh&lt;/code&gt;to change the mesh to T-pose state and change the coordinate to Y-Up through the coordinate operation.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/yup_mesh.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The mesh with T-pose is stored in Y-UP coordinate system.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;import&#34;&gt;Import&lt;/h2&gt;
&lt;p&gt;Please import VRM file into Assets folder&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_imported.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Import the VRM model&lt;code&gt;Alicia&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Texture, Material and Prefab are automatically generated from VRM.&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_prefab_en.png&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;If the VRM file is not shown in the project view, right click and select&lt;code&gt;refresh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If the Prefab file cannot be generated, right click the VRM file and select&lt;code&gt;reimport&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Docs: What applications that support VRM?</title><link>https://vrm.dev/en/vrm_applications/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/vrm_applications/</guid><description>
&lt;h2 id=&#34;3d-model-submission-platform&#34;&gt;3D model submission platform&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://seed.online/&#34; target=&#34;_blank&#34;&gt;The Seed Online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://3d.nicovideo.jp/&#34; target=&#34;_blank&#34;&gt;Niconi 3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.vroid.com/&#34; target=&#34;_blank&#34;&gt;VRoid Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;plug-in&#34;&gt;Plug-in&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Application&lt;/th&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/saturday06/VRM_IMPORTER_for_Blender2_8&#34; target=&#34;_blank&#34;&gt;VRM_IMPORTER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blender add-on&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/ruyo/VRM4U&#34; target=&#34;_blank&#34;&gt;VRM4U&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;UnrealEngine plug-in&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kashikacojp/glTF-Maya-Exporter&#34; target=&#34;_blank&#34;&gt;glTF-Maya-Exporter&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Maya script&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.v-market.work/ec/items/122/detail/&#34; target=&#34;_blank&#34;&gt;VRM Converter for VRChat&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unity editor extension&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://pokemori.booth.pm/items/1788660&#34; target=&#34;_blank&#34;&gt;CopyVRMSettings.cs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unity editor extension&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;character-maker&#34;&gt;Character maker&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Application&lt;/th&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://vkatsu.jp/&#34; target=&#34;_blank&#34;&gt;Vkatsu&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://vroid.com/en&#34; target=&#34;_blank&#34;&gt;VRoid&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, macOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://fantia.jp/fanclubs/10552&#34; target=&#34;_blank&#34;&gt;SeshiruHenshin&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, macOS&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;live-streaming-tool&#34;&gt;Live streaming tool&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Application&lt;/th&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://virtualcast.jp/&#34; target=&#34;_blank&#34;&gt;Virtual Cast&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://customcast.jp/&#34; target=&#34;_blank&#34;&gt;Custom Cast&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://sites.google.com/view/vdraw/&#34; target=&#34;_blank&#34;&gt;VDRAW&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://le.wrightflyer.net/reality/&#34; target=&#34;_blank&#34;&gt;REALITY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://campaign.showroom-live.com/showroom-v/&#34; target=&#34;_blank&#34;&gt;SHOWROOM V&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://sites.google.com/site/vhitogata/&#34; target=&#34;_blank&#34;&gt;Hitogata&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://3tene.com/&#34; target=&#34;_blank&#34;&gt;3tene&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, macOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.puppemoji.com/&#34; target=&#34;_blank&#34;&gt;Puppemoji&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://store.steampowered.com/app/870820/Wakaru_ver_beta/&#34; target=&#34;_blank&#34;&gt;Wakaru&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/sh-akira/VirtualMotionCapture&#34; target=&#34;_blank&#34;&gt;VirtualMotionCapture&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://facevtuber.com/&#34; target=&#34;_blank&#34;&gt;FaceVTuber&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Google Chrome&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://materializer.co/lab/mayalive&#34; target=&#34;_blank&#34;&gt;Mayalive&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, macOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://wevtubers.appspot.com/&#34; target=&#34;_blank&#34;&gt;WeVTuber&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows Google Chrome, Safari&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/m2wasabi/LiveAvatar&#34; target=&#34;_blank&#34;&gt;LiveAvatar&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;HTC VIVE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://biscrat.booth.pm/items/1193414&#34; target=&#34;_blank&#34;&gt;Clarie&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://luppet.appspot.com/&#34; target=&#34;_blank&#34;&gt;Luppet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows + Leap Motion&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://apps.apple.com/jp/app/vear/id1490697369&#34; target=&#34;_blank&#34;&gt;vear&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/xelloss120/CharWebCam&#34; target=&#34;_blank&#34;&gt;CharWebCam&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://malaybaku.github.io/VMagicMirror/en/&#34; target=&#34;_blank&#34;&gt;VMagicMirror&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;metaverse&#34;&gt;Metaverse&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Application&lt;/th&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cluster.mu/&#34; target=&#34;_blank&#34;&gt;cluster&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;PCVR, Windows, macOS, iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://naby.booth.pm/items/990663&#34; target=&#34;_blank&#34;&gt;VWorld&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/exokitxr/avatars&#34; target=&#34;_blank&#34;&gt;Exokit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, macOS, Linux, VR&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;game&#34;&gt;Game&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Application&lt;/th&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://wandv.jp/seiya/&#34; target=&#34;_blank&#34;&gt;SEIYA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://orenodinner.booth.pm/items/952450&#34; target=&#34;_blank&#34;&gt;BONFIRE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Oculus Go&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://store.steampowered.com/app/867090/VR__TSUNTSUN_VR/&#34; target=&#34;_blank&#34;&gt;TSUN-TSUN VR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.mediaplex.co.jp/korokoro/&#34; target=&#34;_blank&#34;&gt;KOROKORO System&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Oculus Rift&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://n-mattun.booth.pm/&#34; target=&#34;_blank&#34;&gt;PilotXross&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;viewer&#34;&gt;Viewer&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Application&lt;/th&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/virtual-cast/babylon-vrm-loader/&#34; target=&#34;_blank&#34;&gt;Babylon VRM Viewer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Babylon.js extension&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/pixiv/three-vrm/&#34; target=&#34;_blank&#34;&gt;Three-VRM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;three.js extension&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.BooApps.VPocket&#34; target=&#34;_blank&#34;&gt;VPocket (Android / iOS)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Android, iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www43.atwiki.jp/beamman/&#34; target=&#34;_blank&#34;&gt;VRMViewer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://vrm-viewer.yukimochi.io/&#34; target=&#34;_blank&#34;&gt;VRM Viewer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Web browser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/magicien/VRMQuickLook&#34; target=&#34;_blank&#34;&gt;VRMQuickLook&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;macOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://fantom1x.blog130.fc2.com/blog-entry-309.html&#34; target=&#34;_blank&#34;&gt;VRM Live Viewer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kirurobo/UniWinApi&#34; target=&#34;_blank&#34;&gt;UniWinApi Example project&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unity library&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://120byte.booth.pm/items/1099618&#34; target=&#34;_blank&#34;&gt;VRM OningyoAsobi&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/m2wasabi/KinectV2VRM&#34; target=&#34;_blank&#34;&gt;KinectV2VRM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unity library&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.vrai.jp/vr_mocuvrm_en.html&#34; target=&#34;_blank&#34;&gt;MocuMocuVRM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR, Looking Glass&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://akarimichi.github.io/vrm-display-releases/&#34; target=&#34;_blank&#34;&gt;VRM Display&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;others&#34;&gt;Others&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Application&lt;/th&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://app.famitsu.com/gametitle/8356/&#34; target=&#34;_blank&#34;&gt;Vtabi&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://vismuth.net/&#34; target=&#34;_blank&#34;&gt;Vismuth&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Android, iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/t-takasaka/AI4Animation/tree/master/AI4Animation/Assets/Demo/ARKit&#34; target=&#34;_blank&#34;&gt;AI4Animation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unity library&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://yashinut.com/archives/vstamp_app.html&#34; target=&#34;_blank&#34;&gt;vstamp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/m2wasabi/VRMLoaderUI&#34; target=&#34;_blank&#34;&gt;VRMLoaderUI&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unity library&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://deatrathias.net/TW/&#34; target=&#34;_blank&#34;&gt;TRACKING WORLD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description></item><item><title>Docs: How to Use VRMFirstPerson</title><link>https://vrm.dev/en/dev/univrm-0.xx/programming/univrm_use_firstperson/</link><pubDate>Tue, 29 May 2018 10:00:00 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-0.xx/programming/univrm_use_firstperson/</guid><description>
&lt;h1 id=&#34;vrmfirstperson-settings&#34;&gt;VRMFirstPerson Settings&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://vrm.dev/../../../univrm/components/univrm_firstperson/&#34;&gt;VRMFirstPerson&lt;/a&gt; has the following settings for Renderer:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;FirstPersonFlag&lt;/th&gt;
&lt;th&gt;Layer&lt;/th&gt;
&lt;th&gt;Note&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Both&lt;/td&gt;
&lt;td&gt;default&lt;/td&gt;
&lt;td&gt;Specify parts that are not necessarily separated between first-person view and third-person view.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ThirdPersonOnly&lt;/td&gt;
&lt;td&gt;VRMThirdPersonOnly&lt;/td&gt;
&lt;td&gt;Specify parts that are not rendered in first-person view.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FirstPersonOnly&lt;/td&gt;
&lt;td&gt;VRMFirstPersonOnly&lt;/td&gt;
&lt;td&gt;Specify parts that are not rendered in third-person view. The auto-created headless model is used.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Auto&lt;/td&gt;
&lt;td&gt;VRMThirdPersonOnly&lt;/td&gt;
&lt;td&gt;Automatically create the model in first-person view at runtime and set it to FIRSTPERSON_ONLY_LAYER.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;By calling &lt;strong&gt;VRMFirstPerson.Setup&lt;/strong&gt; at runtime, the layer settings described above can be performed. Please call the function explicitly from outside.&lt;/p&gt;
&lt;h1 id=&#34;specify-the-additional-render-layers-for-the-application&#34;&gt;Specify the additional render layers for the application&lt;/h1&gt;
&lt;p&gt;The following layers are defined as constant:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VRMFirstPerson&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MonoBehaviour&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;FIRSTPERSON_ONLY_LAYER&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;THIRDPERSON_ONLY_LAYER&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// The following parts are omitted
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/layer_setting.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Set Layer in #9 and #10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;call-setup-function-at-runtime-and-set-layermask-in-camera&#34;&gt;Call Setup function at runtime and set LayerMask in Camera&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Call VRMFirstPerson.Setup&lt;/li&gt;
&lt;li&gt;Set LayerMask for first-person camera view and other camera views&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;System.Collections&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;System.Collections.Generic&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UnityEngine&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VRM&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SetupExample&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MonoBehaviour&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt; [SerializeField]&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Camera&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m_firstPersonCamera&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// HMD camera
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt; [SerializeField]&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;LayerMask&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m_firstPersonMask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Set a first-person mask (default | VRMFirstPersonOnly, etc.) in HMD camera
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt; [SerializeField]&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;LayerMask&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m_otherMask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Set other masks (default | VRMThirdPersonOnly, etc.) in HMD camera
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt; [SerializeField]&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;VRMFirstPerson&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m_firstPerson&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Reset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;m_firstPerson&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;GameObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;FindObjectOfType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VRMFirstPerson&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;();&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Start&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;foreach&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;camera&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;GameObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;FindObjectsOfType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Camera&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;())&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;camera&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;cullingMask&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;camera&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m_firstPersonCamera&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m_firstPersonMask&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;m_otherMask&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// VRMFirstPerson initialization
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;m_firstPerson&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;m_firstPerson&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Setup&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Docs: VRMSpringBone</title><link>https://vrm.dev/en/univrm/components/univrm_secondary/</link><pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate><guid>https://vrm.dev/en/univrm/components/univrm_secondary/</guid><description>
&lt;p&gt;This section is about spring bone settings.&lt;/p&gt;
&lt;h1 id=&#34;nodes-attached-by-spring-bones&#34;&gt;Nodes attached by spring bones&lt;/h1&gt;
&lt;p&gt;When VRM is imported, nodes attached by components related to spring bones can be found as described below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VRMSpringBone is attached to the node&lt;code&gt;secondary&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;VRMSpringBoneColliderGroup is attached to nodes exported last time.&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_settings.png&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Please check&lt;code&gt;secondary&lt;/code&gt;in the Hierarchy window if you cannot find VRMSpringBone&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;vrmspringbone&#34;&gt;VRMSpringBone&lt;/h1&gt;
&lt;p&gt;The setting for making objects swaying such as tail, hair, clothes and so on. Please set the target object&amp;rsquo;s parent Gameobject in&lt;code&gt;Root Bones&lt;/code&gt;. To do that, drag a target object (e.g.&lt;code&gt;hair1_L&lt;/code&gt;) from&lt;code&gt;Hierarchy&lt;/code&gt;to the&lt;code&gt;Element X&lt;/code&gt;field (or click the rightmost icon of&lt;code&gt;Element X&lt;/code&gt;then you can see a list of selectable components). Adjust&lt;code&gt;Size&lt;/code&gt;to change the number of&lt;code&gt;Root Bones&lt;/code&gt;you want to put in.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMSpringBone.png&#34; alt=&#34;lookat&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Example: Set the hair and ribbon in&lt;code&gt;Root Bones&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;That&amp;rsquo;s it. Try to adjust&lt;code&gt;Stiffness Force&lt;/code&gt;,&lt;code&gt;Gravity Power&lt;/code&gt;, etc. The target objects will perform swaying movements.&lt;/p&gt;
&lt;h1 id=&#34;option-vrmspringbonecollidergroup-collision-detection&#34;&gt;[Option] VRMSpringBoneColliderGroup (Collision detection)&lt;/h1&gt;
&lt;p&gt;The collision detection mechanism can be added to prevent swaying objects from penetrating user-specified parts.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/collider.png&#34; alt=&#34;collider&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Add the collision detection mechanism on the head (VRMSpringBoneColliderGroup)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For example, hit&lt;code&gt;Add Component&lt;/code&gt;to attach VRMSpringBoneColliderGroup script to&lt;code&gt;head&lt;/code&gt;and drag&lt;code&gt;head&lt;/code&gt;to the&lt;code&gt;Element 0&lt;/code&gt;field in&lt;code&gt;Collider Groups&lt;/code&gt;. You can change its offset and radius value by double clicking the&lt;code&gt;Element 0&lt;/code&gt;field in&lt;code&gt;Collider Groups&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/set_collider.png&#34; alt=&#34;set_collider&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Attach the VRMSpringBoneColliderGroup script to&lt;code&gt;head&lt;/code&gt;and set&lt;code&gt;head&lt;/code&gt;in&lt;code&gt;Collider Groups&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/spring_gizmo.png&#34; alt=&#34;gizmo&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Gizmo at runtime (check&lt;code&gt;Draw Gizmo&lt;/code&gt;in the Inspector of VRMSpringBone)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;set-multiple-collision-detections-in-vrmspringbonecollidergroup&#34;&gt;Set multiple collision detections in VRMSpringBoneColliderGroup&lt;/h2&gt;
&lt;p&gt;Though the default is only set for one collision detection (a sphere range from the target), users can change the setting to multiple detections (multiple sphere ranges from multiple targets) by adjusting the value of&lt;code&gt;Size&lt;/code&gt;and multiple targets can then be put into&lt;code&gt;Element&lt;/code&gt;fields.&lt;/p&gt;</description></item><item><title>Docs: Frequently asked questions</title><link>https://vrm.dev/en/univrm/univrm_faq/</link><pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate><guid>https://vrm.dev/en/univrm/univrm_faq/</guid><description>
&lt;h1 id=&#34;report-errors&#34;&gt;Report errors&lt;/h1&gt;
&lt;p&gt;Please check the contents in console (&lt;code&gt;Window -&amp;gt; Console&lt;/code&gt;).&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/window_console.png&#34; alt=&#34;コンソール画面を表示するメニュー&#34; /&gt;
&lt;p&gt;If an error messages (red) is shown in console, there might be something wrong somewhere:&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/error.png&#34; alt=&#34;エラーの例&#34; /&gt;
&lt;p&gt;Please report the errors you got in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/issues&#34; target=&#34;_blank&#34;&gt;https://github.com/vrm-c/UniVRM/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details provided in the report will be very helpful for us to look into your problem. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS (Windows10 64bit, etc.)&lt;/li&gt;
&lt;li&gt;Unity version (Unity-5.6.3p1, etc.)&lt;/li&gt;
&lt;li&gt;UniVRM version (0.40, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;vrmspringbone-set-before-was-gone&#34;&gt;VRMSpringBone set before was gone&lt;/h1&gt;
&lt;p&gt;VRMSpringBone was attached to the node&lt;code&gt;secondary&lt;/code&gt;during import.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../components/univrm_secondary/#nodes-attached-by-spring-bones&#34;&gt;VRMSpringBone&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;i-got-errors-when-loading-the-built-application&#34;&gt;I got errors when loading the built application&lt;/h1&gt;
&lt;p&gt;Shaders used by UniVRM may not be included in the application.&lt;/p&gt;
&lt;p&gt;Please double check:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Edit - Project Settings - Graphics - Shader preloading&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../univrm_install/#shader-preloading-setting&#34;&gt;The procedure for setting Shader preloading&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Docs: Material Import Export</title><link>https://vrm.dev/en/dev/univrm-0.xx/gltf/material_export_import/</link><pubDate>Wed, 29 Jul 2020 14:31:05 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-0.xx/gltf/material_export_import/</guid><description>
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Export&lt;/th&gt;
&lt;th&gt;Contents recorded in VRM / GLTF file&lt;/th&gt;
&lt;th&gt;Rendering in GLTF application&lt;/th&gt;
&lt;th&gt;VRM import, etc.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Stanard&lt;/td&gt;
&lt;td&gt;GLTF Material&lt;/td&gt;
&lt;td&gt;pbr&lt;/td&gt;
&lt;td&gt;Standard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unlit/Color&lt;/td&gt;
&lt;td&gt;GLTF Material + unlit extension&lt;/td&gt;
&lt;td&gt;unlit extension (shown as Standard if unlit extension is not supported)&lt;/td&gt;
&lt;td&gt;UniGLTF/UniUnlit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unlit/Texture&lt;/td&gt;
&lt;td&gt;GLTF Material + unlit extension&lt;/td&gt;
&lt;td&gt;unlit extension (shown as Standard if unlit extension is not supported)&lt;/td&gt;
&lt;td&gt;UniGLTF/UniUnlit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unlit/Transparent&lt;/td&gt;
&lt;td&gt;GLTF Material + unlit extension&lt;/td&gt;
&lt;td&gt;unlit extension (shown as Standard if unlit extension is not supported)&lt;/td&gt;
&lt;td&gt;UniGLTF/UniUnlit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unlit/TransparentCutout&lt;/td&gt;
&lt;td&gt;GLTF Material + unlit extension&lt;/td&gt;
&lt;td&gt;unlit extension (shown as Standard if unlit extension is not supported)&lt;/td&gt;
&lt;td&gt;UniGLTF/UniUnlit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VRM/UnlitTransparentZWrite&lt;/td&gt;
&lt;td&gt;VRM Material + GLTF Material&lt;/td&gt;
&lt;td&gt;unlit extension (shown as Standard if unlit extension is not supported. It is processed as normal Transparent)&lt;/td&gt;
&lt;td&gt;VRM/UnlitTransparentZWrite&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VRM/MToon&lt;/td&gt;
&lt;td&gt;VRM Material + GLTF Material&lt;/td&gt;
&lt;td&gt;unlit extension (shown as Standard if unlit extension is not supported)&lt;/td&gt;
&lt;td&gt;VRM Material + GLTF Material&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The GLTF unlit extension is KHR_material_unlit.&lt;/p&gt;</description></item><item><title>Docs: GLB Export</title><link>https://vrm.dev/en/dev/univrm-0.xx/gltf/how_to_create_glb/</link><pubDate>Wed, 29 Jul 2020 11:33:16 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-0.xx/gltf/how_to_create_glb/</guid><description>
&lt;h2 id=&#34;procedure&#34;&gt;Procedure&lt;/h2&gt;
&lt;p&gt;The following is the procedure for creating the glb file with UniGLTF included in UniVRM:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create an empty scene.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create an empty GameObject (topmost parent). No translation, rotation and scaling.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select an object you want to export and add it to the created parent GameObject.
(In this example a Cube object is created. You can add arbitrary objects such as Prefab.)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/root_cube.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select the topmost parent GameObject and click &lt;code&gt;Export&lt;/code&gt;(&lt;code&gt;UniGLTF-1.xx&lt;/code&gt;-&amp;gt;&lt;code&gt;Export&lt;/code&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/menu_unigltf_export.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enter the file name and the selected GameObject can be exported as the &lt;code&gt;glb&lt;/code&gt; file.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;notes-on-components-to-be-exported&#34;&gt;Notes on components to be exported&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MeshRenderer + MeshFilter&lt;/code&gt; (Please attach them to the child other than the topmost parent)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SkinnedMeshRenderer&lt;/code&gt; (Please attach it to the child other than the topmost parent)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Animation&lt;/code&gt; (Please attach it to the topmost parent. For rotation, please input the keyframe of Quaternion. Translation, rotation and scaling are supported. BlendShape is not supported yet)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;available-shader&#34;&gt;Available Shader&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Standard&lt;/code&gt;, &lt;code&gt;Unlit/Color&lt;/code&gt;, &lt;code&gt;Unlit/Texture&lt;/code&gt;, &lt;code&gt;Unlit/Transparent&lt;/code&gt;, &lt;code&gt;Unlit/Transparent Cutout&lt;/code&gt; and &lt;code&gt;UniGLTF/UniUnlit&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Docs: Support-Status-for-Animation-Exporter</title><link>https://vrm.dev/en/dev/univrm-0.xx/gltf/animation_exporter/</link><pubDate>Wed, 29 Jul 2020 11:33:16 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-0.xx/gltf/animation_exporter/</guid><description>
&lt;h3 id=&#34;version&#34;&gt;Version&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;v0.44&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;support-status&#34;&gt;Support Status&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;KeyName&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;TranslationKey&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;○&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;RotationKey&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;○&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ScaleKey&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;○&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;BlendShapeKey&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;×&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;h3 id=&#34;how-to-export-an-animator&#34;&gt;How to Export an Animator&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Add an Animator component to a root GameObject&lt;/li&gt;
&lt;li&gt;Create an AnimatorController and set it in the Controller box (&lt;code&gt;Animator&lt;/code&gt;-&amp;gt;&lt;code&gt;Controller&lt;/code&gt;) in the Inspector window&lt;/li&gt;
&lt;li&gt;From the UnityEditor&amp;rsquo;s toolbar, select &lt;code&gt;Windows&lt;/code&gt;-&amp;gt;&lt;code&gt;Animation&lt;/code&gt;-&amp;gt;&lt;code&gt;Animation&lt;/code&gt; to open the Animation window&lt;/li&gt;
&lt;li&gt;Make sure the root GameObject is selected and click the Create button in the center of the Animation window for creating AnimationClip&lt;/li&gt;
&lt;li&gt;Add animation keys to this clip&lt;/li&gt;
&lt;li&gt;Export as the glb file from &lt;code&gt;UniGLTF&lt;/code&gt;-&amp;gt;&lt;code&gt;Export&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;how-to-export-an-animation&#34;&gt;How to Export an Animation&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Add an Animation component to a root GameObject&lt;/li&gt;
&lt;li&gt;From the UnityEditor&amp;rsquo;s toolbar, select &lt;code&gt;Windows&lt;/code&gt;-&amp;gt;&lt;code&gt;Animation&lt;/code&gt;-&amp;gt;&lt;code&gt;Animation&lt;/code&gt; to open the Animation window&lt;/li&gt;
&lt;li&gt;Make sure the root GameObject is selected and click the Create button in the center of the Animation window for creating AnimationClip&lt;/li&gt;
&lt;li&gt;Now select the created AnimationClip (the Project window) and switch to Debug mode (the Inspector window), and then turn on &lt;code&gt;Legacy&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/LegacyClip.png&#34; alt=&#34;Interpolation&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Set the created AnimationClip in the Animation box (&lt;code&gt;Animation&lt;/code&gt;-&amp;gt;&lt;code&gt;Animation&lt;/code&gt;) in the Inspector window&lt;/li&gt;
&lt;li&gt;Add animation keys to this clip&lt;/li&gt;
&lt;li&gt;Export as the glb file from &lt;code&gt;UniGLTF&lt;/code&gt;-&amp;gt;&lt;code&gt;Export&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Please set the Interpolation of RotationKey to either Quaternion or Euler Angles (Quaternion)
&lt;img src=&#34;https://vrm.dev/images/wiki/Interpolation.png&#34; alt=&#34;Interpolation&#34; /&gt;&lt;/li&gt;
&lt;li&gt;For the Animator, all edited clips can be exported. However, the Animator states are not saved&lt;/li&gt;
&lt;li&gt;Though a created Animator goes through multiple animations (Animation State Machine), the UniGLTF Importer (UniGLTF-1.25) will only import the first one&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Docs: T Pose Normalization for Model</title><link>https://vrm.dev/en/univrm/settings/t_pose/</link><pubDate>Tue, 21 Jul 2020 17:35:05 +0900</pubDate><guid>https://vrm.dev/en/univrm/settings/t_pose/</guid><description>
&lt;h2 id=&#34;supplementary-information-regarding-t-pose&#34;&gt;Supplementary Information regarding T-Pose&lt;/h2&gt;
&lt;p&gt;To normalize a model, the model with T-Pose is required.&lt;/p&gt;
&lt;p&gt;If the model doesn&amp;rsquo;t have T-Pose, you can make a T-Pose by doing any of the followings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click &lt;code&gt;Menu&lt;/code&gt; on top and select &lt;code&gt;Export humanoid&lt;/code&gt; from &lt;code&gt;VRM&lt;/code&gt; -&amp;gt; &lt;code&gt;UniVRM-0.XX&lt;/code&gt; -&amp;gt; &lt;code&gt;Export humanoid&lt;/code&gt;. The export dialog will pop up. Enable &lt;code&gt;force T-Pose&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Make T-Pose for the model by manually adjusting the rotation of the arm etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If the T-Pose made by the first option (automatic T-Pose) didn&amp;rsquo;t go well, try to make T-Pose manually.&lt;/p&gt;
&lt;p&gt;Also, if a model&amp;rsquo;s normalization have been done once before, please avoid re-normalizing the model as much as you can as the accuracy may gradually deviate from standard.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Force T-Pose&lt;/code&gt; option will be unchecked by default if the model&amp;rsquo;s normalization was already done before. That being said, the system will detect whether the model contain Meta component.&lt;/p&gt;
&lt;h2 id=&#34;common-issues&#34;&gt;Common Issues&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Jaw&amp;rsquo;s position is incorrect: during T-Pose process, there is a possibility that the jaw&amp;rsquo;s position is different than before. If this is the case, please remove &lt;code&gt;jaw&lt;/code&gt; (chin) bone setting from the model&amp;rsquo;s (FBX) &lt;code&gt;Import setting&lt;/code&gt; -&amp;gt; &lt;code&gt;Rig&lt;/code&gt;. There is no influence on model if jaw bone is not used&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Facial parts (bangs, etc.) have weird movements: during T-Pose process, there is a possibility that the jaw&amp;rsquo;s position is different than before. That is, facial parts (e.g. bangs) are mis-recognized as jaw and being assigned to Jaw bone. As such, bangs&amp;rsquo; movements become weird due to this issue. Please remove &lt;code&gt;jaw&lt;/code&gt; bone setting from the model&amp;rsquo;s (FBX) &lt;code&gt;Import setting&lt;/code&gt; -&amp;gt; &lt;code&gt;Rig&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Docs: Material-Settings</title><link>https://vrm.dev/en/univrm/settings/material_settings/</link><pubDate>Mon, 25 May 2020 13:04:37 +0900</pubDate><guid>https://vrm.dev/en/univrm/settings/material_settings/</guid><description>
&lt;p&gt;About material settings:&lt;/p&gt;
&lt;h2 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The issue of causing glossy reflections:
&lt;ul&gt;
&lt;li&gt;It occurs when the shader type is &lt;code&gt;Standard&lt;/code&gt; (Unity standard) and the values of &lt;code&gt;metallic&lt;/code&gt; and &lt;code&gt;smooth&lt;/code&gt; are high. If you set the material&amp;rsquo;s shader to &lt;code&gt;Unlit/UniUnlit&lt;/code&gt;, the texture can be displayed as it supposes to be.&lt;/li&gt;
&lt;li&gt;When an unknown shader is selected (not supported by &lt;code&gt;VRM&lt;/code&gt;), the shader is defaulted to Standard shader and it may result in glossy reflections. If you set the material&amp;rsquo;s shader to &lt;code&gt;Unlit/UniUnlit&lt;/code&gt;, the texture can be displayed as it supposes to be.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;standard&#34;&gt;Standard&lt;/h2&gt;
&lt;p&gt;The majority of &lt;a href=&#34;https://docs.unity3d.com/Manual/StandardShaderMaterialParameters.html&#34; target=&#34;_blank&#34;&gt;material parameters&lt;/a&gt; in Unity&amp;rsquo;s standard shader are compatible with GLTF PBR materials:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Unity Standard&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;GLTF PBR&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Albedo Color&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/pbrMetallicRoughness/baseColorFactor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Albedo Texture&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/pbrMetallicRoughness/baseColorTexture&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Metallic Level&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/pbrMetallicRoughness/metallicFactor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Smoothness Level&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.0f - (/materials/pbrMetallicRoughness/roughnessFactor)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Metallic Texture&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/pbrMetallicRoughness/metallicRoughnessTexture&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Normal Map&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/normalTexture&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Bump scale&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/normalTexture/scale&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Height Map&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Occlusion Texture&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/occlusionTexture&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Occlusion Strength&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/occlusionTexture/strength&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Emission Color&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/emissiveFactor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Emission Texture&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/emissiveTexture&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Detail Mask&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Secondary Maps&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Rendering Mode&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/alphaMode&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For UniVRM&amp;rsquo;s material import, the roughnessFactor value is baked into the Metallic Texture. For material export, the smoothness value is baked into the Metallic Texture (&lt;a href=&#34;https://github.com/vrm-c/UniVRM/pull/222&#34; target=&#34;_blank&#34;&gt;discussion&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&#34;unlit&#34;&gt;Unlit&lt;/h2&gt;
&lt;p&gt;Unity has Unlit type shader such as &lt;code&gt;Unlit/Color&lt;/code&gt;, &lt;code&gt;Unlit/Texture&lt;/code&gt;, &lt;code&gt;Unlit/Transparent&lt;/code&gt;, and &lt;code&gt;Unlit/Transparent Cutout&lt;/code&gt;. For GLTF, unlit is supported by &lt;code&gt;KHR_materials_unlit&lt;/code&gt; extension.&lt;/p&gt;
&lt;p&gt;In GLTF, you can utilize &lt;code&gt;doubleSided&lt;/code&gt;, the product of &lt;code&gt;Texture&lt;/code&gt;, &lt;code&gt;Color&lt;/code&gt; and &lt;code&gt;VertexColor&lt;/code&gt; (if any), and &lt;code&gt;color&lt;/code&gt;&amp;rsquo;s alpha mode. Given that there is no shader that can handle these features on Unity side, we introduce &lt;code&gt;UniGLTF/Unlit&lt;/code&gt; in Unity (v0.44).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;UniUnlit&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;GLTF Unlit&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Color Factor&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/pbrMetallicRoughness/baseColorFactor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Color Texture&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/pbrMetallicRoughness/baseColorTexture&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Rendering Mode&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/alphaMode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Cull Mode&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/doubleSided&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Note that when &lt;code&gt;KHR_materials_unlit&lt;/code&gt; is declared, core PBR properties are ignored except baseColor. Color values, alpha coverage and double sided will still apply to unlit materials.&lt;/p&gt;
&lt;h2 id=&#34;mtoon&#34;&gt;MToon&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.slideshare.net/VirtualCast/vrm-mtoon&#34; target=&#34;_blank&#34;&gt;https://www.slideshare.net/VirtualCast/vrm-mtoon&lt;/a&gt; (written in Japanese)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../../../univrm/shaders/mtoon/&#34;&gt;MToon Shader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Docs: Employ Unity Package Manager</title><link>https://vrm.dev/en/en/dev/univrm-1.xx/package/</link><pubDate>Mon, 11 May 2020 17:06:05 +0900</pubDate><guid>https://vrm.dev/en/en/dev/univrm-1.xx/package/</guid><description>
&lt;h2 id=&#34;univrm-1-0-s-unitypackage&#34;&gt;UniVRM-1.0&amp;rsquo;s UnityPackage&lt;/h2&gt;
&lt;p&gt;UnityPackage is adopted experimentally in UniVRM-1.0.&lt;/p&gt;
&lt;p&gt;As &lt;code&gt;package.json&lt;/code&gt; is placed in each module in github repository&amp;rsquo;s &lt;code&gt;Assets&lt;/code&gt; folder,
&lt;code&gt;Unity 2019.3.4f1 or later version&lt;/code&gt; is required.&lt;/p&gt;
&lt;h3 id=&#34;how-to-use&#34;&gt;How to use&lt;/h3&gt;
&lt;p&gt;UnityPackageManager&amp;rsquo;s Window&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/menu_packagemanager.jpg&#34; /&gt;
&lt;p&gt;&lt;code&gt;add package from git URL&lt;/code&gt;&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/from_git.jpg&#34; /&gt;
&lt;p&gt;Since there is no function that can automatically download the dependencies between packages, please add the following git urls in order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://github.com/vrm-c/UniVRM_1_0.git?path=/Assets/Vrm10&lt;/code&gt; =&amp;gt; Depends on VRMShaders&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;add-dependencies-in-packages-manifest-json&#34;&gt;Add dependencies in Packages/manifest.json&lt;/h4&gt;
&lt;p&gt;An alternative way is to add necessary dependencies right in Packages/manifest.json. Please copy and paste the following contents:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.univrm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM_1_0.git?path=/Assets/Vrm10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRMUtility/blob/master/Packages/manifest.json&#34; target=&#34;_blank&#34;&gt;https://github.com/vrm-c/UniVRMUtility/blob/master/Packages/manifest.json&lt;/a&gt; is an example of using &lt;code&gt;UniVRM-1.0&lt;/code&gt;&amp;rsquo;s &lt;code&gt;UnityPackage&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The hash values in &lt;code&gt;lock&lt;/code&gt; can be updated automatically by Unity, there is no need to manually change them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;lock&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.univrm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;revision&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HEAD&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;hash&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;198c2c605ded711b21781421e71ba9bdbe0f8728&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;revision&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HEAD&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;hash&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;155acf354735288db0335878179f483901541851&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Docs: BlendShapeProxy Updates</title><link>https://vrm.dev/en/en/dev/univrm-1.xx/blendshapeproxy/</link><pubDate>Mon, 11 May 2020 17:05:49 +0900</pubDate><guid>https://vrm.dev/en/en/dev/univrm-1.xx/blendshapeproxy/</guid><description>
&lt;h2 id=&#34;update-order-for-blendshape-related-components&#34;&gt;Update order for BlendShape-related components&lt;/h2&gt;
&lt;p&gt;As described in &lt;a href=&#34;https://github.com/vrm-c/vrm-specification/blob/master/specification/VRMC_vrm-1.0_draft/README.md#update-order&#34; target=&#34;_blank&#34;&gt;https://github.com/vrm-c/vrm-specification/blob/master/specification/VRMC_vrm-1.0_draft/README.md#update-order&lt;/a&gt;, it is recommended to update as the following order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Humanoid&lt;/li&gt;
&lt;li&gt;LookAt&lt;/li&gt;
&lt;li&gt;BlendShape&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;integrate-with-lookat&#34;&gt;Integrate with LookAt&lt;/h2&gt;
&lt;p&gt;To reduce the processing order problem of LookAt and BlendShape, &lt;code&gt;VRMLookAtHead&lt;/code&gt;, &lt;code&gt;VRMLookAtBoneApplyer&lt;/code&gt; and &lt;code&gt;VRMLookAtBlendShapeApplyer&lt;/code&gt; have been integrated into &lt;code&gt;VRMBlendShapeProxy&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;blendshapeclip-s-exclude-functions&#34;&gt;BlendShapeClip&amp;rsquo;s exclude functions&lt;/h2&gt;
&lt;p&gt;For example, when &lt;code&gt;fun&lt;/code&gt; and &lt;code&gt;blink&lt;/code&gt; are applied at the same time, there are models whose eyes become weird.
To address this issue, a function that can disable &lt;code&gt;blink&lt;/code&gt; when applying &lt;code&gt;fun&lt;/code&gt; is created. As of vrm1.0, there are three types of exclude functions:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/vrm-specification/blob/master/specification/VRMC_vrm-1.0_draft/README.md#blendshape-specification&#34; target=&#34;_blank&#34;&gt;https://github.com/vrm-c/vrm-specification/blob/master/specification/VRMC_vrm-1.0_draft/README.md#blendshape-specification&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ignoreBlink&lt;/li&gt;
&lt;li&gt;ignoreLookAt&lt;/li&gt;
&lt;li&gt;ignoreMouth&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;setvalue-and-apply&#34;&gt;SetValue and Apply&lt;/h2&gt;
&lt;p&gt;In &lt;code&gt;UniVRM-0.X&lt;/code&gt; there are two systems &lt;code&gt;BlendShapeProxyy.SetValueImmediate&lt;/code&gt; and &lt;code&gt;BlendSahpeProxy.SetValue + Apply&lt;/code&gt;. In &lt;code&gt;UniVRM-1.X&lt;/code&gt;, &lt;code&gt;BlendShapeProxyy.SetValueImmediate&lt;/code&gt; has been removed.&lt;/p&gt;
&lt;p&gt;To make &lt;code&gt;ignoreBlink&lt;/code&gt;, etc. functional, it is necessary to accumulate the rest of the included blendshape values and then process them at once. (Initially it was designed to be stored and applied by the application side)&lt;/p&gt;
&lt;h2 id=&#34;the-timing-of-using-apply-function&#34;&gt;The timing of using Apply function&lt;/h2&gt;
&lt;h3 id=&#34;none&#34;&gt;None&lt;/h3&gt;
&lt;p&gt;Please call &lt;code&gt;Apply&lt;/code&gt; explicitly on the user application side.&lt;/p&gt;
&lt;h3 id=&#34;update&#34;&gt;Update&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Apply&lt;/code&gt; is called in VRMBlendShapeProxy.Update.&lt;/p&gt;
&lt;p&gt;Note that it is better to use VRMBlendShapeProxy.Apply when the necessary blendshape values are set.&lt;/p&gt;
&lt;h3 id=&#34;lateupdate&#34;&gt;LateUpdate&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Apply&lt;/code&gt; is called in VRMBlendShapeProxy.LateUpdate.&lt;/p&gt;
&lt;p&gt;When fine controlling is not required.&lt;/p&gt;</description></item><item><title>Docs: BlendShape Setup (v0.45)</title><link>https://vrm.dev/en/univrm/settings/blendshape_setup/</link><pubDate>Thu, 23 Apr 2020 17:09:54 +0900</pubDate><guid>https://vrm.dev/en/univrm/settings/blendshape_setup/</guid><description>
&lt;h2 id=&#34;assets-related-to-blendshape&#34;&gt;Assets related to BlendShape&lt;/h2&gt;
&lt;p&gt;Once a VRM file is imported, BlendShapeClips (Preset) will be in a folder like this: &lt;code&gt;ModelName.BlendShapes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/blendshapeclip_assets.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;BlendShapeAvatar Asset&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/blendshapeavatar.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;setting-screen&#34;&gt;Setting screen&lt;/h2&gt;
&lt;p&gt;The Asset has the following setting screens:&lt;/p&gt;
&lt;h3 id=&#34;the-inspector-of-blendshapeavatar-asset&#34;&gt;The Inspector of BlendShapeAvatar Asset&lt;/h3&gt;
&lt;h4 id=&#34;editor-tab&#34;&gt;Editor tab&lt;/h4&gt;
&lt;p&gt;BlendShapeClip Selection / Creation&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/select_blendshapeavatar.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;list-tab-starting-from-v0-45&#34;&gt;List tab (Starting from v0.45)&lt;/h4&gt;
&lt;p&gt;BlendShapeClip List&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/list.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;the-inspector-of-blendshapeclip-asset&#34;&gt;The Inspector of BlendShapeClip Asset&lt;/h3&gt;
&lt;h4 id=&#34;blendshape-tab&#34;&gt;BlendShape tab&lt;/h4&gt;
&lt;p&gt;Create the BlendShape setting:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/alicia_binary.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;blendshape-list-tab&#34;&gt;BlendShape List tab&lt;/h4&gt;
&lt;p&gt;You can see the values created from the BlendShape tab.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/blendshape_angry.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;material-list-tab&#34;&gt;Material List tab&lt;/h4&gt;
&lt;p&gt;You can create a &lt;a href=&#34;../lookat_settings&#34;&gt;BlendShape version of LookAt&lt;/a&gt;, change the color with BlendShape, etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/material_color.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;blendshapeclip-settings&#34;&gt;BlendShapeClip Settings&lt;/h2&gt;
&lt;p&gt;Create a facial expression for a BlendShapeClip (not limited to the face).&lt;/p&gt;
&lt;h3 id=&#34;1-select-a-blendshapeclip&#34;&gt;1. Select a BlendShapeClip&lt;/h3&gt;
&lt;p&gt;Select a BlendShapeClip from the Inspector of BlendShapeAvatar&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/select_blendshapeavatar.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Or click a BlendShapeClip Asset directly in the Project window&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/select_blendshapeclip.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-change-the-values-of-the-sliders-to-make-a-facial-expression&#34;&gt;2. Change the values of the sliders to make a facial expression&lt;/h3&gt;
&lt;p&gt;The names of the existing &lt;code&gt;SkinnedMeshRenderers&lt;/code&gt; will list in the Inspector window once you click the BlendShape tab.
Click any listed name and you can then adjust the BlendShape value.
The change value is reflected immediately.
The &lt;code&gt;Apply&lt;/code&gt; button is removed starting from v0.45.&lt;/p&gt;
&lt;h3 id=&#34;3-check-the-model-s-blendshape-in-preview&#34;&gt;3. Check the model&amp;rsquo;s BlendShape in Preview&lt;/h3&gt;
&lt;p&gt;You can test changes in BlendShape by sliding the value (&lt;code&gt;Preview Weight Slider&lt;/code&gt;) between 0 ~ 1&lt;/p&gt;
&lt;p&gt;Click and drag the &lt;code&gt;left / right&lt;/code&gt; mouse button to change the viewing perspective&lt;/p&gt;
&lt;p&gt;Click and drag the &lt;code&gt;middle&lt;/code&gt; mouse button to move horizontally / vertically&lt;/p&gt;
&lt;h3 id=&#34;the-binary-value-setting-for-blendshape-v0-45&#34;&gt;The Binary value setting for BlendShape (v0.45)&lt;/h3&gt;
&lt;p&gt;The Binary option is added into the BlendShape setting in v0.45. It is for users who don&amp;rsquo;t want to display the middle state of the BlendShape. The target value will be automatically rounded off. A BlendShape with the binary setting being active will only have a representative expression like a screenshot.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/alicia_binary.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This feature will become effective when a v0.45-installed application is loaded&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/binary.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;</description></item><item><title>Docs: How to Use BlendShapeProxy</title><link>https://vrm.dev/en/dev/univrm-0.xx/programming/how_to_use_blendshapeproxy/</link><pubDate>Thu, 23 Apr 2020 17:09:54 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-0.xx/programming/how_to_use_blendshapeproxy/</guid><description>
&lt;p&gt;Work In Progress&lt;/p&gt;
&lt;h2 id=&#34;why-use-multiple-setters-at-the-same-time&#34;&gt;Why use multiple setters at the same time?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;LipSync&lt;/li&gt;
&lt;li&gt;Eye Blink&lt;/li&gt;
&lt;li&gt;Eye Gaze control (the case where the model&amp;rsquo;s eye gaze movements are controlled by BlendShape)&lt;/li&gt;
&lt;li&gt;Emotions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We found that multiple BlendShapes competed with each other when the above expressions were set from different components.
A BlendShape set before may be overwritten with followed BlendShapes so it turns out that the desired BlendShape is not actually shown.
In order to solve this issue, it is necessary to centralize the management of the BlendShape control.&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;SetValues&lt;/code&gt;, it is assumed to have the ability of synthesizing and excluding BlendShapes so aggregated BlendShapeClips can then generate a proper output.&lt;/p&gt;
&lt;h2 id=&#34;immediatelysetvalue&#34;&gt;ImmediatelySetValue&lt;/h2&gt;
&lt;p&gt;Assumed to be used for a simple test program.&lt;/p&gt;
&lt;h2 id=&#34;accumeratevalue-apply&#34;&gt;AccumerateValue + Apply&lt;/h2&gt;
&lt;p&gt;We recommend &lt;code&gt;SetValues&lt;/code&gt; (below) to handle possible accumulated BlendShape values.&lt;/p&gt;
&lt;h2 id=&#34;setvalues&#34;&gt;SetValues&lt;/h2&gt;
&lt;p&gt;Call &lt;code&gt;SetValues&lt;/code&gt; to combine BlendShapes.&lt;/p&gt;</description></item><item><title>Docs: Humanoid</title><link>https://vrm.dev/en/dev/univrm-0.xx/vrm/humanoid/</link><pubDate>Thu, 23 Apr 2020 17:09:54 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-0.xx/vrm/humanoid/</guid><description>
&lt;p&gt;Work In progress&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mainly based on whether MotionCapture&amp;rsquo;s FK (Forward Kinematics) can be used.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;related-issues&#34;&gt;Related Issues&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/vrm-specification/issues/87&#34; target=&#34;_blank&#34;&gt;https://github.com/vrm-c/vrm-specification/issues/87&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;terminology&#34;&gt;Terminology&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Bone: Gltf node that contains &lt;code&gt;Humanoid&lt;/code&gt; -&amp;gt; &lt;code&gt;HumanBones&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bone Name
&lt;ul&gt;
&lt;li&gt;hips&lt;/li&gt;
&lt;li&gt;spine&lt;/li&gt;
&lt;li&gt;chest (&lt;code&gt;optional&lt;/code&gt; for Unity&amp;rsquo;s Humanoid, &lt;code&gt;required&lt;/code&gt; for VRM?)&lt;/li&gt;
&lt;li&gt;upperChest(option)&lt;/li&gt;
&lt;li&gt;neck (&lt;code&gt;optional&lt;/code&gt; for Unity&amp;rsquo;s Humanoid, &lt;code&gt;required&lt;/code&gt; for VRM?)&lt;/li&gt;
&lt;li&gt;head&lt;/li&gt;
&lt;li&gt;Left/Right eye (&lt;code&gt;optional&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;left/Right shoulder (&lt;code&gt;optional&lt;/code&gt; for Unity&amp;rsquo;s Humanoid, &lt;code&gt;required&lt;/code&gt; for VRM?)&lt;/li&gt;
&lt;li&gt;Left/Right upperArm&lt;/li&gt;
&lt;li&gt;Left/Right lowerArm&lt;/li&gt;
&lt;li&gt;Left/Right hand&lt;/li&gt;
&lt;li&gt;Left/Right upperLeg&lt;/li&gt;
&lt;li&gt;Left/Right lowerLeg&lt;/li&gt;
&lt;li&gt;Left/Right foot&lt;/li&gt;
&lt;li&gt;Left/Right toe (&lt;code&gt;optional&lt;/code&gt; for Unity&amp;rsquo;s Humanoid, &lt;code&gt;required&lt;/code&gt; for VRM?)&lt;/li&gt;
&lt;li&gt;Left/Right thumb proximal, intermediate, distal (&lt;code&gt;optional&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Left/Right index proximal, intermediate, distal (&lt;code&gt;optional&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Left/Right middle proximal, intermediate, distal (&lt;code&gt;optional&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Left/Right ring proximal, intermediate, distal (&lt;code&gt;optional&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Left/Right little proximal, intermediate, distal (&lt;code&gt;optional&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;humanoid-requirements-tentative&#34;&gt;Humanoid Requirements (Tentative)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Target nodes can be selected regardless of skinning (GLTF skin, joint and Unity SkinnedMeshRenderer, etc.)&lt;/li&gt;
&lt;li&gt;All required bones are contained&lt;/li&gt;
&lt;li&gt;The Bone&amp;rsquo;s parent-child relationship follows the humanoid definition (The first ancestor bone found in LowerLeg is UpperLeg etc.)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The parent-child relationships for hips as root are described below. Bones that are in parentheses are non-required bones (optional):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;hips - spine - chest - (upper chest) - neck - head&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[Branch] from head - left - (eye)&lt;/li&gt;
&lt;li&gt;[Branch] from head - right - (eye)&lt;/li&gt;
&lt;li&gt;[Branch] from chest or upper chest - left - (shoulder) - upper arm - lower arm - hand - (fingers)&lt;/li&gt;
&lt;li&gt;[Branch] from chest or upper chest - right - (shoulder) - upper arm - lower arm - hand - (fingers)&lt;/li&gt;
&lt;li&gt;[Branch] from hips - left - upper leg - lower leg - foot - (toes)&lt;/li&gt;
&lt;li&gt;[Branch] from hips - right - upper leg - lower leg - foot - (toes)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Inserting a node that is not related to humanoid is allowable as long as it follows an order above (e.g. LowerLeg&amp;rsquo;s parent is object cube and this cube&amp;rsquo;s parent is UpperLeg, etc.)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Non-required bones can be skipped (UpperArm&amp;rsquo;s parent is not shoulder, but chest)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be the T-pose&lt;/li&gt;
&lt;li&gt;No rotation/scaling for each node&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;rsquo;s pretty much it.&lt;/p&gt;</description></item><item><title>Docs: LookAt-Settings</title><link>https://vrm.dev/en/univrm/settings/lookat_settings/</link><pubDate>Thu, 23 Apr 2020 17:09:54 +0900</pubDate><guid>https://vrm.dev/en/univrm/settings/lookat_settings/</guid><description>
&lt;h2 id=&#34;control-the-eye-gaze-with-the-eye-bone&#34;&gt;Control the Eye Gaze with the Eye Bone&lt;/h2&gt;
&lt;p&gt;Please refer to &lt;a href=&#34;../../../../univrm/components/univrm_lookat&#34;&gt;Eye Control&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;control-the-eye-gaze-with-the-blendshape&#34;&gt;Control the Eye Gaze with the BlendShape&lt;/h2&gt;
&lt;p&gt;Please refer to &lt;a href=&#34;../../../../univrm/components/univrm_lookat&#34;&gt;Eye Control&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;control-the-eye-gaze-with-the-uv-texture&#34;&gt;Control the Eye Gaze with the UV Texture&lt;/h2&gt;
&lt;p&gt;A method that can move the model&amp;rsquo;s eyes by sliding Texture up, down, left, or right.
&lt;code&gt;Unity chan&lt;/code&gt; belongs to this type.&lt;/p&gt;
&lt;h3 id=&#34;search-the-eye-material&#34;&gt;Search the eye material&lt;/h3&gt;
&lt;p&gt;Please search the eye material in the Project window. The &lt;code&gt;Tiling Offset&lt;/code&gt; setting will be displayed in the Inspector window.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/material_tiling_offset.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The values should be &lt;code&gt;1, 1, 0, 0&lt;/code&gt; (if the values are different, the followings are for reference only).&lt;/p&gt;
&lt;p&gt;Now you can try to change the values of &lt;code&gt;Offset&lt;/code&gt; X and Y. X value is left or right movements for the eyes. Y value is for moving the eyes up and down.
Since we have found where the eye materials are, we set the X and Y values back to &lt;code&gt;0&lt;/code&gt; and proceed to the next step.&lt;/p&gt;
&lt;h2 id=&#34;set-up-lookup-lookdown-lookleft-and-lookright&#34;&gt;Set up LookUp, LookDown, LookLeft and LookRight&lt;/h2&gt;
&lt;p&gt;In the following example, we choose &lt;code&gt;unlit/transparent cutout&lt;/code&gt; for material&lt;/p&gt;
&lt;h3 id=&#34;lookleft-example&#34;&gt;LookLeft example&lt;/h3&gt;
&lt;p&gt;Please select the &lt;code&gt;LookLeft&lt;/code&gt; asset in the Project window&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/lookleft.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click &lt;code&gt;Material List&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;+&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;eye_L1&lt;/code&gt; - &lt;code&gt;_MainTex_ST&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;Tliling = 1, 1&lt;/code&gt;, &lt;code&gt;Offset = 0, 0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/tiling_offset_1100.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adjust Offset value in the LookLeft setting&lt;/li&gt;
&lt;li&gt;Repeat the same procedure for &lt;code&gt;eye_R1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Adjust &lt;code&gt;Offset&lt;/code&gt; X for Left and Right and &lt;code&gt;Offset&lt;/code&gt; Y for Up and Down. For example, &lt;code&gt;LookLeft Offset = -0.2, 0&lt;/code&gt;, &lt;code&gt;LookRight Offset = 0.2, 0&lt;/code&gt;, &lt;code&gt;LookUp Offset = 0, -0.2&lt;/code&gt;, &lt;code&gt;LookDown Offset = 0, 0.2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/look_left.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://unity-chan.com/&#34; target=&#34;_blank&#34;&gt;© UTJ/UCL&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;add-vrmlookatblendshapeapplyer-in-the-vrm-model-s-inspector-window&#34;&gt;Add VRMLookAtBlendShapeApplyer in the VRM model&amp;rsquo;s Inspector window&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Remove VRMLookAtBoneApplyer&lt;/li&gt;
&lt;li&gt;Add VRMLookAtBlendShapeApplyer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/blendshape_applyer.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In the default setting, when the look angle between the target and the model&amp;rsquo;s head reaches 90 degrees, the BlendShape value is set to 1. Any angle greater than 90 degrees will clamp the BlendShape value to 1. By setting Curve X Range Degree to a lower degree, the pupil will move widely even at a small angle change.&lt;/p&gt;</description></item><item><title>Docs: Precautions on Prefab Import and Overwrite Issue</title><link>https://vrm.dev/en/univrm/settings/prefab_importer_behaviour/</link><pubDate>Thu, 23 Apr 2020 17:09:54 +0900</pubDate><guid>https://vrm.dev/en/univrm/settings/prefab_importer_behaviour/</guid><description>
&lt;h2 id=&#34;0-49&#34;&gt;0.49&lt;/h2&gt;
&lt;p&gt;When VRM is imported with Unity Editor, Material and BlendShapeAvatar will not be overwritten if they already exist in the &lt;code&gt;Assets&lt;/code&gt; folder .
In that case, the Material&amp;rsquo;s and BlendShapeAvatar&amp;rsquo;s references from Prefab will be set to reference existing files.&lt;/p&gt;
&lt;h2 id=&#34;0-46&#34;&gt;0.46&lt;/h2&gt;
&lt;p&gt;When VRM is imported with Unity Editor, Material, BlendShapeAvatar, BlendShapeClip will not be overwritten if they already exist in the &lt;code&gt;Assets&lt;/code&gt; folder.
However, Mesh, Texture and Prefab will be overwritten.&lt;/p&gt;
&lt;p&gt;Considering that users may have their own settings for Material, BlendShapeAvatar, BlendShapeClip, existing Material, BlendShapeAvatar and BlendShapeClip files will not be overwritten.
If you want to overwrite, delete them before importing.&lt;/p&gt;
&lt;h2 id=&#34;0-45-and-before&#34;&gt;0.45 and before&lt;/h2&gt;
&lt;p&gt;When VRM is imported with Unity Editor, Material, Mesh, Texture, Material, BlendShape, Prefab will be overwritten.&lt;/p&gt;</description></item><item><title>Docs: Runtime Importer</title><link>https://vrm.dev/en/dev/univrm-0.xx/programming/runtime_import/</link><pubDate>Thu, 23 Apr 2020 17:09:54 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-0.xx/programming/runtime_import/</guid><description>
&lt;p&gt;The followings are examples of runtime VRM import in &lt;code&gt;v0.44 and later versions&lt;/code&gt;:&lt;/p&gt;
&lt;h2 id=&#34;loadasync-example&#34;&gt;LoadAsync Example&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ReadAllBytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Get a byte array
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VRMImporterContext&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ParseGlb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// When meta is needed
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;createThumbnail&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ReadMeta&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;createThumbnail&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;thumbnail&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Thumbnail&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Construct a model
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LoadAsync&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ShowMeshes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;go&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Root&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Load completed
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Debug&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LogError&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;loadasynctask-example&#34;&gt;LoadAsyncTask Example&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#if (NET_4_6 &amp;amp;&amp;amp; UNITY_2017_1_OR_NEWER)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Task&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GameObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;LoadAsync&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Byte&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VRMImporterContext&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Get JSON in GLB format and parse it
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ParseGlb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;try&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Convert the parsed JSON to the scene object
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LoadAsyncTask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Prevent the model&amp;#39;s surface from being penetrated by
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// the positional relation between the bounding box and the camera
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// SkinnedMeshRenderer.updateWhenOffscreen = true
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;EnableUpdateWhenOffscreen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// If you do not want the program display the model&amp;#39;s T-Pose,
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// prepare it before ShowMeshes
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Display the model when the loading is finished
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ShowMeshes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Root&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;catch&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Debug&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LogError&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Destroy related resources
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Destroy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;throw&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#endif
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;related-article&#34;&gt;Related-Article&lt;/h2&gt;
&lt;p&gt;More details can be found in the link below (written in Japanese):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/sh_akira/items/8155e4b69107c2a7ede6&#34; target=&#34;_blank&#34;&gt;UniVRMを使ってVRMモデルをランタイムロードする方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Docs: API</title><link>https://vrm.dev/en/dev/univrm-1.xx/api/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-1.xx/api/</guid><description>
&lt;p&gt;Available in &lt;a href=&#34;https://github.com/vrm-c/UniVRM_1_0/blob/master/Assets/UniVRM-1.0/PlayModeTests/ApiSampleTests.cs&#34; target=&#34;_blank&#34;&gt;https://github.com/vrm-c/UniVRM_1_0/blob/master/Assets/UniVRM-1.0/PlayModeTests/ApiSampleTests.cs&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;System.IO&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UnityEngine&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;vrm-to-model&#34;&gt;VRM to Model&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt; &lt;span style=&#34;color:#000&#34;&gt;VrmLib&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Model&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ReadModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ReadAllBytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VrmLib&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Glb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TryParse&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VrmLib&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Glb&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;glb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Debug&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LogError&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;$&amp;#34;fail to Glb.TryParse: {path} =&amp;gt; {ex}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// both VRM-0.X and VRM-1.0
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UniVRM10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VrmLoader&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CreateVrmModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;this-is-possible-on-a-thread&#34;&gt;This is possible on a thread&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Task&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Run&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(()=&amp;gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ReadModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;model-to-gameobject&#34;&gt;Model to GameObject&lt;/h2&gt;
&lt;p&gt;This requires a ScriptThread.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt; &lt;span style=&#34;color:#000&#34;&gt;ModelAsset&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;BuildGameObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VrmLib&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Model&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;showMesh&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;importer&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UniVRM10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;RuntimeUnityBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;assets&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;importer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ToUnityAsset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;showMesh&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;UniVRM10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ComponentBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Build10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;importer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;assets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;assets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;set-renderer-after-importing-the-model&#34;&gt;Set renderer after importing the model&lt;/h3&gt;
&lt;p&gt;Various assets now are stored in ModelAsset.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;asset&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;BuildGameObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;srcModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// renderer setting
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;foreach&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;render&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;asset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Renderers&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// show when RuntimeUnityBuilder.ToUnity(showMesh = false)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;render&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;enabled&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// avoid culling
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;render&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SkinnedMeshRenderer&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;skinned&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;skinned&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;updateWhenOffscreen&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;tackle-on-frame-rate-dropping-todo&#34;&gt;Tackle on frame rate dropping (TODO)&lt;/h3&gt;
&lt;p&gt;Optimize the processing of each frame to reduce spikes.&lt;/p&gt;
&lt;h2 id=&#34;gameobject-to-model&#34;&gt;GameObject to Model&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt; &lt;span style=&#34;color:#000&#34;&gt;VrmLib&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Model&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ToModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;UnityEngine&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GameObject&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;exporter&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UniVRM10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;RuntimeVrmConverter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;exporter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ToModelFrom10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;model-to-vrm&#34;&gt;Model to VRM&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ToVrm10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VrmLib&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Model&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// transform to right-handed coordinate system
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VrmLib&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ModelExtensionsForCoordinates&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ConvertCoordinate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VrmLib&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Coordinates&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Gltf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Vrm10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ModelExtensions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ToGlb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Docs: API Changes</title><link>https://vrm.dev/en/dev/univrm-1.xx/api_update_from_univrm-0.xx/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-1.xx/api_update_from_univrm-0.xx/</guid><description>
&lt;h2 id=&#34;import&#34;&gt;Import&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The class &lt;code&gt;VRM.VRMImporterContext&lt;/code&gt;, which is used to import VRM data (&lt;code&gt;UniGLTF.ImporterContext.Load&lt;/code&gt;), has been removed. In UniVRM-1.XX the UniVRM importer will first store the VRM data (&lt;code&gt;UniVRM10.VrmLoader.CreateVrmModel&lt;/code&gt;) in &lt;code&gt;VrmLib.Model&lt;/code&gt; then port to Unity&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UniVRM10.UnityBuilder.ToUnityAsset&lt;/code&gt; will transfer the data from &lt;code&gt;VrmLib.Model&lt;/code&gt; to Unity Asset. &lt;code&gt;UniGLTF.ImporterContext.ShowMeshes&lt;/code&gt; in 0.XX has been changed to a bool parameter of &lt;code&gt;ToUnityAsset&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UniVRM10.ComponentBuilder.Build10&lt;/code&gt; will set up components (Meta, BlendShape, LookAt, etc.) for the VRM GameObject&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;System.IO&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UnityEngine&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MyClass&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MonoBehaviour&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; * VRM import
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; *
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; * @return vrm object
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; */&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;GameObject&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Import&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// file path
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;../YourModel.vrm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UniVRM10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VrmLoader&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CreateVrmModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// build UniVRM-0.XX model&amp;#39;s components
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;assets&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UniVRM10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;RuntimeUnityBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ToUnityAsset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;showMesh&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// enable renderer when RuntimeUnityBuilder.ToUnity(showMesh = false)
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;foreach&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;renderer&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;assets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Renderers&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;renderer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;enabled&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// avoid culling
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;renderer&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SkinnedMeshRenderer&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;skinned&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;skinned&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;updateWhenOffscreen&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;UniVRM10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ComponentBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Build10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;assets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;vrmObject&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;assets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Root&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; 　　　　　　
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;vrmObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;export&#34;&gt;Export&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The class &lt;code&gt;VRM.VRMExporter&lt;/code&gt;, which is used to export VRM data (&lt;code&gt;UniGLTF.gltfExporter.Export&lt;/code&gt;), has been removed. In UniVRM-1.XX the UniVRM exporter will first transfer the VRM data (&lt;code&gt;RuntimeVrmConverter.ToModelFrom10&lt;/code&gt;) from the VRM GameObject to &lt;code&gt;VrmLib.Model&lt;/code&gt; then save to VRM file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Vrm10.ModelExtensions.ToGlb&lt;/code&gt; will transfer the data from &lt;code&gt;VrmLib.Model&lt;/code&gt; to glb. Note that glb format is exchangeable with VRM. The coordinate transformation between Unity and GLTF is &lt;code&gt;VrmLib.ModelExtensionsForCoordinates.ConvertCoordinate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example-1&#34;&gt;Example&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;System.IO&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UnityEngine&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MyClass&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MonoBehaviour&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; * VRM export
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; */&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Export&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// file path
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;importPath&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;../YourModel.vrm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;importedModel&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UniVRM10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VrmLoader&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CreateVrmModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;importPath&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;assets&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UniVRM10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;RuntimeUnityBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ToUnityAsset&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;importedModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;UniVRM10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ComponentBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Build10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;importedModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;assets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;　
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// export with UniVRM1.0
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;exporter&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UniVRM10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;RuntimeVrmConverter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;exporter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ToModelFrom10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;assets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Root&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// transform to right-handed coordinate system
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VrmLib&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ModelExtensionsForCoordinates&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ConvertCoordinate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VrmLib&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Coordinates&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Gltf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;exportedBytes&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Vrm10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ModelExtensions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ToGlb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// write out VRM1.0 file
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;vrm10.vrm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;WriteAllBytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;exportedBytes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;lookat&#34;&gt;LookAt&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;LookAt related classes &lt;code&gt;VRM.VRMLookAtBoneApplyer&lt;/code&gt;, &lt;code&gt;VRM.VRMLookAtBlendShapeApplyer&lt;/code&gt; and &lt;code&gt;VRM.VRMLookAtHead&lt;/code&gt; has been integrated into &lt;code&gt;UniVRM10.VRMController&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VRM.LookAtType&lt;/code&gt; has been changed to &lt;code&gt;UniVRM10.VRMController.LookAtTypes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VRMLookAtHead.Target&lt;/code&gt; has been replaced with &lt;code&gt;VRMController.Gaze&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;UniVRM10.VRMController.LookAtTargetTypes&lt;/code&gt;. You can choose to get yaw/pitch angle relative to head automatically or specify yaw/pitch angle&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example-2&#34;&gt;Example&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;System.IO&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UnityEngine&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UniVRM10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MyClass&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MonoBehaviour&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt; [SerializeField]&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;GameObject&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;_vrmModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt; [SerializeField]&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;GameObject&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;_targetObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SpecifyLookAtTarget&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;_vrmModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetComponent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VRMController&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;();&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LookAtTargetType&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VRMController&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LookAtTargetTypes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CalcYawPitchToGaze&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// specify LookAt target
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;_vrmModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetComponent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VRMController&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;().&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Gaze&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;_targetObject&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;transform&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// get yaw/pitch angle relative to head
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;yaw&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pitch&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetLookAtYawPitch&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SpecifyYawPitchAngle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;_vrmModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetComponent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VRMController&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;();&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LookAtTargetType&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VRMController&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LookAtTargetTypes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetYawPitch&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// specify yaw/pitch angle
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetLookAtYawPitch&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ...
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Docs: How to export</title><link>https://vrm.dev/en/dev/univrm-1.xx/how_to_export/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-1.xx/how_to_export/</guid><description>
&lt;p&gt;The export procedure has a slight change from the UniVRM-0.XX:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The model should be placed at the origin and face towards +Z(axis) direction. If necessary, please make the model as T-pose manually. Force &lt;code&gt;T-Pose&lt;/code&gt; feature has been removed in UniVRM-1.XX&lt;/li&gt;
&lt;li&gt;Right click the selected model in Hierarchy window and select [UniVRM-1.0.0] - [Export VRM]. The export window will then prompt&lt;/li&gt;
&lt;li&gt;In the export window, click &lt;code&gt;Export&lt;/code&gt; button&lt;/li&gt;
&lt;li&gt;Select a file path you want to save your model in the dialog&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The selected model can be judged whether it can be exported as VRM format in the export window. The exportable VRM model must fulfill requirements below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An Animator component has been added and a Humanoid avatar has been set to the root (a.k.a. topmost parent) of the VRM game object&lt;/li&gt;
&lt;li&gt;Entered the information in the following three necessary items in Meta
&lt;ul&gt;
&lt;li&gt;Title&lt;/li&gt;
&lt;li&gt;Version&lt;/li&gt;
&lt;li&gt;Authors
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Docs: Load VRM model made from VRM-0.X</title><link>https://vrm.dev/en/dev/univrm-1.xx/load_vrm-0.x_model/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-1.xx/load_vrm-0.x_model/</guid><description>
&lt;h2 id=&#34;about-meta-conversion&#34;&gt;About Meta Conversion&lt;/h2&gt;
&lt;p&gt;The VRM-0.X model will be converted to VRM1.0 at import.&lt;/p&gt;
&lt;p&gt;TODO:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keep the same items&lt;/li&gt;
&lt;li&gt;New items are default to &lt;code&gt;Usage&lt;/code&gt; false&lt;/li&gt;
&lt;li&gt;Items whose contents changed in VRM1.0 are default to &lt;code&gt;Usage&lt;/code&gt; false&lt;/li&gt;
&lt;li&gt;Redistribution-related is &lt;code&gt;OtherURL&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Docs: UniVRM Import/Export Examples</title><link>https://vrm.dev/en/dev/univrm-1.xx/use_vrm/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-1.xx/use_vrm/</guid><description>
&lt;h2 id=&#34;editorimport&#34;&gt;EditorImport&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Import VRM and generate its prefab&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;editorexport&#34;&gt;EditorExport&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Export VRM made from the scene in Editor mode&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;runtimeimport&#34;&gt;RunTimeImport&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRMUtility&#34; target=&#34;_blank&#34;&gt;https://github.com/vrm-c/UniVRMUtility&lt;/a&gt; SimpleViewer, VRMViewer&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;runtimeexport&#34;&gt;RuntimeExport&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRMUtility&#34; target=&#34;_blank&#34;&gt;https://github.com/vrm-c/UniVRMUtility&lt;/a&gt; PrimMan. Export box man as VRM format through the program at runtime&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Docs: UniVRM-1.XX and UniVRM-0.XX coexistence</title><link>https://vrm.dev/en/dev/univrm-1.xx/use_with_univrm-0.xx/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-1.xx/use_with_univrm-0.xx/</guid><description>
&lt;p&gt;Both UniVRM-1.XX and UniVRM-0.XX importers work.&lt;/p&gt;
&lt;p&gt;The uniVRM-0.XX importer can be stopped by defining the c# symbol &lt;code&gt;VRM_STOP_ASSETPOSTPROCESSOR&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;code&gt;Edit&lt;/code&gt; -&amp;gt; &lt;code&gt;preference&lt;/code&gt; -&amp;gt; &lt;code&gt;UniVRM&lt;/code&gt; and check &lt;code&gt;StopVrmAssetPostProcessor&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;code&gt;Edit&lt;/code&gt; -&amp;gt; &lt;code&gt;project settings&lt;/code&gt; -&amp;gt; &lt;code&gt;other settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Scripting Define Symbols&lt;/code&gt; and add &lt;code&gt;VRM_STOP_ASSETPOSTPROCESSOR&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Docs: Unity Assets Handling Changes</title><link>https://vrm.dev/en/dev/univrm-1.xx/unity_assets/</link><pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate><guid>https://vrm.dev/en/dev/univrm-1.xx/unity_assets/</guid><description>
&lt;p&gt;In UniVRM1.XX, we adopt &lt;a href=&#34;https://docs.unity3d.com/ScriptReference/Experimental.AssetImporters.ScriptedImporter.html&#34; target=&#34;_blank&#34;&gt;ScriptedImporter&lt;/a&gt;, which has different asset handling behaviors compared with &lt;a href=&#34;https://docs.unity3d.com/ScriptReference/AssetPostprocessor.html&#34; target=&#34;_blank&#34;&gt;AssetPostprocessor&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;0-xx&#34;&gt;0.xx&lt;/h2&gt;
&lt;p&gt;Put &lt;code&gt;model.vrm&lt;/code&gt; in the Assets folder =&amp;gt; AssetPostprocessor is triggered for files with extension &lt;code&gt;.vrm&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Extract Texture from vrm&lt;/li&gt;
&lt;li&gt;Extract Material from vrm&lt;/li&gt;
&lt;li&gt;Extract Mesh from vrm vrm&lt;/li&gt;
&lt;li&gt;Extract BlendShape from vrm&lt;/li&gt;
&lt;li&gt;Construct Prefab from the extracted assets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Many assets are generated in the Assets folder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;model.vrm&lt;/li&gt;
&lt;li&gt;model.vrm.meta&lt;/li&gt;
&lt;li&gt;model.prefab&lt;/li&gt;
&lt;li&gt;model.prefab.meta&lt;/li&gt;
&lt;li&gt;model.Materials.meta&lt;/li&gt;
&lt;li&gt;model.Materials/*.assets&lt;/li&gt;
&lt;li&gt;model.Materials/*.meta&lt;/li&gt;
&lt;li&gt;&amp;hellip;etc&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-0&#34;&gt;1.0&lt;/h2&gt;
&lt;p&gt;Put &lt;code&gt;model.vrm&lt;/code&gt; in the Assets folder =&amp;gt; ScriptedImporter is triggered for files with extension &lt;code&gt;.vrm&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ScriptedImporter asset can be created&lt;/li&gt;
&lt;li&gt;Extracted textures from vrm will be a sub-asset of ScriptedImporter&amp;rsquo;s asset(readonly)&lt;/li&gt;
&lt;li&gt;Extracted materials from vrm will be a sub-asset of ScriptedImporter&amp;rsquo;s asset(readonly)&lt;/li&gt;
&lt;li&gt;Extracted meshes from vrm will be a sub-asset of ScriptedImporter&amp;rsquo;s asset(readonly)&lt;/li&gt;
&lt;li&gt;Extracted blendshapes from vrm will be a sub-asset of ScriptedImporter&amp;rsquo;s asset(readonly)&lt;/li&gt;
&lt;li&gt;Construct Prefab from extracted assets and make it as a sub-asset of ScriptedImporter&amp;rsquo;s asset(readonly)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Only one asset is generated in the Assets folder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;model.vrm&lt;/li&gt;
&lt;li&gt;model.vrm.meta&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;extract&#34;&gt;Extract&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ScriptedImporter&lt;/code&gt; asset cannot be modified with readonly state.
To make it modifiable, select components you want to extract and click &lt;code&gt;Extract&lt;/code&gt; button in the Prefab&amp;rsquo;s inspector window (same as &lt;code&gt;Extract&lt;/code&gt; in fbx importer)
&lt;code&gt;Extract&lt;/code&gt; is not required if there is no intention to modify it.&lt;/p&gt;</description></item></channel></rss>